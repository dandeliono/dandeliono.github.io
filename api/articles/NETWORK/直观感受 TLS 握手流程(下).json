{"title":"直观感受 TLS 握手流程(下)","uid":"6097fb5f130a2c4c51fe513482d1af88","slug":"NETWORK/直观感受 TLS 握手流程(下)","date":"2024-03-08T10:08:28.000Z","updated":"2025-09-30T03:26:56.680Z","comments":true,"path":"api/articles/NETWORK/直观感受 TLS 握手流程(下).json","keywords":"XuGuangSheng","cover":"/covers/tls.jpg","content":"<h1 id=\"直观感受-TLS-握手流程-下\"><a href=\"#直观感受-TLS-握手流程-下\" class=\"headerlink\" title=\"直观感受 TLS 握手流程(下)\"></a>直观感受 TLS 握手流程(下)</h1><p>在 HTTPS 开篇的文章中，笔者分析了 HTTPS 之所以安全的原因是因为 TLS 协议的存在。TLS 能保证信息安全和完整性的协议是记录层协议。(记录层协议在上一篇文章中详细分析了)。看完上篇文章的读者可能会感到疑惑，TLS 协议层加密的密钥是哪里来的呢？客户端和服务端究竟是如何协商 Security Parameters 加密参数的？这篇文章就来详细的分析一下 TLS 1.2 和 TLS 1.3 在 TLS 握手层上的异同点。</p>\n<p>TLS 1.3 在 TLS 1.2 的基础上，针对 TLS 握手协议最大的改进在于提升速度和安全性。本篇文章会重点分析这两块。</p>\n<p>先简述一下 TLS 1.3 的一些优化和改进:</p>\n<ol>\n<li><p>减少握手等待时间，将握手时间从 2-RTT 降低到 1-RTT，并且增加 0-RTT 模式。</p>\n</li>\n<li><p>删除 RSA 密钥协商方式，静态的 Diffie-Hellman 密码套件也被删除了。因为 RSA 不支持前向加密性。TLS 1.3 只支持 (EC)DHE 的密钥协商算法。删除了 RSA 的方式以后，能有效预防<a href=\"https://en.wikipedia.org/wiki/Heartbleed\">心脏出血</a>的攻击。<strong>所有基于公钥的密钥交换算法现在都能提供前向安全</strong>。TLS 1.3 规范中只支持 5 种密钥套件，TLS13-AES-256-GCM-SHA384、TLS13-CHACHA20-POLY1305-SHA256、TLS13-AES-128-GCM-SHA256、TLS13-AES-128-CCM-8-SHA256、TLS13-AES-128-CCM-SHA256，隐藏了非对称加密密钥协商算法，因为默认都是椭圆曲线密钥协商。</p>\n</li>\n<li><p>删除对称加密中，分组加密和 MAC 导致的一些隐患。在 TLS1.3 之前的版本中，选择的是 MAC-then-Encrypt 方式。但是这种方式带来了一些漏洞，例如 <a href=\"https://www.youtube.com/watch?v=-_8-2pDFvmg\">BEAST</a>，一系列填充 oracle 漏洞(<a href=\"http://www.isg.rhul.ac.uk/tls/Lucky13.html\">Lucky 13</a> 和 <a href=\"https://eprint.iacr.org/2015/1129\">Lucky Microseconds</a>)。CBC 模式和填充之间的交互也是 SSLv3 和一些 TLS 实现中广泛宣传的 <a href=\"https://blog.cloudflare.com/sslv3-support-disabled-by-default-due-to-vulnerability/\">POODLE</a> 漏洞原因。在 TLS 1.3 中，已移除所有有安全隐患的密码和密码模式。你不能再使用 CBC 模式密码或不安全的流式密码，如 RC4 。TLS 1.3 中允许的唯一类型的对称加密是一种称为 AEAD（authenticated encryption with additional data）的新结构，它将加密性和完整性整合到一个无缝操作中。</p>\n</li>\n<li><p>在 TLS 1.3中，删除了 PKCS＃1 v1.5 的支持，而选择更新的设计 RSA-PSS，提高了安全性。认证方面通过非对称算法，例如，RSA, 椭圆曲线数字签名算法(ECDSA)，或 Edwards 曲线数字签名算法(EdDSA)完成，或通过一个对称的预共享密钥（PSK)。</p>\n</li>\n<li><p>在 TLS 1.2 的握手流程中，只有 ChangeCipherSpec 之后的消息会被加密，如 Finished 消息和 NewSessionTicket，其他的握手子消息不会加密。TLS 1.3 针对这个问题，对握手中大部分子消息全部进行加密处理。这样可以有效的预防 FREAK，LogJam 和 CurveSwap 这些降级攻击(降级攻击是中间人利用协商，强制使通信双方使用能被支持的最低强度的加密算法，从而暴力攻击计算出密钥，允许攻击者在握手时伪造 MAC)。在TLS 1.3中，这种类型的降级攻击是不可能的，因为服务器现在签署了整个握手，包括密码协商。</p>\n</li>\n</ol>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/120_1.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/120_2.png\"></p>\n<ol start=\"6\">\n<li>TLS 1.3 完全禁止重协商。</li>\n<li>密钥导出函数被重新设计，由 TLS 1.2 的 PRF 算法改为更加安全的 HKDF 算法。</li>\n<li>废除 Session ID 和 Session Ticket 会话恢复方式，统一通过 PSK 的方式进行会话恢复，并在 NewSessionTicket 消息中添加过期时间和用于混淆时间的偏移值。</li>\n</ol>\n<p>更多重要的变更，见笔者之前的文章 <a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Introduction.md#%E4%B8%89tls-13-%E5%92%8C-tls-12-%E4%B8%BB%E8%A6%81%E7%9A%84%E4%B8%8D%E5%90%8C\">《TLS 1.3 Introduction》</a></p>\n<h2 id=\"七-TLS-1-3-首次握手流程\"><a href=\"#七-TLS-1-3-首次握手流程\" class=\"headerlink\" title=\"七. TLS 1.3 首次握手流程\"></a>七. TLS 1.3 首次握手流程</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>由于笔者在之前的某篇文章中已经将 TLS 1.3 握手流程的细节分析过了，所以这篇文章中不会像上篇分析 TLS 1.2 中那么详细，如果想了解 TLS 1.3 中细节，请阅读这篇文章<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md\">《TLS 1.3 Handshake Protocol》</a>。本篇文章主要从 wireshark 角度带读者直观感受 TLS 1.3 的握手流程。</p></blockquote>\n<p>在 TLS 1.3 中，存在 4 种密钥协商的方法:</p>\n<ul>\n<li>Client 支持的加密套件列表。密码套件里面中能体现出 Client 支持的 AEAD 算法或者 HKDF 哈希对。</li>\n<li>“supported_groups” 的扩展 和 “key_share” 扩展。“supported_groups” 这个扩展表明了 Client 支持的 (EC)DHE groups，”key_share” 扩展表明了 Client 是否包含了一些或者全部的（EC）DHE共享。</li>\n<li>“signature_algorithms” 签名算法和 “signature_algorithms_cert” 签名证书算法的扩展。”signature_algorithms” 这个扩展展示了 Client 可以支持了签名算法有哪些。”signature_algorithms_cert” 这个扩展展示了具体证书的签名算法。</li>\n<li>“pre_shared_key” 预共享密钥和 “psk_key_exchange_modes” 扩展。预共享密钥扩展包含了 Client 可以识别的对称密钥标识。”psk_key_exchange_modes” 扩展表明了可能可以和 psk 一起使用的密钥交换模式。</li>\n</ul>\n<p>第一种方法是 TLS 1.2 中已经存在的，通过 ClientHello 中的 Cipher Suites 进行协商。第二种方法是 TLS 1.3 新增的，在 TLS 1.3 中完整握手就是通过这种方法实现的。第三种方法也是 TLS 1.3 新增的。这种方法没有第二种方法用的多。第四种方法也是 TLS 1.3 新增的，它将 TLS 1.2 中 Session ID 和 Session Ticket 废除以后，统一通过 PSK 的方式进行会话恢复。TLS 1.3 中的 0-RTT 模式也是通过 PSK 进行的。</p>\n<p>TLS 1.3 完整握手的流程如下：</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\">Client                                               Server</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">         ClientHello</span></span><br><span class=\"line\"><span class=\"language-xml\">         + key_share               --------&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                                                         ServerHello</span></span><br><span class=\"line\"><span class=\"language-xml\">                                                         + key_share</span></span><br><span class=\"line\"><span class=\"language-xml\">                                               </span><span class=\"template-variable\">&#123;EncryptedExtensions&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">                                               </span><span class=\"template-variable\">&#123;CertificateRequest*&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">                                                      </span><span class=\"template-variable\">&#123;Certificate*&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">                                                </span><span class=\"template-variable\">&#123;CertificateVerify*&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">                                                          </span><span class=\"template-variable\">&#123;Finished&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">                                   &lt;--------     [Application Data*]</span></span><br><span class=\"line\"><span class=\"language-xml\">         </span><span class=\"template-variable\">&#123;Certificate*&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">         </span><span class=\"template-variable\">&#123;CertificateVerify*&#125;</span><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">         </span><span class=\"template-variable\">&#123;Finished&#125;</span><span class=\"language-xml\">                --------&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                                   &lt;--------      [NewSessionTicket]</span></span><br><span class=\"line\"><span class=\"language-xml\">         [Application Data]        &lt;-------&gt;      [Application Data] </span></span><br></pre></td></tr></table></figure>\n\n<p>在 TLS 1.3 握手中，主要能分为 3 个阶段:</p>\n<ul>\n<li>密钥交换：建立共享密钥数据并选择密码参数。在这个阶段之后所有的数据都会被加密。</li>\n<li>Server 参数：建立其它的握手参数（Client 是否被认证，应用层协议支持等）。</li>\n<li>认证：认证 Server（并且选择性认证 Client），提供密钥确认和握手完整性。</li>\n</ul>\n<p>密钥交换是 ClientHello 和 ServerHello，Server 参数是 EncryptedExtensions 和 CertificateRequest 消息。认证是 Certificate、CertificateVerify、Finished。</p>\n<p>Client 发起完整握手流程从 ClientHello 开始：</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uint16 ProtocolVersion;</span><br><span class=\"line\">     opaque Random[32];</span><br><span class=\"line\"></span><br><span class=\"line\">     uint8 CipherSuite[2];    </span><br><span class=\"line\"></span><br><span class=\"line\">     struct &#123;</span><br><span class=\"line\">         ProtocolVersion legacy_<span class=\"keyword\">version</span> = 0x0303;    </span><br><span class=\"line\">         Random random;</span><br><span class=\"line\">         opaque legacy_session_id&lt;0.<span class=\"string\">.32</span>&gt;;</span><br><span class=\"line\">         CipherSuite cipher_suites&lt;2.<span class=\"string\">.2</span>^16-2&gt;;</span><br><span class=\"line\">         opaque legacy_compression_methods&lt;1.<span class=\"string\">.2</span>^8-1&gt;;</span><br><span class=\"line\">         Extension extensions&lt;8.<span class=\"string\">.2</span>^16-1&gt;;</span><br><span class=\"line\">     &#125; ClientHello; </span><br></pre></td></tr></table></figure>\n\n<p>在 ClientHello 结构体重，legacy_version &#x3D; 0x0303，0x0303 是 TLS 1.2 的版本号，这个字段规定必须设置成这个值。其他字段和 TLS 1.2 含义相同，不再赘述了。</p>\n<p>在 TLS 1.3 的 ClientHello 的 Extension 中，一定会有 supported_versions 这个字段，如果这个字段，ClientHello 会被解读成 TLS 1.2 的 ClientHello 消息。在 TLS 1.3 中 Server 根据 supported_versions 这个字段来决定是否协商 TLS 1.3 。</p>\n<p>TLS 1.3 之所以能比 TLS 1.2 完整握手减少 1-RTT 的原因就在 ClientHello 中就已经包含了 (EC)DHE 所需要的密钥参数，不需要像 TLS 1.2 中额外用第二次 RTT 来进行 DH 协商参数。在 TLS 1.3 的 ClientHello 的 Extension 中，带有 key_share 扩展，这个扩展中包含了 Client 所能支持的 (EC)DHE 算法的密钥参数。并且 Extension 中还会有 supported_groups 扩展，这个扩展表明了 Client 支持的用于密钥交换的命名组。按照优先级从高到低。</p>\n<p>Server 收到 ClientHello 以后，回应一条 ServerHello 消息：</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct &#123;</span><br><span class=\"line\">         ProtocolVersion legacy_<span class=\"keyword\">version</span> = 0x0303;    </span><br><span class=\"line\">         Random random;</span><br><span class=\"line\">         opaque legacy_session_id_<span class=\"keyword\">echo</span>&lt;0.<span class=\"string\">.32</span>&gt;;</span><br><span class=\"line\">         CipherSuite cipher_suite;</span><br><span class=\"line\">         uint8 legacy_compression_method = 0;</span><br><span class=\"line\">         Extension extensions&lt;6.<span class=\"string\">.2</span>^16-1&gt;;</span><br><span class=\"line\">     &#125; ServerHello; </span><br></pre></td></tr></table></figure>\n\n<p>在 ServerHello 消息中，legacy_version &#x3D; 0x0303，这个也是 TLS 1.3 规范的规定，这个值必须固定填 0x0303(TLS 1.2)。Server 会读取 ClientHello 扩展中 “supported_versions” 扩展字段，如果 Client 能支持 TLS 1.3，那么 Server 在 ServerHello 扩展中的 “supported_versions” 扩展字段标识可以进行 TLS 1.3 的握手。</p>\n<p>Server 在协商 TLS 1.3 之前的版本，必须要设置 ServerHello.version，不能发送 “supported_versions” 扩展。Server 在协商 TLS 1.3 版本时候，必须发送 “supported_versions” 扩展作为响应，并且扩展中要包含选择的 TLS 1.3 版本号(0x0304)。还要设置 ServerHello.legacy_version 为 0x0303(TLS 1.2)。Client 必须在处理 ServerHello 之前检查此扩展(尽管需要先解析 ServerHello 以便读取扩展名)。如果 “supported_versions” 扩展存在，Client 必须忽略 ServerHello.legacy_version 的值，只使用 “supported_versions” 中的值确定选择的版本。如果 ServerHello 中的 “supported_versions” 扩展包含了 Client 没有提供的版本，或者是包含了 TLS 1.3 之前的版本(本来是协商 TLS 1.3 的，却又包含了 TLS 1.3 之前的版本)，Client 必须立即发送 “illegal_parameter” alert 消息中止握手。</p>\n<p>在 ServerHello 的 Extension 中必须要有的这 2 个扩展，supported_versions、key_share(如果是 PSK 会话恢复方式，还必须包含 pre_shared_key)。key_share 扩展标识了 Server 选择了 Client 支持的哪一个椭圆曲线，以及它对应的密钥协商所需参数。这里有两种情况，一种是协商 Diffie-Hellman 参数，具体分析见<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#1-diffie-hellman-parameters\">这一章节</a>，另外一种协商是 ECDHE 参数，具体分析见<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#2-ecdhe-parameters\">这一章节</a>。</p>\n<p>key_share 传输过程中并没有使用私钥加密，整个过程的不可抵赖和防篡改是通过 CertificateVerify 验证 Server 持有私钥，以及 Finished 消息使用 HMAC 验证历史消息来确定的。</p>\n<p>发完 ServerHello 消息以后，Server 会继续发送 EncryptedExtensions 和 CertificateRequest 消息，如果对 Client 不进行认证，就不需要发送 CertificateRequest 消息。上面这 2 条消息都是加密的，通过 server_handshake_traffic_secret 中派生的密钥加密的。</p>\n<p>early secret 和 ecdhe secret 导出 server_handshake_traffic_secret。再从 server_handshake_traffic_secret中导出 key 和 iv，使用该 key 和 iv 对 Server hello 之后的握手消息加密。同样的计算 client_handshake_traffic_secret，使用对应的 key 和 iv 进行解密后续的握手消息。</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Early Secret = HKDF-Extract(<span class=\"name\">salt</span>, IKM) = HKDF-Extract(<span class=\"number\">0</span>, PSK) = HKDF-Extract(<span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">      Handshake Secret = HKDF-Extract(<span class=\"name\">salt</span>, IKM) = HKDF-Extract(<span class=\"name\">Derive-Secret</span>(<span class=\"name\">Early</span> Secret, <span class=\"string\">&quot;derived&quot;</span>, <span class=\"string\">&quot;&quot;</span>), (<span class=\"name\">EC</span>)DHE)</span><br><span class=\"line\"></span><br><span class=\"line\">      client_handshake_traffic_secret = Derive-Secret(<span class=\"name\">Handshake</span> Secret, <span class=\"string\">&quot;c hs traffic&quot;</span>, ClientHello...ServerHello)</span><br><span class=\"line\">      server_handshake_traffic_secret = Derive-Secret(<span class=\"name\">Handshake</span> Secret, <span class=\"string\">&quot;s hs traffic&quot;</span>, ClientHello...ServerHello)</span><br><span class=\"line\"></span><br><span class=\"line\">      client_write_key = HKDF-Expand-Label(<span class=\"name\">client_handshake_traffic_secret</span>, <span class=\"string\">&quot;key&quot;</span>, <span class=\"string\">&quot;&quot;</span>, key_length)</span><br><span class=\"line\">      client_write_iv  = HKDF-Expand-Label(<span class=\"name\">client_handshake_traffic_secret</span>, <span class=\"string\">&quot;iv&quot;</span>, <span class=\"string\">&quot;&quot;</span>, iv_length)</span><br><span class=\"line\"></span><br><span class=\"line\">      server_write_key = HKDF-Expand-Label(<span class=\"name\">server_handshake_traffic_secret</span>, <span class=\"string\">&quot;key&quot;</span>, <span class=\"string\">&quot;&quot;</span>, key_length)</span><br><span class=\"line\">      server_write_iv  = HKDF-Expand-Label(<span class=\"name\">server_handshake_traffic_secret</span>, <span class=\"string\">&quot;iv&quot;</span>, <span class=\"string\">&quot;&quot;</span>, iv_length) </span><br></pre></td></tr></table></figure>\n\n<p>EncryptedExtensions 消息包含应该被保护的扩展。即，任何不需要建立加密上下文但不与各个证书相互关联的扩展。比如 ALPN 扩展。Client 必须检查 EncryptedExtensions 消息中是否存在任何禁止的扩展，如果有发现禁止的扩展，必须立即用 “illegal_parameter” alert 消息中止握手。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Structure of <span class=\"keyword\">this</span> message:</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">         Extension extensions&lt;<span class=\"number\">0.</span><span class=\"number\">.2</span>^<span class=\"number\">16</span><span class=\"number\">-1</span>&gt;;</span><br><span class=\"line\">     &#125; EncryptedExtensions; </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>extensions:<br>扩展列表。</li>\n</ul>\n<p>CertificateRequest 消息细节，见<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#2-certificate-request\">这一章节</a></p>\n<p>接下来 Server 还要继续发送 Certificate、CertificateVerify、Finished 消息。这 3 条消息是握手消息的最后 3 条消息。这 3 条消息使用从 sender_handshake_traffic_secret 派生出来的密钥进行加密。</p>\n<p>Server 发送自己的 Certificate 给 Client，在 Certificate 消息中，有 4 种情况，第一种包含了 OCSP Status and SCT Extensions，细节请看<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#1-ocsp-status-and-sct-extensions\">这一章节</a>，第二种包含了 Server Certificate Selection，细节请看<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#2-server-certificate-selection\">这一章节</a>，第三种包含了 Client Certificate Selection，细节请看<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#3-client-certificate-selection\">这一章节</a>，最后一种包含了 Receiving a Certificate Message，细节请看<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#4-receiving-a-certificate-message\">这一章节</a>。</p>\n<p>Server 发送完 Certificate 消息以后，紧接着是 CertificateVerify 消息。Server 将当前所有的握手消息进行签名，具体验证过程见<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#3-certificate-verify\">这一章节</a>。</p>\n<p>最后一条消息是 Finished 消息。它对提供握手和计算密钥的身份验证起了至关重要的作用。</p>\n<p>用于计算 Finished 消息的密钥是使用 HKDF，特别的:</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">finished_key</span> <span class=\"operator\">=</span></span><br><span class=\"line\">      <span class=\"variable\">HKDF</span><span class=\"operator\">-</span><span class=\"built_in\">Expand</span><span class=\"operator\">-</span><span class=\"built_in\">Label</span><span class=\"punctuation\">(</span><span class=\"variable\">BaseKey</span><span class=\"operator\">,</span> <span class=\"string\">&quot;finished&quot;</span><span class=\"operator\">,</span> <span class=\"string\">&quot;&quot;</span><span class=\"operator\">,</span> <span class=\"built_in\">Hash</span><span class=\"operator\">.</span><span class=\"variable\">length</span><span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<p>BaseKey 是 handshake_traffic_secret。</p>\n<p>这条消息的数据结构是:</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct &#123;</span><br><span class=\"line\">         opaque verify_data[Hash.length]<span class=\"comment\">;</span></span><br><span class=\"line\">     &#125; Finished<span class=\"comment\">; </span></span><br></pre></td></tr></table></figure>\n\n<p>verify_data 按照如下方法计算:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">verify<span class=\"emphasis\">_data =</span></span><br><span class=\"line\"><span class=\"emphasis\">         HMAC(finished_</span>key,</span><br><span class=\"line\"><span class=\"code\">              Transcript-Hash(Handshake Context,</span></span><br><span class=\"line\"><span class=\"code\">                              Certificate*, CertificateVerify*))</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"bullet\">     *</span> Only included if present. </span><br></pre></td></tr></table></figure>\n\n<p>HMAC <a href=\"https://tools.ietf.org/html/rfc2104\">[RFC2104]</a> 使用哈希算法进行握手。如上所述，HMAC 输入通常是通过动态的哈希实现的，即，此时仅是握手的哈希。</p>\n<p>在以前版本的 TLS 中，verify_data 的长度总是 12 个八位字节。在 TLS 1.3 中，它是用来表示握手的哈希的 HMAC 输出的大小。</p>\n<p><strong>注意：警报和任何其他非握手记录类型不是握手消息，并且不包含在哈希计算中</strong>。</p>\n<p>Finished 消息之后的任何记录都必须在适当的应用程序流量密钥下加密。特别是，这包括 Server 为了响应 Client 的 Certificate 消息和 CertificateVerify 消息而发送的任何 alert。</p>\n<p>Finish 消息发送完后，再导出最终对称加密的密钥。从 Handshake Secret 中导出 master secret，再从 master secret 导出两个方向的对称密钥 key 和 iv。</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Master</span> <span class=\"title\">Secret</span> = HKDF-Extract(salt, IKM) = HKDF-Extract(Derive-Secret(Handshake Secret, <span class=\"string\">&quot;derived&quot;</span>, <span class=\"string\">&quot;&quot;</span>), <span class=\"number\">0</span>)</span><br><span class=\"line\">      client_application_traffic_secret_0 = Derive-Secret(<span class=\"keyword\">Master</span> <span class=\"title\">Secret</span>, <span class=\"string\">&quot;c ap traffic&quot;</span>, ClientHello...server Finished)</span><br><span class=\"line\">      server_application_traffic_secret_0 = Derive-Secret(<span class=\"keyword\">Master</span> <span class=\"title\">Secret</span>, <span class=\"string\">&quot;s ap traffic&quot;</span>, ClientHello...server Finished) </span><br></pre></td></tr></table></figure>\n\n<p>Finished 消息发送以后，在完整握手的流程中，Server 收到 Client 的 Finished 消息后，验证完后，还需要发送 NewSessionTicket 消息。通过 master secret 和整个握手的摘要，计算最后的 resumption secret。</p>\n<p>NewSessionTicket 使用 server_application_traffic_secret 加密。在加密的 ticket过程中，TLS 1.3 相比 TLS 1.2，还包含了当前的创建时间，因此可以方便的配置和验证 ticket 的过期时间。</p>\n<p>注意：虽然恢复主密钥取决于 Client 的第二次 flight，但是不请求 Client 身份验证的 Server 可以独立计算转录哈希的剩余部分，然后在发送 Finished 消息后立即发送 NewSessionTicket 而不是等待 Client 的 Finished 消息。这可能适用于 Client 需要并行打开多个 TLS 连接并且可以从减少恢复握手的开销中受益的情况。</p>\n<figure class=\"highlight bnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct &#123;</span><br><span class=\"line\">         uint32 ticket_lifetime;</span><br><span class=\"line\">         uint32 ticket_age_add;</span><br><span class=\"line\">         opaque ticket_nonce<span class=\"attribute\">&lt;0..255&gt;</span>;</span><br><span class=\"line\">         opaque ticket<span class=\"attribute\">&lt;1..2^16-1&gt;</span>;</span><br><span class=\"line\">         Extension extensions<span class=\"attribute\">&lt;0..2^16-2&gt;</span>;</span><br><span class=\"line\">     &#125; NewSessionTicket; </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>ticket_lifetime：<br>这个字段表示 ticket 的生存时间，这个时间是以 ticket 发布时间为网络字节顺序的 32 位无符号整数表示以秒为单位的时间。Server 禁止使用任何大于 604800 秒(7 天)的值。值为零表示应立即丢弃 ticket。无论 ticket_lifetime 如何，Client 都不得缓存超过 7 天的 ticket，并且可以根据本地策略提前删除 ticket。Server 可以将 ticket 视为有效的时间段短于 ticket_lifetime 中所述的时间段。**这是 TLS 1.2 和 TLS 1.3 的区别，TLS 1.2 中并不包含 ticket 有效时间段(即生存时间)**。</p>\n</li>\n<li><p>ticket_age_add:<br>安全的生成的随机 32 位值，用于模糊 Client 在 “pre_shared_key” 扩展中包含的 ticket 的时间。Client 的 ticket age 以模 2 ^ 32 的形式添加此值，以计算出 Client 要传输的值。Server 必须为它发出的每个 ticket 生成一个新值。</p>\n</li>\n<li><p>ticket_nonce:<br>每一个 ticket 的值，在本次连接中发出的所有的 ticket 中是唯一的。</p>\n</li>\n<li><p>ticket:<br>这个值是被用作 PSK 标识的值。ticket 本身是一个不透明的标签。它可以是数据库查找键，也可以是自加密和自我验证的值。</p>\n</li>\n<li><p>extensions：<br>ticket 的一组扩展值。Client 必须忽略无法识别的扩展。</p>\n</li>\n</ul>\n<p>当前为 NewSessionTicket 定义的唯一扩展名是 “early_data”，表示该 ticket 可用于发送 0-RTT 数据。 它包含以下值：</p>\n<ul>\n<li>max_early_data_size:<br>这个字段表示使用 ticket 时允许 Client 发送的最大 0-RTT 数据量(以字节为单位)。数据量仅计算应用数据有效载荷(即，明文但不填充或内部内容类型字节)。Server 如果接收的数据大小超过了 max_early_data_size 字节的 0-RTT 数据，应该立即使用 “unexpected_message” alert 消息终止连接。请注意，由于缺少加密材料而拒绝 early data 的 Server 将无法区分内容中的填充部分，因此 Client 不应该依赖于能够在 early data 记录中发送大量填充内容。</li>\n</ul>\n<p>PSK 关联的 ticket 计算方法如下：</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">HKDF</span><span class=\"operator\">-</span><span class=\"built_in\">Expand</span><span class=\"operator\">-</span><span class=\"built_in\">Label</span><span class=\"punctuation\">(</span><span class=\"type\">resumption_master</span><span class=\"type\">_secret</span><span class=\"operator\">,</span></span><br><span class=\"line\">                       <span class=\"string\">&quot;resumption&quot;</span><span class=\"operator\">,</span> <span class=\"type\">ticket_nonce</span><span class=\"operator\">,</span> <span class=\"built_in\">Hash</span><span class=\"operator\">.</span><span class=\"variable\">length</span><span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<p>因为 ticket_nonce 值对于每个 NewSessionTicket 消息都是不同的，所以每个 ticket 会派生出不同的 PSK。</p>\n<p>请注意，原则上可以继续发布新 ticket，该 ticket 无限期地延长生命周期，这个生命周期是最初从初始非 PSK 握手中(最可能与对等证书相关联)派生得到的密钥材料的生命周期。</p>\n<p>建议实现方对密钥材料这些加上总寿命时间的限制。这些限制应考虑到对等方证书的生命周期，干预撤销的可能性以及自从对等方在线 CertificateVerify 签名到当前时间的这段时间。</p>\n<p>完整握手的流程图如下：</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_54.png\"></p>\n<p>握手完成以后，还可能受到 KeyUpdate 的子消息。这个子消息是负责更新密钥以保证 AEAD 安全性的 Key Update(KU) 消息。</p>\n<p>TLS 协议的最终目的是协商出会话过程使用的对称密钥和加密算法，双方最终使用该密钥和对称加密算法对消息进行加密。AEAD（Authenticated_Encrypted_with_associated_data）是 TLS 1.3 中唯一保留和支持的加密方式。AEAD 将完整性校验和数据加密两种功能集成在同一算法中完成。TLS 1.2 还支持流加密和 CBC 分组模式的块加密方法，使用 MAC 来进行完整性校验数据，这两种方式均被证明有一定的安全缺陷。</p>\n<p>但是即使是 AEAD 仍然有<a href=\"http://link.zhihu.com/?target=http://www.isg.rhul.ac.uk/~kp/TLS-AEbounds.pdf\">研究表明</a>它有一定局限性：使用同一密钥加密的明文达到一定长度后，就不能再保证密文的安全性。因此，TLS 1.3 中引入了密钥更新机制，一方可以（通常是服务器）向另一方发送 Key Update（KU）消息，对方收到消息后对当前会话密钥再使用一次 HKDF，计算出新的会话密钥，使用该密钥完成后续的通信。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果想了解更多关于 Key Update 消息的，可以看笔者之前的这篇文章 <a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#3-key-and-initialization-vector-update\">《Key and Initialization Vector Update》</a></p></blockquote>\n<h2 id=\"八-直观感受-TLS-1-3-首次握手流程\"><a href=\"#八-直观感受-TLS-1-3-首次握手流程\" class=\"headerlink\" title=\"八. 直观感受 TLS 1.3 首次握手流程\"></a>八. 直观感受 TLS 1.3 首次握手流程</h2><p>这一章，笔者用 wireshark 抓取 TLS 1.3 握手流程中的数据包，让读者直观感受一下 TLS 1.3 握手流程。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_21.png\"></p>\n<p>上图是 TLS 1.3 中的 ClientHello 消息。在这个消息的结构中，与 TLS 1.2 差别主要在扩展上。TLS 1.2 中有的扩展，TLS 1.3 也有，但是 TLS 1.3 中多了一些重要的扩展。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_22.png\"></p>\n<p>上图是 TLS 1.3 中 ClientHello 首次完整握手中所有的扩展。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_23.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_24.png\"></p>\n<p>展开这些扩展，可以看到，TLS 1.2 中有的扩展，TLS 1.3 都包含。并且数据结构也都没有发生变化。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_25.png\"></p>\n<p>这是 TLS 1.3 新增的 key_share 扩展。在这个扩展中，包含了 Client 所能支持的椭圆曲线类型和对应的 (EC)DHE 密钥协商参数。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_26.png\"></p>\n<p>psk_key_exchange_modes 也是 TLS 1.3 中新增的扩展，这个扩展语意是 Client 仅支持使用具有这些模式的 PSK。这就限制了在这个 ClientHello 中提供的 PSK 的使用，也限制了 Server 通过 NewSessionTicket 提供的 PSK 的使用。</p>\n<p>psk_ke: 代表仅 PSK 密钥建立。在这种模式下，Server 不能提供 “key_share” 值。</p>\n<p>psk_dhe_ke: PSK 和 (EC)DHE 建立。在这种模式下，Client 和 Server 必须提供 “key_share” 值。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_27.png\"></p>\n<p>supported_versions 是 TLS 1.3 中必带的扩展，如果没有这个扩展，Server 会认为 Client 只能支持 TLS 1.2，于是接下来的握手会进行 TLS 1.2 的握手流程。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_28_.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_28_0.png\"></p>\n<p>在 ServerHello 中回应 Client，supported_versions 扩展中包含了协商以后的协议版本。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_29.png\"></p>\n<p>在 ServerHello 中也会带上 Server 的密钥协商参数，放在 key_share 扩展中。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_30.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_31.png\"></p>\n<p>EncryptedExtensions 子消息中会带和任何不需要建立加密上下文但不与各个证书相互关联的扩展，比如这里的 server_name 和 ALPN 扩展。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_33.png\"></p>\n<p>Certificate 消息中会带上 OCSP Response 扩展。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/97_20.png\"></p>\n<p>ChangeCipherSpec 和 Finished 消息与 TLS 1.2 中没有区别。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_32.png\"></p>\n<p>首次完整握手完成以后，还会发送 NewSessionTicket 消息。在这个消息中会带 early_data 的扩展。如果有这个扩展，就表明 Server 可以支持 0-RTT。如果没有带这个扩展，如下图:</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/97_21.png\"></p>\n<p>如果没有带这个扩展，表明 Server 不支持 0-RTT，Client 在下次会话恢复的时候不要发送 early_data 扩展。</p>\n<h2 id=\"九-TLS-1-3-会话恢复\"><a href=\"#九-TLS-1-3-会话恢复\" class=\"headerlink\" title=\"九. TLS 1.3 会话恢复\"></a>九. TLS 1.3 会话恢复</h2><p>这里网上很多文章对 TLS 1.3 第二次握手有误解。经过自己实践以后发现了“真理”。</p>\n<p>TLS 1.3 在宣传的时候就以 0-RTT 为主，大家都会认为 TLS 1.3 再第二次握手的时候都是 0-RTT 的，包括网上一些分析的文章里面提到的最新的 PSK 密钥协商，PSK 密钥协商并非是 0-RTT 的。</p>\n<p>TLS 1.3 再次握手其实是分两种：会话恢复模式、0-RTT 模式。非 0-RTT 的会话恢复模式和 TLS 1.2 在耗时上没有提升，都是 1-RTT，只不过比 TLS 1.2 更加安全了。只有在 0-RTT 的会话恢复模式下，TLS 1.3 才比 TLS 1.2 有提升。具体提升对比见下表:</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>HTTP&#x2F;2 + TLS 1.2 首次连接</th>\n<th>HTTP&#x2F;2 + TLS 1.2 会话恢复</th>\n<th>HTTP&#x2F;2 + TLS 1.3 首次连接</th>\n<th>HTTP&#x2F;2 + TLS 1.3 会话恢复</th>\n<th>HTTP&#x2F;2 + TLS 1.3 0-RTT</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DNS 解析</td>\n<td>1-RTT</td>\n<td>0-RTT</td>\n<td>1-RTT</td>\n<td>0-RTT</td>\n<td>0-RTT</td>\n</tr>\n<tr>\n<td>TCP 握手</td>\n<td>1-RTT</td>\n<td>1-RTT</td>\n<td>1-RTT</td>\n<td>1-RTT</td>\n<td>1-RTT</td>\n</tr>\n<tr>\n<td>TLS 握手</td>\n<td>2-RTT</td>\n<td>1-RTT</td>\n<td>1-RTT</td>\n<td>1-RTT</td>\n<td>0-RTT</td>\n</tr>\n<tr>\n<td>HTTP 请求</td>\n<td>1-RTT</td>\n<td>1-RTT</td>\n<td>1-RTT</td>\n<td>1-RTT</td>\n<td>1-RTT</td>\n</tr>\n<tr>\n<td>总计</td>\n<td>5-RTT</td>\n<td>3-RTT</td>\n<td>4-RTT</td>\n<td>3-RTT</td>\n<td>2-RTT</td>\n</tr>\n</tbody></table>\n<p>如果开启 TCP 的 TFO，收到第一个 HTTPS 响应包的时间，可以在上表的基础上再减少一个 RTT。</p>\n<p>在完整握手中，Client 在收到 Finished 消息以后，还会收到 NewSessionTicket 消息。</p>\n<figure class=\"highlight bnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct &#123;</span><br><span class=\"line\">         uint32 ticket_lifetime;</span><br><span class=\"line\">         uint32 ticket_age_add;</span><br><span class=\"line\">         opaque ticket_nonce<span class=\"attribute\">&lt;0..255&gt;</span>;</span><br><span class=\"line\">         opaque ticket<span class=\"attribute\">&lt;1..2^16-1&gt;</span>;</span><br><span class=\"line\">         Extension extensions<span class=\"attribute\">&lt;0..2^16-2&gt;</span>;</span><br><span class=\"line\">     &#125; NewSessionTicket; </span><br></pre></td></tr></table></figure>\n\n<p>Server 将 ticket_nonce 和发送 Finished 子消息后计算的 resumption_master_secret 一起作为 HKDF-Expand-Label 的入参，计算 NewSessionTicket 中的 ticket 字段：</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">PskIdentity</span><span class=\"operator\">.</span><span class=\"variable\">identity</span> <span class=\"operator\">=</span> <span class=\"variable\">ticket</span> </span><br><span class=\"line\">    \t\t\t\t\t  <span class=\"operator\">=</span> <span class=\"variable\">HKDF</span><span class=\"operator\">-</span><span class=\"built_in\">Expand</span><span class=\"operator\">-</span><span class=\"built_in\">Label</span><span class=\"punctuation\">(</span><span class=\"type\">resumption_master</span><span class=\"type\">_secret</span><span class=\"operator\">,</span> <span class=\"string\">&quot;resumption&quot;</span><span class=\"operator\">,</span> <span class=\"type\">ticket_nonce</span><span class=\"operator\">,</span> <span class=\"built_in\">Hash</span><span class=\"operator\">.</span><span class=\"variable\">length</span><span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<p><strong>TLS 1.2 和 TLS 1.3 的区别，TLS 1.2 中 NewSessionTicket 是主密钥，而 TLS 1.3 中 ticket 只是一个 PSK</strong>。Client 收到 NewSessionTicket 以后就可以生成 PskIdentity 了，如果有多个 PskIdentity，就都放在 identities 数组中。binders 数组中是与 identities 顺序一一对应的 HMAC 值 PskBinderEntry。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">         opaque identity&lt;<span class=\"number\">1.</span><span class=\"number\">.2</span>^<span class=\"number\">16</span><span class=\"number\">-1</span>&gt;;</span><br><span class=\"line\">         <span class=\"type\">uint32</span> obfuscated_ticket_age;</span><br><span class=\"line\">     &#125; PskIdentity;</span><br><span class=\"line\"></span><br><span class=\"line\">     opaque PskBinderEntry&lt;<span class=\"number\">32.</span><span class=\"number\">.255</span>&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">         PskIdentity identities&lt;<span class=\"number\">7.</span><span class=\"number\">.2</span>^<span class=\"number\">16</span><span class=\"number\">-1</span>&gt;;</span><br><span class=\"line\">         PskBinderEntry binders&lt;<span class=\"number\">33.</span><span class=\"number\">.2</span>^<span class=\"number\">16</span><span class=\"number\">-1</span>&gt;;</span><br><span class=\"line\">     &#125; OfferedPsks;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">select</span> (Handshake.msg_type) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">case</span> client_hello: OfferedPsks;</span><br><span class=\"line\">             <span class=\"keyword\">case</span> server_hello: <span class=\"type\">uint16</span> selected_identity;</span><br><span class=\"line\">         &#125;;</span><br><span class=\"line\">     &#125; PreSharedKeyExtension; </span><br></pre></td></tr></table></figure>\n\n<p>PskBinderEntry 的计算方法：</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"variable\">PskBinderEntry</span> <span class=\"operator\">=</span> <span class=\"variable\">HMAC</span><span class=\"punctuation\">(</span><span class=\"type\">binder_key</span><span class=\"operator\">,</span> <span class=\"variable\">Transcript</span><span class=\"operator\">-</span><span class=\"built_in\">Hash</span><span class=\"punctuation\">(</span><span class=\"variable\">Truncate</span><span class=\"punctuation\">(</span><span class=\"variable\">ClientHello1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">\t\t\t\t   <span class=\"operator\">=</span> <span class=\"variable\">HMAC</span><span class=\"punctuation\">(</span><span class=\"variable\">Derive</span><span class=\"operator\">-</span><span class=\"variable\">Secret</span><span class=\"punctuation\">(</span><span class=\"variable\">HKDF</span><span class=\"operator\">-</span><span class=\"built_in\">Extract</span><span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"operator\">,</span> <span class=\"variable\">PSK</span><span class=\"punctuation\">)</span><span class=\"operator\">,</span> <span class=\"string\">&quot;ext binder&quot;</span> <span class=\"operator\">|</span> <span class=\"string\">&quot;res binder&quot;</span><span class=\"operator\">,</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">,</span> <span class=\"variable\">Transcript</span><span class=\"operator\">-</span><span class=\"built_in\">Hash</span><span class=\"punctuation\">(</span><span class=\"variable\">Truncate</span><span class=\"punctuation\">(</span><span class=\"variable\">ClientHello1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">\t\t\t\t   </span><br><span class=\"line\">其中     <span class=\"type\">binder_key</span> <span class=\"operator\">=</span> <span class=\"variable\">Derive</span><span class=\"operator\">-</span><span class=\"variable\">Secret</span><span class=\"punctuation\">(</span><span class=\"variable\">HKDF</span><span class=\"operator\">-</span><span class=\"built_in\">Extract</span><span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"operator\">,</span> <span class=\"variable\">PSK</span><span class=\"punctuation\">)</span><span class=\"operator\">,</span> <span class=\"string\">&quot;ext binder&quot;</span> <span class=\"operator\">|</span> <span class=\"string\">&quot;res binder&quot;</span><span class=\"operator\">,</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<p>HMAC 会包含 PreSharedKeyExtension.identities 字段。也就是说，HMAC 包含所有的 ClientHello，但是不包含 binder list(否则就出现鸡生蛋，蛋生鸡的死循环问题了)。Truncate() 函数的作用是把 ClientHello 中的 binders list 移除。</p>\n<p>Client 可以把 PSK 保存到本地 cache 中，serverName 作为 cache 的 key。</p>\n<h3 id=\"1-会话恢复模式\"><a href=\"#1-会话恢复模式\" class=\"headerlink\" title=\"1. 会话恢复模式\"></a>1. 会话恢复模式</h3><p>TLS 1.3 中更改了会话恢复机制，废除了原有的 Session ID 和 Session TIcket 的方式，使用 PSK 的机制，同时 New Session Ticket 中添加了过期时间。TLS 1.2 中 的 ticket 不包含过期时间，可以通过 ticket key 的更新让之前所有发送的 ticket 都失效，或者在生成 ticket 的时候加入自定义可以判断过期时间的策略。</p>\n<p>在经历了一次完整握手以后，生成了 PSK，下次握手就会进入会话恢复模式，在 Client hello 中，先在本地 cache 中查找 servername 对应的 PSK，找到后在 Client hello 的 pre_shared_key 扩展中带上两部分</p>\n<ul>\n<li>Identity: NewSessionTicket 中加密的 ticket</li>\n<li>Binder: 由 PSK 导出 binder_key，使用 binder_key 对不包含 binder list 部分的 ClientHello 作 HMAC 计算。</li>\n</ul>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Early Secret = HKDF-Extract(<span class=\"number\">0</span>, PSK)</span><br><span class=\"line\">      binder_key = Derive-Secret(<span class=\"name\">Early</span> Secret, <span class=\"string\">&quot;ext binder&quot;</span> | <span class=\"string\">&quot;res binder&quot;</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">      client_early_traffic_secret = Derive-Secret(<span class=\"name\">Early</span> Secret, <span class=\"string\">&quot;c e traffic&quot;</span>, ClientHello)</span><br><span class=\"line\">      early_exporter_master_secret = Derive-Secret(<span class=\"name\">Early</span> Secret, <span class=\"string\">&quot;e exp master&quot;</span>, ClientHello) </span><br></pre></td></tr></table></figure>\n\n<p>注意：当存在多种不同类型的扩展的时候，除了 “pre_shared_key” 必须是 ClientHello 的最后一个扩展，其他的扩展间的顺序可以是任意的。(“pre_shared_key” 可以出现在 ServerHello 中扩展块中的任何位置)。不能存在多个同一个类型的扩展。</p>\n<p>通过 resumption secret 导出 PSK。PSK 会最终导出 earlyData 的加密密钥，以及 pre_shared_key 扩展中 binder 的 HMAC 密钥。发送 ClientHello 后，使用 resumption secret 导出的 PskIdentity.identity 生成 PSK，进而导出 client_early_traffic_secret 密钥，再生成 Key 和 IV，对 early data 加密后发送。</p>\n<p>Server 收到带有 PSK 的 ClientHello 以后，生成协商之后的 keyshare，并检查 Client hello 中的 pre_shared_key 扩展，解密 PskIdentity.identity(即 ticket)，查看该 ticket 是否过期，各项检查通过以后，由 PSK 导出 binder_key 并计算 client hello 的 HMAC，检查 binder 是否正确。验证完 ticket 和 binder 之后，在 ServerHello 扩展中带上 pre_shared_key 扩展，标识使用哪个 PSK 进行会话恢复。和 Client 一样，从 resumtion secret 开始导出 PSK，最终导出 earlyData 使用的密钥。后续的密钥导出规则和完整握手是一样的，唯一的区别就是会话恢复多了 PSK，它是作为 early secret 的输入密钥材料 IKM。</p>\n<p>TLS 1.3 和 TLS 1.2 在会话恢复的密钥导出上有很大不同，TLS 1.2 会话恢复会直接使用之前的 master secret，然后生成会话密钥(密钥块)。TLS 1.3 只会利用 resumption secret 导出 early data 密钥的输入密钥材料 IKM —— PSK，之后的密钥导出规则和 TLS 1.3 完整握手是一样的。</p>\n<p>发送完 ServerHello 以后，还需要继续发送 EncryptedExtensions 和 Finished 消息。不过会话恢复模式就不需要再发送 Certificate 和 CerficateVerify 消息了。只要证明了双方都持有相同的 PSK，就不再需要证书认证来证明双方的身份，这样看来，PSK 也算是一种身份认证机制。</p>\n<p>流程图如下：</p>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Client</span>                                               <span class=\"type\">Server</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">Initial</span> <span class=\"type\">Handshake</span>:</span><br><span class=\"line\">         <span class=\"type\">ClientHello</span></span><br><span class=\"line\">         + key_share               <span class=\"comment\">--------&gt;</span></span><br><span class=\"line\">                                                         <span class=\"type\">ServerHello</span></span><br><span class=\"line\">                                                         + key_share</span><br><span class=\"line\">                                               &#123;<span class=\"type\">EncryptedExtensions</span>&#125;</span><br><span class=\"line\">                                               &#123;<span class=\"type\">CertificateRequest</span>*&#125;</span><br><span class=\"line\">                                                      &#123;<span class=\"type\">Certificate</span>*&#125;</span><br><span class=\"line\">                                                &#123;<span class=\"type\">CertificateVerify</span>*&#125;</span><br><span class=\"line\">                                                          &#123;<span class=\"type\">Finished</span>&#125;</span><br><span class=\"line\">                                   &lt;-<span class=\"comment\">-------     [Application Data*]</span></span><br><span class=\"line\">         &#123;<span class=\"type\">Certificate</span>*&#125;</span><br><span class=\"line\">         &#123;<span class=\"type\">CertificateVerify</span>*&#125;</span><br><span class=\"line\">         &#123;<span class=\"type\">Finished</span>&#125;                <span class=\"comment\">--------&gt;</span></span><br><span class=\"line\">                                   &lt;-<span class=\"comment\">-------      [NewSessionTicket]</span></span><br><span class=\"line\">         [<span class=\"type\">Application</span> <span class=\"type\">Data</span>]        &lt;-<span class=\"comment\">------&gt;      [Application Data]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">Subsequent</span> <span class=\"type\">Handshake</span>:</span><br><span class=\"line\">         <span class=\"type\">ClientHello</span></span><br><span class=\"line\">         + key_share*</span><br><span class=\"line\">         + pre_shared_key          <span class=\"comment\">--------&gt;</span></span><br><span class=\"line\">                                                         <span class=\"type\">ServerHello</span></span><br><span class=\"line\">                                                    + pre_shared_key</span><br><span class=\"line\">                                                        + key_share*</span><br><span class=\"line\">                                               &#123;<span class=\"type\">EncryptedExtensions</span>&#125;</span><br><span class=\"line\">                                                          &#123;<span class=\"type\">Finished</span>&#125;</span><br><span class=\"line\">                                   &lt;-<span class=\"comment\">-------     [Application Data*]</span></span><br><span class=\"line\">         &#123;<span class=\"type\">Finished</span>&#125;                <span class=\"comment\">--------&gt;</span></span><br><span class=\"line\">         [<span class=\"type\">Application</span> <span class=\"type\">Data</span>]        &lt;-<span class=\"comment\">------&gt;      [Application Data] </span></span><br></pre></td></tr></table></figure>\n\n<p>笔者之前写过一篇关于 PSK 细节分析的文章，如果读者感兴趣，可以看<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#11-pre-shared-key-extension\">《Pre-Shared Key Extension》</a>。这里简单描述一下 PSK 扩展。</p>\n<p>“pre_shared_key” 扩展用来协商标识的，这个标识是与 PSK 密钥相关联的给定握手所使用的预共享密钥的标识。</p>\n<p>这个扩展中的 “extension_data” 字段包含一个 PreSharedKeyExtension 值:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">         opaque identity&lt;<span class=\"number\">1.</span><span class=\"number\">.2</span>^<span class=\"number\">16</span><span class=\"number\">-1</span>&gt;;</span><br><span class=\"line\">         <span class=\"type\">uint32</span> obfuscated_ticket_age;</span><br><span class=\"line\">     &#125; PskIdentity;</span><br><span class=\"line\"></span><br><span class=\"line\">     opaque PskBinderEntry&lt;<span class=\"number\">32.</span><span class=\"number\">.255</span>&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">         PskIdentity identities&lt;<span class=\"number\">7.</span><span class=\"number\">.2</span>^<span class=\"number\">16</span><span class=\"number\">-1</span>&gt;;</span><br><span class=\"line\">         PskBinderEntry binders&lt;<span class=\"number\">33.</span><span class=\"number\">.2</span>^<span class=\"number\">16</span><span class=\"number\">-1</span>&gt;;</span><br><span class=\"line\">     &#125; OfferedPsks;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">select</span> (Handshake.msg_type) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">case</span> client_hello: OfferedPsks;</span><br><span class=\"line\">             <span class=\"keyword\">case</span> server_hello: <span class=\"type\">uint16</span> selected_identity;</span><br><span class=\"line\">         &#125;;</span><br><span class=\"line\">     &#125; PreSharedKeyExtension; </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>identity:<br>key 的标签。例如，一个 ticket 或者是一个外部建立的预共享密钥的标签。</p>\n</li>\n<li><p>obfuscated_ticket_age:<br>age of the key 的混淆版本。<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_Handshake_Protocol.md#1-ticket-age\">这一章节</a>描述了通过 NewSessionTicket 消息建立，如何为标识(identities)生成这个值。对于外部建立的标识(identities)，应该使用 0 的 obfuscated_ticket_age，并且 Server 也必须忽略这个值。</p>\n</li>\n<li><p>identities:<br>Client 愿意和 Server 协商的 identities 列表。如果和 “early_data” 一起发送，第一个标识被用来标识 0-RTT 的。</p>\n</li>\n<li><p>binders:<br>一系列的 HMAC 值。和 identities 列表中的每一个值都一一对应，并且顺序一致。</p>\n</li>\n<li><p>selected_identity:<br>Server 选择的标识，这个标识是以 Client 列表中标识表示为基于 0 的索引。</p>\n</li>\n</ul>\n<p>每一个 PSK 都和单个哈希算法相关联。对于通过 ticket 建立的 PSK，当 ticket 在连接中被建立，这时候用的哈希算法是 KDF 哈希算法。对于外部建立的 PSK，当 PSK 建立的时候，哈希算法必须设置，如果没有设置，默认算法是 SHA-256。Server 必须确保它选择的是兼容的 PSK (如果有的话) 和密钥套件。</p>\n<p>在接受PSK密钥建立之前，Server 必须先验证相应的 binder 值。如果这个值不存在或者未验证，则 Server 必须立即中止握手。Server 不应该尝试去验证多个 binder，而应该选择单个 PSK 并且仅验证对应于该 PSK 的 binder。为了接受 PSK 密钥建立连接，Server 发送 “pre_shared_key” 扩展，标明它所选择的 identity。</p>\n<p>Client 必须验证 Server 的 selected_identity 是否在 Client 提供的范围之内。Server 选择的加密套件标明了与 PSK 关联的哈希算法，如果 ClientHello “psk_key_exchange_modes” 有需要，Server 还应该发送 “key_share” 扩展。如果这些值不一致，Client 必须立即用 “illegal_parameter” alert 消息中止握手。</p>\n<p>如果 Server 提供了 “early_data” 扩展，Client 必须验证 Server 的 selected_identity 是否为 0。如果返回任何其他值，Client 必须使用 “illegal_parameter” alert 消息中止握手。</p>\n<p>“pre_shared_key” 扩展必须是 ClientHello 中的最后一个扩展(这有利于下面的描述的实现)。Server 必须检查它是最后一个扩展，否则用 “illegal_parameter” alert 消息中止握手。</p>\n<h4 id=\"1-Ticket-Age\"><a href=\"#1-Ticket-Age\" class=\"headerlink\" title=\"(1) Ticket Age\"></a>(1) Ticket Age</h4><p>从 Client 的角度来看，ticket 的时间指的是，收到 NewSessionTicket 消息开始到当前时刻的这段时间。Client 决不能使用时间大于 ticket 自己标明的 “ticket_lifetime” 这个时间的 ticket。每个 PskIdentity 中的 “obfuscated_ticket_age” 字段都必须包含 ticket 时间的混淆版本，混淆方法是用 ticket 时间(毫秒为单位)加上 “ticket_age_add” 字段，最后对 2^32 取模。除非这个 ticket 被重用了，否则这个混淆就可以防止一些相关联连接的被动观察者。注意，NewSessionTicket 消息中的 “ticket_lifetime” 字段是秒为单位，但是 “obfuscated_ticket_age” 是毫秒为单位。因为 ticke lifetime 限制为一周，32 位就足够去表示任何合理的时间，即使是以毫秒为单位也可以表示。</p>\n<h4 id=\"2-PSK-Binder\"><a href=\"#2-PSK-Binder\" class=\"headerlink\" title=\"(2) PSK Binder\"></a>(2) PSK Binder</h4><p>PSK binder 的值形成了 2 种绑定关系，一种是 PSK 和当前握手的绑定，另外一种是 PSK 产生以后(如果是通过 NewSessionTicket 消息)的握手和当前握手的绑定。每一个在 binder 列表中的条目都会根据有一部分 ClientHello 的哈希副本计算 HMAC，最终 HMAC 会包含 PreSharedKeyExtension.identities 字段。也就是说，HMAC 包含所有的 ClientHello，但是不包含 binder list 。如果存在正确长度的 binders，消息的长度字段（包括总长度，扩展块的长度和 “pre_shared_key” 扩展的长度）都被设置。</p>\n<p>PskBinderEntry 的计算方法和 Finished 消息一样。但是 BaseKey 是派生的 binder_key，派生方式是通过提供的相应的 PSK 的密钥派生出来的。</p>\n<p>如果握手包括 HelloRetryRequest 消息，则初始的 ClientHello 和 HelloRetryRequest 随着新的 ClientHello 一起被包含在副本中。例如，如果 Client 发送 ClientHello，则其 binder 将通过以下方式计算：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">Transcript-Hash</span><span class=\"params\">(Truncate(ClientHello1)</span></span>) </span><br></pre></td></tr></table></figure>\n\n<p>Truncate() 函数的作用是把 ClientHello 中的 binders list 移除。</p>\n<p>如果 Server 响应了 HelloRetryRequest，那么 Client 会发送 ClientHello2，它的 binder 会通过以下方式计算：</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Transcript-Hash(<span class=\"name\">ClientHello1</span>,</span><br><span class=\"line\">                     HelloRetryRequest,</span><br><span class=\"line\">                     Truncate(<span class=\"name\">ClientHello2</span>)) </span><br></pre></td></tr></table></figure>\n\n<p>完整的 ClientHello1&#x2F;ClientHello2 都会包含在其他的握手哈希计算中。请注意，在第一次发送中，<code>Truncate(ClientHello1)</code> 是直接计算哈希的，但是在第二次发送中，ClientHello1 计算哈希，并且还会再注入一条 “message_hash” 消息。</p>\n<p>关于会话恢复密钥的一些计算流程表示出来如下：</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"string\">|</span></span><br><span class=\"line\">            v</span><br><span class=\"line\">  PSK -&gt;  HKDF-Extract = Early Secret</span><br><span class=\"line\">            <span class=\"string\">|</span></span><br><span class=\"line\">            +-----&gt; Derive-Secret(., <span class=\"string\">&quot;ext binder&quot;</span> <span class=\"string\">| &quot;</span>res binder<span class=\"string\">&quot;, &quot;&quot;)</span></span><br><span class=\"line\">            <span class=\"string\">|                     = binder_key</span></span><br><span class=\"line\">            <span class=\"string\">|</span></span><br><span class=\"line\">            +-----&gt; Derive-Secret(., <span class=\"string\">&quot;c e traffic&quot;</span>, ClientHello)</span><br><span class=\"line\">            <span class=\"string\">|                     = client_early_traffic_secret</span></span><br><span class=\"line\">            <span class=\"string\">|</span></span><br><span class=\"line\">            +-----&gt; Derive-Secret(., <span class=\"string\">&quot;e exp master&quot;</span>, ClientHello)</span><br><span class=\"line\">            <span class=\"string\">|                     = early_exporter_master_secret</span></span><br><span class=\"line\">            v</span><br><span class=\"line\">      Derive-Secret(., <span class=\"string\">&quot;derived&quot;</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">            <span class=\"string\">|</span></span><br><span class=\"line\">            v </span><br></pre></td></tr></table></figure>\n\n<p>PSK 会话恢复的流程图如下：</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_55_.png\"></p>\n<h3 id=\"2-0-RTT-模式\"><a href=\"#2-0-RTT-模式\" class=\"headerlink\" title=\"2. 0-RTT 模式\"></a>2. 0-RTT 模式</h3><p>先来看看 0-RTT 在整个草案里面的变更历史。</p>\n<table>\n<thead>\n<tr>\n<th>草案</th>\n<th>变更</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>draft-07</td>\n<td>0-RTT 最早是在 draft-07 中加入了基础的支持</td>\n</tr>\n<tr>\n<td>draft-11</td>\n<td>1. 在 draft-11 中删除了early_handshake内容类型</td>\n</tr>\n<tr>\n<td>2. 使用一个 alert 终止 0-RTT 数据</td>\n<td></td>\n</tr>\n<tr>\n<td>draft-13</td>\n<td>1. 删除 0-RTT 客户端身份验证</td>\n</tr>\n<tr>\n<td>2. 删除 (EC)DHE 0-RTT</td>\n<td></td>\n</tr>\n<tr>\n<td>3. 充实 0-RTT PSK 模式并 shrink EarlyDataIndication</td>\n<td></td>\n</tr>\n<tr>\n<td>draft-14</td>\n<td>1. 移除了 0-RTT EncryptedExtensions</td>\n</tr>\n<tr>\n<td>2. 降低使用 0-RTT 的门槛</td>\n<td></td>\n</tr>\n<tr>\n<td>3. 阐明 0-RTT 向后兼容性</td>\n<td></td>\n</tr>\n<tr>\n<td>4. 说明 0-RTT 和 PSK 密钥协商的相互关系</td>\n<td></td>\n</tr>\n<tr>\n<td>draft-15</td>\n<td>讨论 0-RTT 时间窗口</td>\n</tr>\n<tr>\n<td>draft-16</td>\n<td>1. 禁止使用 0-RTT 和 PSK 的 CertificateRequest</td>\n</tr>\n<tr>\n<td>2. 放宽要求检查 SNI 的 0-RTT</td>\n<td></td>\n</tr>\n<tr>\n<td>draft-17</td>\n<td>1. 删除 0-RTT Finished 和 resumption_context，并替换为 PSK 本身的 psk_binder 字段</td>\n</tr>\n<tr>\n<td>2. 协调密码套件匹配的要求：会话恢复只需要匹配 KDF 但是对于 0-RTT 需要匹配整个密码套件。允许 PSK 实际去协商密码套件</td>\n<td></td>\n</tr>\n<tr>\n<td>3. 阐明允许使用 PSK 进行 0-RTT 的条件</td>\n<td></td>\n</tr>\n<tr>\n<td>draft-21</td>\n<td>关于 0-RTT 和重放的讨论，建议实现一些反重放机制</td>\n</tr>\n</tbody></table>\n<p>从历史来看，人们从功能问题讨论到性能问题，最后讨论到安全问题。</p>\n<p>据 Google 统计，全网有 60% 的网站访问流量是来自于新访问的网站和过去曾经访问过但是隔了一段时间再次访问。这部分流量在 TLS 1.3 的优化下，已经从 2-RTT 降低到 1-RTT 了。剩下 40% 的网站访问流量是来自于会话恢复，TLS 1.3 废除了之前的 Session ID 和 Session Ticket 的会话恢复的方式，统一成了 PSK 方式，使得原有会话恢复变的更加安全。但是 TLS 1.3 的会话恢复并没有降低 RTT，依旧停留在了 1-RTT。为了进一步降低延迟，于是提出了 0-RTT 的概念。0-RTT 能让用户有更快更顺滑更好的用户体验，在移动网络上更加明显。</p>\n<p>TLS 1.3 的里程碑标志就是添加了 0-RTT 会话恢复模式。也就是说，当 client 和 server 共享一个 PSK（从外部获得或通过一个以前的握手获得）时，TLS 1.3 允许 client 在第一个发送出去的消息中携带数据（”early data”）。Client 使用这个 PSK 生成 client_early_traffic_secret 并用它加密 early data。Server 收到这个 ClientHello 之后，用 ClientHello 扩展中的 PSK 导出 client_early_traffic_secret 并用它解密 early data。</p>\n<p>0-RTT 会话恢复模式如下：</p>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Client</span>                                               <span class=\"type\">Server</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">ClientHello</span></span><br><span class=\"line\">        + early_data</span><br><span class=\"line\">        + key_share*</span><br><span class=\"line\">        + psk_key_exchange_modes</span><br><span class=\"line\">        + pre_shared_key</span><br><span class=\"line\">        (<span class=\"type\">Application</span> <span class=\"type\">Data</span>*)     <span class=\"comment\">--------&gt;</span></span><br><span class=\"line\">                                                        <span class=\"type\">ServerHello</span></span><br><span class=\"line\">                                                   + pre_shared_key</span><br><span class=\"line\">                                                       + key_share*</span><br><span class=\"line\">                                              &#123;<span class=\"type\">EncryptedExtensions</span>&#125;</span><br><span class=\"line\">                                                      + early_data*</span><br><span class=\"line\">                                                         &#123;<span class=\"type\">Finished</span>&#125;</span><br><span class=\"line\">                                &lt;-<span class=\"comment\">-------       [Application Data*]</span></span><br><span class=\"line\">        (<span class=\"type\">EndOfEarlyData</span>)</span><br><span class=\"line\">        &#123;<span class=\"type\">Finished</span>&#125;              <span class=\"comment\">--------&gt;</span></span><br><span class=\"line\">        [<span class=\"type\">Application</span> <span class=\"type\">Data</span>]      &lt;-<span class=\"comment\">------&gt;        [Application Data] </span></span><br></pre></td></tr></table></figure>\n\n<p>想实现 0-RTT 也是有一些条件的，条件比较苛刻，如果条件有一条不满足，会话恢复都只能是 1-RTT 的 PSK 会话恢复模式。</p>\n<p>0-RTT 的<strong>开启条件</strong>是：</p>\n<ul>\n<li><ol>\n<li>Server 在前一次完整握手中，发送了 NewSessionTicket，并且 Session ticket 中存在max_early_data_size 扩展表示愿意接受 early data。如果没有这个扩展，0-RTT 无法开启。</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>在 PSK 会话恢复的过程中，ClientHello 的扩展中配置了 early data 扩展，表示 Client 想要开启 0-RTT 模式。</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>Server 在 Encrypted Extensions 消息中携带了 early data 扩展表示同意读取 early data。0-RTT 模式开启成功。</li>\n</ol>\n</li>\n</ul>\n<p>只有同时满足了上面 3 个条件，才能开启 0-RTT 会话恢复模式。否则握手会是 1-RTT 的会话恢复模式。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>目前不少浏览器虽然支持 TLS 1.3 协议，但是还不支持发送 early data，所以它们也没法启用 0-RTT 模式的会话恢复。</p></blockquote>\n<p>从 0-RTT 的开启条件中就能看出它和上面 1-RTT 会话恢复的区别。ClientHello 中需要带 early_data 的扩展，Server 要在 Encrypted Extensions 消息中携带了 early_data 扩展，Client 发送完 early_data 数据以后，还需要回一个 EndOfEarlyData 的子消息。</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> &#123;&#125; EndOfEarlyData; </span><br></pre></td></tr></table></figure>\n\n<p>Client 在发送 early_data 之后，可以一直发 early_data 数据。如果 Server 在 EncryptedExtensions 中发送了 “early_data” 扩展，则 Client 必须在收到 Server 的 Finished 消息后发送 EndOfEarlyData 消息。 如果 Server 没有在 EncryptedExtensions中发送 “early_data” 扩展，那么 Client 禁止发送 EndOfEarlyData 子消息。此消息表示已传输完了所有 0-RTT application_data消息(如果有)，并且接下来的记录受到握手流量密钥的保护。Server 不能发送此消息，Client 如果收到了这条消息，那么必须使用 “unexpected_message” alert 消息终止连接。这条消息使用从 client_early_traffic_secret 中派生出来的密钥进行加密保护。</p>\n<p><strong>注意</strong>: early data 并不参与最后的 Finished 校验计算，其次，EndOfEarlyData 子消息也不参与最后 application traffic secret 的计算。</p>\n<p>Server 在接收到 ClientHello 以后，应立即发送 ServerHello、ChangeCipherSpec、EncryptedExtensions、Finished 子消息。</p>\n<p>Server 想拒绝 Client 的 0-RTT 会话恢复，只要打破 3 个开启条件即可：</p>\n<ul>\n<li>拒绝 PSK。Server 在 ServerHello 中不加入 pre_shared_key 扩展，那么握手就会回退到完整握手，自然拒绝了 0-RTT。</li>\n<li>只拒绝 early_data，接受 PSK。在 ServerHello 中，加入 pre_shared_key 扩展，但是EncryptedExtension 子消息中不加入 early_data 扩展。</li>\n</ul>\n<p>Client 即使发送握手消息还是带有 early_data 扩展，但是 Server 导出的密钥已经是 server&#x2F;client_handshake_traffic_secret 而不是 client_early_traffic_secret 了，也无法解密 early_data 内容。解密失败出现错误就丢弃这个扩展，忽略它。于是 0-RTT 就会降级到 1-RTT。</p>\n<p>0-RTT 握手的流程图如下：</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_56_.png\"></p>\n<p>虽然 TLS 1.3 革命性的提出了 0-RTT 会话恢复模式，但是 0-RTT 存在安全性风险。0-RTT 数据安全性比其他类型的 TLS 数据要弱一些，特别是：</p>\n<ol>\n<li>0-RTT 的数据是没有前向安全性的，它使用的是被提供的 PSK 中导出的密钥进行加密的。</li>\n<li>在多个连接之间不能保证不存在重放攻击。普通的 TLS 1.3 1-RTT 数据为了防止重放攻击的保护方法是使用 server 下发的随机数，现在 0-RTT 不依赖于 ServerHello 消息，因此保护措施更差。如果数据与 TLS client 认证或与应用协议里一起验证，这一点安全性的考虑尤其重要。这个警告适用于任何使用 early_exporter_master_secret 的情况。</li>\n</ol>\n<p>TLS 1.3 0-RTT 中要预防重放攻击。预防 0-RTT 有 4 种措施：</p>\n<ul>\n<li><p>第一个措施检查 PSK 中的过期时间，如果过期了，就不处理 early_data 中的请求，并且将握手降级到 1-RTT。</p>\n</li>\n<li><p>第二个措施是不允许非幂等性的请求出现在 0-RTT 中，如果出现了非幂等性的请求，Server 将会忽略不处理，GET 请求是幂等性的，但是也不能允许后面带参数，不带参数的 GET 请求才能允许。</p>\n</li>\n<li><p>第三个措施是，在请求头中记录 PSK binder 的值或者一个随机值，这个值能保证 0-RTT 的 early_data 全局唯一，这样就可以防止重放攻击。当收到 ClientHello 时，Server 首先验证 PSK binder。然后它会计算 expected_arrival_time，如果它在记录窗口之外，则拒绝 0-RTT，然后回到 1-RTT 握手。如果 expected_arrival_time 在窗口中，则 Server 检查它是否记录了匹配的 ClientHello。如果找到一个，它将使用 “illegal_parameter” alert 消息中止握手或接受 PSK 但拒绝 0-RTT。如果找不到匹配的 ClientHello，则它接受 0-RTT，然后只要 expected_arrival_time 在窗口内，就存储 ClientHello。Server 也可以实现具有误报的数据存储，例如布隆过滤器，在这种情况下，它们必须通过拒绝 0-RTT 来响应明显的重放，但绝不能中止握手。关于这一个措施，还可能存在多个 binder 的情况，如果是分布式系统，还会存在多个 zone 的问题，具体分析见笔者这篇文章 <a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_0-RTT.md\">《TLS 1.3 0-RTT and Anti-Replay》</a>。</p>\n</li>\n<li><p>第四个措施是，在数据库里面记录所有未完成有效的 ticket，使用一次就删除掉，如果产生重放攻击，那么这个 ticket 必然是数据库里面查不到的，那么就回退到完整握手。</p>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关于 0-RTT 安全性的问题，笔者专门写了一篇文章探讨这个问题，见<a href=\"https://github.com/halfrost/Halfrost-Field/blob/master/contents/Protocol/TLS_1.3_0-RTT.md\">《TLS 1.3 0-RTT and Anti-Replay》</a></p></blockquote>\n<h2 id=\"十-直观感受-TLS-1-3-会话恢复\"><a href=\"#十-直观感受-TLS-1-3-会话恢复\" class=\"headerlink\" title=\"十. 直观感受 TLS 1.3 会话恢复\"></a>十. 直观感受 TLS 1.3 会话恢复</h2><p>这一章，笔者用 wireshark 抓取 TLS 1.3 会话恢复中的数据包，让读者直观感受一下 TLS 1.3 会话恢复流程。</p>\n<h3 id=\"1-PSK-会话恢复\"><a href=\"#1-PSK-会话恢复\" class=\"headerlink\" title=\"1. PSK 会话恢复\"></a>1. PSK 会话恢复</h3><p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_34.png\"></p>\n<p>这是 TLS 1.3 会话恢复的完整流程。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_35.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_36.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_37.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_38.png\"></p>\n<p>上面这 4 个扩展是 TLS 1.3 PSK 会话恢复中 ClientHello 必须配置的。psk_key_exchange_modes、pre_shared_key、key_share、supported_versions。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_39.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_40.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_41.png\"></p>\n<p>上面这 3 个扩展是 TLS 1.3 PSK 会话恢复中 ServerHello 必须配置的。pre_shared_key、key_share、supported_versions。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_42.png\"></p>\n<p>一旦 PSK 校验完成，Server 就不需要再次发送证书了，直接回应 ChangeCipherSpec、Encrypted Extensions、Finished 即可完成会话恢复。</p>\n<h3 id=\"2-0-RTT\"><a href=\"#2-0-RTT\" class=\"headerlink\" title=\"2. 0-RTT\"></a>2. 0-RTT</h3><p>截止到笔者写这篇文章为止，当前主流浏览器对 TLS 1.3 的支持度如下图。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_53.png\"></p>\n<p>Google Chrome Canary 最新 74.0.3702.0 还不能支持 0-RTT 模式，Firefox Nightly 最新 67.0a1 可以支持 0-RTT 模式(在 about:config 中 security.tls.enable_0rtt_data 设置为 true)，Safari 最新的 12.0.3 (14606.4.5) 还不能支持 0-RTT 模式。所以笔者只能用 Firefox Nightly 抓取 0-RTT 的包。</p>\n<p>当然 OpenSSL 最新版 1.1.1a 的 Client 是支持发送 early_data 的，也就是支持 0-RTT 的，用它来调试 TLS 1.3 0-RTT 也更加方便。</p>\n<p>先来看看支持 0-RTT 的 Firefox Nightly 抓到的包是怎么样的。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_43_.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_44.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_45.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_46.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_47.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_48.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_49.png\"></p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_50.png\"></p>\n<p>可以发现整个会话恢复过程满足了 0-RTT 的条件，所以 0-RTT 开启成功。</p>\n<p>在用 OpenSSL 的 Client 来测试测试 0-RTT。</p>\n<p>先将必要参数导出来，比如协商的密钥和 session 信息。</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$ </span>openssl s_client -connect halfrost.<span class=\"symbol\">com:</span><span class=\"number\">443</span> -tls1_3 -keylogfile=<span class=\"regexp\">/Users/ydz</span><span class=\"regexp\">/Documents/sslkeylog</span>.log -sess_out=<span class=\"regexp\">/Users/ydz</span><span class=\"regexp\">/Documents/tls</span>13.sess </span><br></pre></td></tr></table></figure>\n\n<p>输出如下:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">CONNECTED(00000006)</span></span><br><span class=\"line\"><span class=\"string\">depth=1</span> <span class=\"string\">C</span> <span class=\"string\">=</span> <span class=\"string\">US,</span> <span class=\"string\">O</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt,</span> <span class=\"string\">CN</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt</span> <span class=\"string\">Authority</span> <span class=\"string\">X3</span></span><br><span class=\"line\"><span class=\"string\">verify</span> <span class=\"string\">error:num=20:unable</span> <span class=\"string\">to</span> <span class=\"string\">get</span> <span class=\"string\">local</span> <span class=\"string\">issuer</span> <span class=\"string\">certificate</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">Certificate</span> <span class=\"string\">chain</span></span><br><span class=\"line\"> <span class=\"number\">0</span> <span class=\"string\">s:CN</span> <span class=\"string\">=</span> <span class=\"string\">halfrost.com</span></span><br><span class=\"line\">   <span class=\"string\">i:C</span> <span class=\"string\">=</span> <span class=\"string\">US,</span> <span class=\"string\">O</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt,</span> <span class=\"string\">CN</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt</span> <span class=\"string\">Authority</span> <span class=\"string\">X3</span></span><br><span class=\"line\"> <span class=\"number\">1</span> <span class=\"string\">s:C</span> <span class=\"string\">=</span> <span class=\"string\">US,</span> <span class=\"string\">O</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt,</span> <span class=\"string\">CN</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt</span> <span class=\"string\">Authority</span> <span class=\"string\">X3</span></span><br><span class=\"line\">   <span class=\"string\">i:O</span> <span class=\"string\">=</span> <span class=\"string\">Digital</span> <span class=\"string\">Signature</span> <span class=\"string\">Trust</span> <span class=\"string\">Co.,</span> <span class=\"string\">CN</span> <span class=\"string\">=</span> <span class=\"string\">DST</span> <span class=\"string\">Root</span> <span class=\"string\">CA</span> <span class=\"string\">X3</span></span><br><span class=\"line\"> <span class=\"number\">2</span> <span class=\"string\">s:C</span> <span class=\"string\">=</span> <span class=\"string\">US,</span> <span class=\"string\">O</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt,</span> <span class=\"string\">CN</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt</span> <span class=\"string\">Authority</span> <span class=\"string\">X3</span></span><br><span class=\"line\">   <span class=\"string\">i:O</span> <span class=\"string\">=</span> <span class=\"string\">Digital</span> <span class=\"string\">Signature</span> <span class=\"string\">Trust</span> <span class=\"string\">Co.,</span> <span class=\"string\">CN</span> <span class=\"string\">=</span> <span class=\"string\">DST</span> <span class=\"string\">Root</span> <span class=\"string\">CA</span> <span class=\"string\">X3</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">Server</span> <span class=\"string\">certificate</span></span><br><span class=\"line\"><span class=\"string\">-----BEGIN</span> <span class=\"string\">CERTIFICATE-----</span></span><br><span class=\"line\"><span class=\"string\">MIIEljCCA36gAwIBAgISA9VdA6rPN6mIzBxEPL/3iAICMA0GCSqGSIb3DQEBCwUA</span></span><br><span class=\"line\"><span class=\"string\">MEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD</span></span><br><span class=\"line\"><span class=\"string\">ExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMTAwMTQxMjJaFw0x</span></span><br><span class=\"line\"><span class=\"string\">OTA1MTEwMTQxMjJaMBcxFTATBgNVBAMTDGhhbGZyb3N0LmNvbTBZMBMGByqGSM49</span></span><br><span class=\"line\"><span class=\"string\">AgEGCCqGSM49AwEHA0IABA7sYzIwq29BkT1mQ2TSZRPe34BlnuqN65xoLY+A87M8</span></span><br><span class=\"line\"><span class=\"string\">PpblV0IvNyj4ZdcgiSmSZffocVF6wzck6TmsQ/j2/sujggJyMIICbjAOBgNVHQ8B</span></span><br><span class=\"line\"><span class=\"string\">Af8EBAMCB4AwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB</span></span><br><span class=\"line\"><span class=\"string\">/wQCMAAwHQYDVR0OBBYEFOD4YIpf+PkD1Jvy+eayPn0csEi/MB8GA1UdIwQYMBaA</span></span><br><span class=\"line\"><span class=\"string\">FKhKamMEfd265tE5t6ZFZe/zqOyhMG8GCCsGAQUFBwEBBGMwYTAuBggrBgEFBQcw</span></span><br><span class=\"line\"><span class=\"string\">AYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNyeXB0Lm9yZzAvBggrBgEFBQcw</span></span><br><span class=\"line\"><span class=\"string\">AoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNyeXB0Lm9yZy8wKQYDVR0RBCIw</span></span><br><span class=\"line\"><span class=\"string\">IIIMaGFsZnJv\\ghfhjghjjbmd3cuaGFsZnJvc3QuY29tMEwGA1UdIARFMEMwCAYG</span></span><br><span class=\"line\"><span class=\"string\">Z4EMAQIBMDcGCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMu</span></span><br><span class=\"line\"><span class=\"string\">bGV0c2VuY3J5cHQub3JnMIIBAwYKKwYBBAHWeQIEAgSB9ASB8QDvAHUA4mlLribo</span></span><br><span class=\"line\"><span class=\"string\">6UAJ6IYbtjuD1D7n/nSI+6SPKJMBnd3x2/4AAAFo1UfZTgAABAMARjBEAiAsXJLC</span></span><br><span class=\"line\"><span class=\"string\">A5uO2R926Dba3fZpV/zvzG9tCPVtTKAeso5bAwIgMXoLRtLqhG5bEcXIpGXJcrd0</span></span><br><span class=\"line\"><span class=\"string\">6S8tbUdS9YRAIWpMX1oAdgApPFGWVMg5ZbqqUPxYB9S3b79Yeily3KTDDPTlRUf0</span></span><br><span class=\"line\"><span class=\"string\">eAAAAWjVR9lQAAAEAwBHMEUCIHv6NJ9MWMiL+AHxU8ilL3APMmPkUcc03SjBiDaW</span></span><br><span class=\"line\"><span class=\"string\">Vm6JAiEA5YF/XHKuYH0S0+mqfB+YdT0FIey9wFQObkR4/Qvzla4wDQYJKoZIhvcN</span></span><br><span class=\"line\"><span class=\"string\">AQELBQADggEBAHU7a+EgzdhrsyD+2ch7AGD1n1TjDfdxkEjmoitN0Tjh4q3jP/IK</span></span><br><span class=\"line\"><span class=\"string\">7FPs0LBsDRusmtJVK3gZQc9cTEy/om86VQtcnV0LhK83GnFUIuLTEzeTZmnz6Qbs</span></span><br><span class=\"line\"><span class=\"string\">3KznprZH0DRUbfpmZsDNIfBEOUOXiBR4DpLd3tPVfRkQowmO6o39vM4UOGlB0zIA</span></span><br><span class=\"line\"><span class=\"string\">g977q97IT6wS9BCEiGmuF0HSjpLfiPhTy9bpl2VGcJVpIy2TS+d4+JWRI7K5BFSz</span></span><br><span class=\"line\"><span class=\"string\">ncGDzHJ+zGsx4wS+dxuiwaS9hw4c0FG2V4kMFnA+orAa/oTnfwFlRIehTbDBO+rN</span></span><br><span class=\"line\"><span class=\"string\">TNtjm4yh63M9gInoQEI1REl2EkGcWug6Ijs=</span></span><br><span class=\"line\"><span class=\"string\">-----END</span> <span class=\"string\">CERTIFICATE-----</span></span><br><span class=\"line\"><span class=\"string\">subject=CN</span> <span class=\"string\">=</span> <span class=\"string\">halfrost.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">issuer=C</span> <span class=\"string\">=</span> <span class=\"string\">US,</span> <span class=\"string\">O</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt,</span> <span class=\"string\">CN</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt</span> <span class=\"string\">Authority</span> <span class=\"string\">X3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"literal\">No</span> <span class=\"string\">client</span> <span class=\"string\">certificate</span> <span class=\"string\">CA</span> <span class=\"string\">names</span> <span class=\"string\">sent</span></span><br><span class=\"line\"><span class=\"attr\">Peer signing digest:</span> <span class=\"string\">SHA256</span></span><br><span class=\"line\"><span class=\"attr\">Peer signature type:</span> <span class=\"string\">ECDSA</span></span><br><span class=\"line\"><span class=\"attr\">Server Temp Key:</span> <span class=\"string\">X25519,</span> <span class=\"number\">253</span> <span class=\"string\">bits</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">SSL</span> <span class=\"string\">handshake</span> <span class=\"string\">has</span> <span class=\"string\">read</span> <span class=\"number\">3912 </span><span class=\"string\">bytes</span> <span class=\"string\">and</span> <span class=\"string\">written</span> <span class=\"number\">316</span> <span class=\"string\">bytes</span></span><br><span class=\"line\"><span class=\"attr\">Verification error:</span> <span class=\"string\">unable</span> <span class=\"string\">to</span> <span class=\"string\">get</span> <span class=\"string\">local</span> <span class=\"string\">issuer</span> <span class=\"string\">certificate</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">New,</span> <span class=\"string\">TLSv1.3,</span> <span class=\"string\">Cipher</span> <span class=\"string\">is</span> <span class=\"string\">TLS_AES_256_GCM_SHA384</span></span><br><span class=\"line\"><span class=\"string\">Server</span> <span class=\"string\">public</span> <span class=\"string\">key</span> <span class=\"string\">is</span> <span class=\"number\">256</span> <span class=\"string\">bit</span></span><br><span class=\"line\"><span class=\"string\">Secure</span> <span class=\"string\">Renegotiation</span> <span class=\"string\">IS</span> <span class=\"string\">NOT</span> <span class=\"string\">supported</span></span><br><span class=\"line\"><span class=\"attr\">Compression:</span> <span class=\"string\">NONE</span></span><br><span class=\"line\"><span class=\"attr\">Expansion:</span> <span class=\"string\">NONE</span></span><br><span class=\"line\"><span class=\"literal\">No</span> <span class=\"string\">ALPN</span> <span class=\"string\">negotiated</span></span><br><span class=\"line\"><span class=\"string\">Early</span> <span class=\"string\">data</span> <span class=\"string\">was</span> <span class=\"string\">not</span> <span class=\"string\">sent</span></span><br><span class=\"line\"><span class=\"attr\">Verify return code:</span> <span class=\"number\">20</span> <span class=\"string\">(unable</span> <span class=\"string\">to</span> <span class=\"string\">get</span> <span class=\"string\">local</span> <span class=\"string\">issuer</span> <span class=\"string\">certificate)</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">Post-Handshake New Session Ticket arrived:</span></span><br><span class=\"line\"><span class=\"attr\">SSL-Session:</span></span><br><span class=\"line\">    <span class=\"attr\">Protocol  :</span> <span class=\"string\">TLSv1.3</span></span><br><span class=\"line\">    <span class=\"attr\">Cipher    :</span> <span class=\"string\">TLS_AES_256_GCM_SHA384</span></span><br><span class=\"line\">    <span class=\"attr\">Session-ID:</span> <span class=\"string\">DECE5063ABC2D1162A5E767C55083FDFFA6A86B64082FE3AD990A213AE</span></span><br><span class=\"line\">    <span class=\"attr\">Session-ID-ctx:</span></span><br><span class=\"line\">    <span class=\"attr\">Resumption PSK:</span> <span class=\"string\">EACCC93ACB3DC420DF5027BEC576EE130D11BF546463034C1BB92B54806057E0C9F5C3DB557AD10D425E</span></span><br><span class=\"line\">    <span class=\"attr\">PSK identity:</span> <span class=\"string\">None</span></span><br><span class=\"line\">    <span class=\"attr\">PSK identity hint:</span> <span class=\"string\">None</span></span><br><span class=\"line\">    <span class=\"attr\">SRP username:</span> <span class=\"string\">None</span></span><br><span class=\"line\">    <span class=\"attr\">TLS session ticket lifetime hint:</span> <span class=\"number\">86400</span> <span class=\"string\">(seconds)</span></span><br><span class=\"line\">    <span class=\"attr\">TLS session ticket:</span></span><br><span class=\"line\">    <span class=\"number\">0000</span> <span class=\"bullet\">-</span> <span class=\"string\">0b</span> <span class=\"string\">8d</span> <span class=\"string\">e5</span> <span class=\"number\">44</span> <span class=\"string\">b2</span> <span class=\"number\">62</span> <span class=\"number\">71</span> <span class=\"string\">9d-f9</span> <span class=\"string\">0a</span> <span class=\"string\">ec</span> <span class=\"string\">da</span> <span class=\"string\">f0</span> <span class=\"string\">d0</span> <span class=\"string\">6a</span> <span class=\"string\">0b</span>   <span class=\"string\">...D.bq.......j.</span></span><br><span class=\"line\">    <span class=\"number\">0010</span> <span class=\"bullet\">-</span> <span class=\"number\">97</span> <span class=\"string\">5d</span> <span class=\"number\">63</span> <span class=\"number\">21</span> <span class=\"string\">ea</span> <span class=\"string\">1e</span> <span class=\"string\">8a</span> <span class=\"number\">69</span><span class=\"number\">-01</span> <span class=\"number\">52</span> <span class=\"string\">a9</span> <span class=\"string\">0a</span> <span class=\"number\">19</span> <span class=\"string\">bf</span> <span class=\"string\">5c</span> <span class=\"string\">a3</span>   <span class=\"string\">.]c!...i.R....\\.</span></span><br><span class=\"line\">    <span class=\"number\">0020</span> <span class=\"bullet\">-</span> <span class=\"number\">67</span> <span class=\"number\">45</span> <span class=\"string\">a3</span> <span class=\"string\">a0</span> <span class=\"number\">28</span> <span class=\"number\">65</span> <span class=\"string\">ea</span> <span class=\"string\">9c-c8</span> <span class=\"string\">d4</span> <span class=\"string\">cf</span> <span class=\"string\">df</span> <span class=\"string\">5d</span> <span class=\"string\">c5</span> <span class=\"string\">5a</span> <span class=\"string\">be</span>   <span class=\"string\">gE..(e......].Z.</span></span><br><span class=\"line\">    <span class=\"number\">0030</span> <span class=\"bullet\">-</span> <span class=\"number\">32</span> <span class=\"number\">45</span> <span class=\"string\">0d</span> <span class=\"string\">1e</span> <span class=\"string\">af</span> <span class=\"string\">f7</span> <span class=\"number\">32</span> <span class=\"number\">67</span><span class=\"string\">-4a</span> <span class=\"string\">d8</span> <span class=\"number\">66</span> <span class=\"string\">cb</span> <span class=\"string\">b6</span> <span class=\"string\">cb</span> <span class=\"string\">c8</span> <span class=\"string\">0e</span>   <span class=\"string\">2E....QgJ.f.....</span></span><br><span class=\"line\">    <span class=\"number\">0040</span> <span class=\"bullet\">-</span> <span class=\"string\">6b</span> <span class=\"string\">b8</span> <span class=\"number\">53</span> <span class=\"string\">a8</span> <span class=\"string\">d2</span> <span class=\"string\">d4</span> <span class=\"string\">4b</span> <span class=\"string\">7b-cc</span> <span class=\"string\">a6</span> <span class=\"string\">cb</span> <span class=\"number\">52</span> <span class=\"number\">39</span> <span class=\"number\">61</span> <span class=\"number\">20</span> <span class=\"string\">6d</span>   <span class=\"string\">k.S...K&#123;...R9a</span> <span class=\"string\">m</span></span><br><span class=\"line\">    <span class=\"number\">0050</span> <span class=\"bullet\">-</span> <span class=\"number\">75</span> <span class=\"string\">f8</span> <span class=\"string\">cb</span> <span class=\"number\">43</span> <span class=\"number\">11</span> <span class=\"string\">1d</span> <span class=\"number\">58</span> <span class=\"string\">a2-de</span> <span class=\"string\">2b</span> <span class=\"number\">74</span> <span class=\"string\">b0</span> <span class=\"string\">ca</span> <span class=\"number\">70</span> <span class=\"string\">a2</span> <span class=\"string\">9c</span>   <span class=\"string\">u..C..X..+t..p..</span></span><br><span class=\"line\">    <span class=\"number\">0060</span> <span class=\"bullet\">-</span> <span class=\"number\">85</span> <span class=\"string\">6b</span> <span class=\"string\">1a</span> <span class=\"number\">00</span> <span class=\"string\">9a</span> <span class=\"string\">f1</span> <span class=\"string\">bd</span> <span class=\"string\">9b-8c</span> <span class=\"string\">b4</span> <span class=\"string\">5a</span> <span class=\"number\">41</span> <span class=\"string\">aa</span> <span class=\"string\">4b</span> <span class=\"number\">64</span> <span class=\"string\">5d</span>   <span class=\"string\">.k........ZA.Kd]</span></span><br><span class=\"line\">    <span class=\"number\">0070</span> <span class=\"bullet\">-</span> <span class=\"string\">5a</span> <span class=\"number\">48</span> <span class=\"number\">23</span> <span class=\"string\">a6</span> <span class=\"number\">10</span> <span class=\"number\">49</span> <span class=\"string\">4f</span> <span class=\"number\">61</span><span class=\"string\">-c9</span> <span class=\"number\">57</span> <span class=\"number\">74</span> <span class=\"string\">f4</span> <span class=\"number\">56</span> <span class=\"number\">50</span> <span class=\"number\">83</span> <span class=\"string\">1a</span>   <span class=\"string\">ZH#..IOa.Wt.VP..</span></span><br><span class=\"line\">    <span class=\"number\">0080</span> <span class=\"bullet\">-</span> <span class=\"string\">1b</span> <span class=\"number\">74</span> <span class=\"string\">6c</span> <span class=\"string\">ea</span> <span class=\"number\">09</span> <span class=\"number\">99</span> <span class=\"number\">42</span> <span class=\"string\">f5-d6</span> <span class=\"string\">3c</span> <span class=\"string\">6d</span> <span class=\"string\">4f</span> <span class=\"string\">5b</span> <span class=\"number\">98</span> <span class=\"string\">ca</span> <span class=\"string\">b3</span>   <span class=\"string\">.tl...B..&lt;mO....</span></span><br><span class=\"line\">    <span class=\"number\">0090</span> <span class=\"bullet\">-</span> <span class=\"string\">c7</span> <span class=\"number\">72</span> <span class=\"number\">56</span> <span class=\"string\">5c</span> <span class=\"string\">6c</span> <span class=\"number\">67</span> <span class=\"number\">71</span> <span class=\"number\">77</span><span class=\"string\">-8d</span> <span class=\"number\">68</span> <span class=\"string\">f7</span> <span class=\"number\">54</span> <span class=\"string\">e5</span> <span class=\"string\">e3</span> <span class=\"string\">7b</span> <span class=\"string\">d3</span>   <span class=\"string\">.rV\\lgqw.h.T..&#123;.</span></span><br><span class=\"line\">    <span class=\"string\">00a0</span> <span class=\"bullet\">-</span> <span class=\"number\">24</span> <span class=\"string\">ff</span> <span class=\"number\">42</span> <span class=\"string\">0c</span> <span class=\"string\">3f</span> <span class=\"number\">12</span> <span class=\"number\">27</span> <span class=\"number\">42</span><span class=\"string\">-7f</span> <span class=\"string\">9e</span> <span class=\"string\">0a</span> <span class=\"string\">4c</span> <span class=\"string\">c2</span> <span class=\"number\">79</span> <span class=\"number\">60</span> <span class=\"number\">45</span>   <span class=\"string\">$.B.?.&#x27;B...L.y`E</span></span><br><span class=\"line\">    <span class=\"string\">00b0</span> <span class=\"bullet\">-</span> <span class=\"string\">2d</span> <span class=\"number\">77</span> <span class=\"string\">a2</span> <span class=\"string\">c8</span> <span class=\"string\">2f</span> <span class=\"string\">f5</span> <span class=\"number\">85</span> <span class=\"number\">34</span><span class=\"string\">-fa</span> <span class=\"string\">ce</span> <span class=\"number\">79</span> <span class=\"string\">ee</span> <span class=\"string\">0b</span> <span class=\"string\">ea</span> <span class=\"number\">00</span> <span class=\"string\">c1</span>   <span class=\"string\">-w../..4..y.....</span></span><br><span class=\"line\">    <span class=\"string\">00c0</span> <span class=\"bullet\">-</span> <span class=\"number\">74</span> <span class=\"number\">33</span> <span class=\"string\">f0</span> <span class=\"string\">6c</span> <span class=\"string\">af</span> <span class=\"string\">7a</span> <span class=\"string\">1a</span> <span class=\"number\">55</span><span class=\"string\">-f8</span> <span class=\"number\">35</span> <span class=\"string\">bd</span> <span class=\"string\">5e</span> <span class=\"number\">49</span> <span class=\"number\">66</span> <span class=\"string\">6f</span> <span class=\"number\">06</span>   <span class=\"string\">t3.l.z.U.5.^Ifo.</span></span><br><span class=\"line\">    <span class=\"string\">00d0</span> <span class=\"bullet\">-</span> <span class=\"string\">c6</span> <span class=\"number\">38</span> <span class=\"string\">ed</span> <span class=\"string\">a6</span> <span class=\"number\">82</span> <span class=\"string\">e2</span> <span class=\"string\">c8</span> <span class=\"number\">77</span><span class=\"number\">-99</span> <span class=\"string\">b7</span> <span class=\"number\">34</span> <span class=\"string\">9a</span> <span class=\"string\">4a</span> <span class=\"string\">9a</span> <span class=\"number\">31</span> <span class=\"number\">40</span>   <span class=\"number\">.8</span><span class=\"string\">.....w..4.J.1@</span></span><br><span class=\"line\">    <span class=\"number\">00e0</span> <span class=\"bullet\">-</span> <span class=\"string\">f1</span> <span class=\"number\">93</span> <span class=\"string\">a0</span> <span class=\"number\">94</span> <span class=\"string\">7f</span> <span class=\"string\">1e</span> <span class=\"string\">8d</span> <span class=\"string\">e0-54</span> <span class=\"number\">29</span> <span class=\"string\">dc</span> <span class=\"string\">e3</span> <span class=\"string\">6f</span> <span class=\"string\">5c</span> <span class=\"number\">93</span> <span class=\"number\">21</span>   <span class=\"string\">........T)..o\\.!</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">Start Time:</span> <span class=\"number\">1549886406</span></span><br><span class=\"line\">    <span class=\"attr\">Timeout   :</span> <span class=\"number\">7200</span> <span class=\"string\">(sec)</span></span><br><span class=\"line\">    <span class=\"attr\">Verify return code:</span> <span class=\"number\">20</span> <span class=\"string\">(unable</span> <span class=\"string\">to</span> <span class=\"string\">get</span> <span class=\"string\">local</span> <span class=\"string\">issuer</span> <span class=\"string\">certificate)</span></span><br><span class=\"line\">    <span class=\"attr\">Extended master secret:</span> <span class=\"literal\">no</span></span><br><span class=\"line\">    <span class=\"attr\">Max Early Data:</span> <span class=\"number\">16384</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">read</span> <span class=\"string\">R</span> <span class=\"string\">BLOCK</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">Post-Handshake New Session Ticket arrived:</span></span><br><span class=\"line\"><span class=\"attr\">SSL-Session:</span></span><br><span class=\"line\">    <span class=\"attr\">Protocol  :</span> <span class=\"string\">TLSv1.3</span></span><br><span class=\"line\">    <span class=\"attr\">Cipher    :</span> <span class=\"string\">TLS_AES_256_GCM_SHA384</span></span><br><span class=\"line\">    <span class=\"attr\">Session-ID:</span> <span class=\"string\">B7E28DE5DF2C95F2E3DE43732E4F9A45A8943ED3856B73CAB5E7260E7</span></span><br><span class=\"line\">    <span class=\"attr\">Session-ID-ctx:</span></span><br><span class=\"line\">    <span class=\"attr\">Resumption PSK:</span> <span class=\"string\">BF2BA2304BEB2B948F7BF6617D0KDRNFB9CD5466DEC1EB9697D2543B7BB913BC7854359D7F5DF7559D67</span></span><br><span class=\"line\">    <span class=\"attr\">PSK identity:</span> <span class=\"string\">None</span></span><br><span class=\"line\">    <span class=\"attr\">PSK identity hint:</span> <span class=\"string\">None</span></span><br><span class=\"line\">    <span class=\"attr\">SRP username:</span> <span class=\"string\">None</span></span><br><span class=\"line\">    <span class=\"attr\">TLS session ticket lifetime hint:</span> <span class=\"number\">86400</span> <span class=\"string\">(seconds)</span></span><br><span class=\"line\">    <span class=\"attr\">TLS session ticket:</span></span><br><span class=\"line\">    <span class=\"number\">0000</span> <span class=\"bullet\">-</span> <span class=\"string\">0b</span> <span class=\"string\">8d</span> <span class=\"string\">e5</span> <span class=\"number\">44</span> <span class=\"string\">b2</span> <span class=\"number\">62</span> <span class=\"number\">71</span> <span class=\"string\">9d-f9</span> <span class=\"string\">0a</span> <span class=\"string\">ec</span> <span class=\"string\">da</span> <span class=\"string\">f0</span> <span class=\"string\">d0</span> <span class=\"string\">6a</span> <span class=\"string\">0b</span>   <span class=\"string\">...D.bq.......j.</span></span><br><span class=\"line\">    <span class=\"number\">0010</span> <span class=\"bullet\">-</span> <span class=\"string\">b4</span> <span class=\"string\">9f</span> <span class=\"string\">cc</span> <span class=\"number\">17</span> <span class=\"number\">63</span> <span class=\"string\">9a</span> <span class=\"number\">70</span> <span class=\"string\">c8-63</span> <span class=\"string\">f8</span> <span class=\"string\">2e</span> <span class=\"string\">c4</span> <span class=\"string\">9f</span> <span class=\"string\">d4</span> <span class=\"string\">a1</span> <span class=\"string\">f8</span>   <span class=\"string\">....c.p.c.......</span></span><br><span class=\"line\">    <span class=\"number\">0020</span> <span class=\"bullet\">-</span> <span class=\"number\">22</span> <span class=\"number\">34</span> <span class=\"number\">22</span> <span class=\"number\">03</span> <span class=\"string\">d0</span> <span class=\"string\">f9</span> <span class=\"number\">78</span> <span class=\"number\">66</span><span class=\"string\">-a0</span> <span class=\"string\">d4</span> <span class=\"string\">2f</span> <span class=\"number\">62</span> <span class=\"number\">53</span> <span class=\"string\">d3</span> <span class=\"string\">d8</span> <span class=\"string\">e3</span>   <span class=\"string\">&quot;4&quot;</span><span class=\"string\">...xf../bS...</span></span><br><span class=\"line\">    <span class=\"number\">0030</span> <span class=\"bullet\">-</span> <span class=\"number\">55</span> <span class=\"string\">2c</span> <span class=\"string\">a5</span> <span class=\"string\">7c</span> <span class=\"string\">0b</span> <span class=\"number\">19</span> <span class=\"string\">b3</span> <span class=\"string\">fc-77</span> <span class=\"number\">55</span> <span class=\"string\">8c</span> <span class=\"string\">de</span> <span class=\"string\">0b</span> <span class=\"string\">2d</span> <span class=\"number\">00</span> <span class=\"string\">bd</span>   <span class=\"string\">U,.|....wUL..-..</span></span><br><span class=\"line\">    <span class=\"number\">0040</span> <span class=\"bullet\">-</span> <span class=\"string\">b8</span> <span class=\"string\">fa</span> <span class=\"string\">2e</span> <span class=\"number\">00</span> <span class=\"number\">30</span> <span class=\"number\">78</span> <span class=\"string\">c8</span> <span class=\"string\">dc-35</span> <span class=\"number\">14</span> <span class=\"string\">d3</span> <span class=\"number\">61</span> <span class=\"string\">f0</span> <span class=\"number\">69</span> <span class=\"number\">38</span> <span class=\"number\">59</span>   <span class=\"string\">...%0x..5..a.i8Y</span></span><br><span class=\"line\">    <span class=\"number\">0050</span> <span class=\"bullet\">-</span> <span class=\"string\">ee</span> <span class=\"string\">2a</span> <span class=\"number\">75</span> <span class=\"string\">7e</span> <span class=\"number\">50</span> <span class=\"number\">34</span> <span class=\"string\">3f</span> <span class=\"string\">e3-25</span> <span class=\"number\">04</span> <span class=\"number\">71</span> <span class=\"string\">1c</span> <span class=\"string\">6e</span> <span class=\"string\">c9</span> <span class=\"string\">c8</span> <span class=\"number\">20</span>   <span class=\"string\">.*u~P4?.%.q.n..</span></span><br><span class=\"line\">    <span class=\"number\">0060</span> <span class=\"bullet\">-</span> <span class=\"string\">d7</span> <span class=\"string\">4e</span> <span class=\"number\">44</span> <span class=\"string\">b3</span> <span class=\"number\">69</span> <span class=\"number\">56</span> <span class=\"number\">50</span> <span class=\"number\">23</span><span class=\"number\">-38</span> <span class=\"string\">c2</span> <span class=\"string\">f1</span> <span class=\"string\">1e</span> <span class=\"string\">ac</span> <span class=\"number\">10</span> <span class=\"string\">a7</span> <span class=\"string\">ff</span>   <span class=\"string\">.ND.iVP#8.......</span></span><br><span class=\"line\">    <span class=\"number\">0070</span> <span class=\"bullet\">-</span> <span class=\"number\">96</span> <span class=\"string\">cf</span> <span class=\"string\">fe</span> <span class=\"string\">ff</span> <span class=\"string\">4d</span> <span class=\"number\">07</span> <span class=\"string\">7e</span> <span class=\"number\">08</span><span class=\"string\">-2d</span> <span class=\"number\">37</span> <span class=\"number\">49</span> <span class=\"number\">78</span> <span class=\"string\">ab</span> <span class=\"string\">1d</span> <span class=\"number\">78</span> <span class=\"string\">6e</span>   <span class=\"string\">....M.~.-7Ix..xn</span></span><br><span class=\"line\">    <span class=\"number\">0080</span> <span class=\"bullet\">-</span> <span class=\"number\">62</span> <span class=\"string\">4b</span> <span class=\"number\">99</span> <span class=\"string\">e7</span> <span class=\"number\">37</span> <span class=\"number\">03</span> <span class=\"string\">3e</span> <span class=\"string\">a2-89</span> <span class=\"string\">de</span> <span class=\"number\">61</span> <span class=\"number\">48</span> <span class=\"string\">a1</span> <span class=\"string\">c5</span> <span class=\"number\">77</span> <span class=\"number\">18</span>   <span class=\"string\">bK..7.&gt;...aH..w.</span></span><br><span class=\"line\">    <span class=\"number\">0090</span> <span class=\"bullet\">-</span> <span class=\"string\">6f</span> <span class=\"string\">1c</span> <span class=\"number\">95</span> <span class=\"string\">8a</span> <span class=\"string\">0d</span> <span class=\"string\">1d</span> <span class=\"number\">17</span> <span class=\"number\">68</span><span class=\"number\">-88</span> <span class=\"string\">8a</span> <span class=\"number\">01</span> <span class=\"string\">5b</span> <span class=\"string\">f0</span> <span class=\"string\">dc</span> <span class=\"string\">ea</span> <span class=\"number\">06</span>   <span class=\"string\">o......h...[....</span></span><br><span class=\"line\">    <span class=\"string\">00a0</span> <span class=\"bullet\">-</span> <span class=\"number\">98</span> <span class=\"string\">dc</span> <span class=\"string\">7e</span> <span class=\"number\">94</span> <span class=\"string\">f8</span> <span class=\"string\">ef</span> <span class=\"string\">4a</span> <span class=\"number\">72</span><span class=\"string\">-ff</span> <span class=\"string\">ba</span> <span class=\"string\">e5</span> <span class=\"number\">03</span> <span class=\"number\">07</span> <span class=\"string\">c7</span> <span class=\"string\">3d</span> <span class=\"string\">d0</span>   <span class=\"string\">..~...Jr......=.</span></span><br><span class=\"line\">    <span class=\"string\">00b0</span> <span class=\"bullet\">-</span> <span class=\"string\">c8</span> <span class=\"number\">91</span> <span class=\"string\">a6</span> <span class=\"string\">ae</span> <span class=\"string\">9a</span> <span class=\"string\">df</span> <span class=\"number\">92</span> <span class=\"number\">25</span><span class=\"number\">-05</span> <span class=\"number\">63</span> <span class=\"number\">77</span> <span class=\"number\">03</span> <span class=\"string\">b0</span> <span class=\"string\">bc</span> <span class=\"string\">b4</span> <span class=\"string\">ab</span>   <span class=\"string\">.......%.c......</span></span><br><span class=\"line\">    <span class=\"string\">00c0</span> <span class=\"bullet\">-</span> <span class=\"number\">36</span> <span class=\"string\">cb</span> <span class=\"string\">0f</span> <span class=\"string\">8c</span> <span class=\"string\">5d</span> <span class=\"string\">ec</span> <span class=\"number\">58</span> <span class=\"number\">65</span><span class=\"string\">-7c</span> <span class=\"number\">97</span> <span class=\"string\">2a</span> <span class=\"number\">30</span> <span class=\"number\">57</span> <span class=\"string\">4a</span> <span class=\"number\">96</span> <span class=\"string\">b9</span>   <span class=\"number\">6</span><span class=\"string\">...].Xe|.*0WJ..</span></span><br><span class=\"line\">    <span class=\"string\">00d0</span> <span class=\"bullet\">-</span> <span class=\"number\">60</span> <span class=\"number\">21</span> <span class=\"number\">12</span> <span class=\"number\">76</span> <span class=\"number\">77</span> <span class=\"string\">4c</span> <span class=\"string\">6d</span> <span class=\"string\">0d-12</span> <span class=\"string\">0c</span> <span class=\"number\">50</span> <span class=\"string\">cc</span> <span class=\"string\">f5</span> <span class=\"string\">da</span> <span class=\"number\">54</span> <span class=\"string\">4e</span>   <span class=\"string\">`!.vwLm...P...TN</span></span><br><span class=\"line\">    <span class=\"number\">00e0</span> <span class=\"bullet\">-</span> <span class=\"string\">4b</span> <span class=\"number\">27</span> <span class=\"string\">5f</span> <span class=\"string\">1b</span> <span class=\"string\">dd</span> <span class=\"number\">11</span> <span class=\"string\">b1</span> <span class=\"string\">8d-7f</span> <span class=\"string\">e0</span> <span class=\"number\">37</span> <span class=\"number\">43</span> <span class=\"number\">34</span> <span class=\"string\">a3</span> <span class=\"number\">88</span> <span class=\"number\">34</span>   <span class=\"string\">K&#x27;_.......7C4..4</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">Start Time:</span> <span class=\"number\">1549886406</span></span><br><span class=\"line\">    <span class=\"attr\">Timeout   :</span> <span class=\"number\">7200</span> <span class=\"string\">(sec)</span></span><br><span class=\"line\">    <span class=\"attr\">Verify return code:</span> <span class=\"number\">20</span> <span class=\"string\">(unable</span> <span class=\"string\">to</span> <span class=\"string\">get</span> <span class=\"string\">local</span> <span class=\"string\">issuer</span> <span class=\"string\">certificate)</span></span><br><span class=\"line\">    <span class=\"attr\">Extended master secret:</span> <span class=\"literal\">no</span></span><br><span class=\"line\">    <span class=\"attr\">Max Early Data:</span> <span class=\"number\">16384</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">read</span> <span class=\"string\">R</span> <span class=\"string\">BLOCK</span> </span><br></pre></td></tr></table></figure>\n\n<p>接下来在复用刚刚的连接，命令如下:</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$ </span>openssl s_client -connect halfrost.<span class=\"symbol\">com:</span><span class=\"number\">443</span> -tls1_3 -keylogfile=<span class=\"regexp\">/Users/ydz</span><span class=\"regexp\">/Documents/sslkeylog</span>.log -sess_in=<span class=\"regexp\">/Users/ydz</span><span class=\"regexp\">/Documents/tls</span>13.sess -early_data=<span class=\"regexp\">/Users/ydz</span><span class=\"regexp\">/Documents/req</span>.txt </span><br></pre></td></tr></table></figure>\n\n<p>req.txt 里面只是简单的写一个 GET 请求:</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">HOST</span><span class=\"punctuation\">: </span>halfrost.com</span><br><span class=\"line\"><span class=\"attribute\">Early-Data</span><span class=\"punctuation\">: </span>657567765 </span><br></pre></td></tr></table></figure>\n\n<p>执行 s_client 以后，输出如下:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">CONNECTED(00000006)</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">Server</span> <span class=\"string\">certificate</span></span><br><span class=\"line\"><span class=\"string\">-----BEGIN</span> <span class=\"string\">CERTIFICATE-----</span></span><br><span class=\"line\"><span class=\"string\">MIIElzCCA3+gAwIBAgISA604VEs+7Wwch5cNQDshC4t+MA0GCSqGSIb3DQEBCwUA</span></span><br><span class=\"line\"><span class=\"string\">MEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD</span></span><br><span class=\"line\"><span class=\"string\">ExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xODEyMDgxMzQzMzhaFw0x</span></span><br><span class=\"line\"><span class=\"string\">OTAzMDgxMzQzMzhaMBcxFTATBgNVBAMTDGhhbGZyb3N0LmNvbTBZMBMGByqGSM49</span></span><br><span class=\"line\"><span class=\"string\">AgEGCCqGSM49AwEHA0IABA7sYzIwq29BkT1mQ2TSZRPe34BlnuqN65xoLY+A87M8</span></span><br><span class=\"line\"><span class=\"string\">PpblV0IvNyj4ZdcgiSmSZffocVF6wzck6TmsQ/j2/sujggJzMIICbzAOBgNVHQ8B</span></span><br><span class=\"line\"><span class=\"string\">Af8EBAMCB4AwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB</span></span><br><span class=\"line\"><span class=\"string\">/wQCMAAwHQYDVR0OBBYEFOD4YIpf+PkD1Jvy+eayPn0csEi/MB8GA1UdIwQYMBaA</span></span><br><span class=\"line\"><span class=\"string\">FKhKamMEfd265tE5t6ZFZe/zqOyhMG8GCCsGAQUFBwEBBGMwYTAuBggrBgEFBQcw</span></span><br><span class=\"line\"><span class=\"string\">AYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNyeXB0Lm9yZzAvBggrBgEFBQcw</span></span><br><span class=\"line\"><span class=\"string\">AoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNyeXB0Lm9yZy8wKQYDVR0RBCIw</span></span><br><span class=\"line\"><span class=\"string\">IIIMaGFsZnJvc3QuY29tghB3d3cuaGFsZnJvc3QuY29tMEwGA1UdIARFMEMwCAYG</span></span><br><span class=\"line\"><span class=\"string\">Z4EMAQIBMDcGCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMu</span></span><br><span class=\"line\"><span class=\"string\">bGV0c2VuY3J5cHQub3JnMIIBBAYKKwYBBAHWeQIEAgSB9QSB8gDwAHUA4mlLribo</span></span><br><span class=\"line\"><span class=\"string\">73qkwe6lN9vZWu1dJV8+Q41cFLGYMJhDD56x7QIgL+V6g1CQst9UDXobdkAEnjah</span></span><br><span class=\"line\"><span class=\"string\">KiJWihr/Qn3plzgzjiIAdwApPFGWVMg5ZbqqUPxYB9S3b79Yeily3KTDDPTlRUf0</span></span><br><span class=\"line\"><span class=\"string\">eAAAAWeORhq2AAAEAwBIMEYCIQD1Mf1GtmegyTqIu0S3Q4afNDt0srIFyrtROtn0</span></span><br><span class=\"line\"><span class=\"string\">jQAV1gIhAJwXIGyMj87kjHtRc/mHJOOCZRSUvoasvWrytCv2dPwXMA0GCSqGSIb3</span></span><br><span class=\"line\"><span class=\"string\">DQEBCwUAA4IBAQB3sC7jKVGHR8MnAOWnECO/V5Z4oBqbahogwyhOSrbxuutijhyk</span></span><br><span class=\"line\"><span class=\"string\">8kb3A73Q++Ey150Y+hlNUQStmG9JBGg9pyLG2Yug9p5L13a6VrNaL1VQ1Dq6YgS5</span></span><br><span class=\"line\"><span class=\"string\">5J8ElsalUgr+9jvTJesdYzfXPdsc8IK67tBXhukqc0/cT3I1QHNwAVru/AKWrkne</span></span><br><span class=\"line\"><span class=\"string\">H4AcadSeLGe5he2X9OV3JJg+gb/vE90UaVmqwUuSGMzluyBXPMuznTa/+7+31vWV</span></span><br><span class=\"line\"><span class=\"string\">Q8aWE32X+E5qHSyeLU808mZHYjvKHvuDnNNu6I0KlNcVJf1s0jOQOjgo7hIP/OR4</span></span><br><span class=\"line\"><span class=\"string\">OlW6ywk07IupV4w07xykP1/tWBsSCviXECcZ</span></span><br><span class=\"line\"><span class=\"string\">-----END</span> <span class=\"string\">CERTIFICATE-----</span></span><br><span class=\"line\"><span class=\"string\">subject=CN</span> <span class=\"string\">=</span> <span class=\"string\">halfrost.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">issuer=C</span> <span class=\"string\">=</span> <span class=\"string\">US,</span> <span class=\"string\">O</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt,</span> <span class=\"string\">CN</span> <span class=\"string\">=</span> <span class=\"string\">Let&#x27;s</span> <span class=\"string\">Encrypt</span> <span class=\"string\">Authority</span> <span class=\"string\">X3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"literal\">No</span> <span class=\"string\">client</span> <span class=\"string\">certificate</span> <span class=\"string\">CA</span> <span class=\"string\">names</span> <span class=\"string\">sent</span></span><br><span class=\"line\"><span class=\"attr\">Server Temp Key:</span> <span class=\"string\">X25519,</span> <span class=\"number\">253</span> <span class=\"string\">bits</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">SSL</span> <span class=\"string\">handshake</span> <span class=\"string\">has</span> <span class=\"string\">read</span> <span class=\"number\">245</span> <span class=\"string\">bytes</span> <span class=\"string\">and</span> <span class=\"string\">written</span> <span class=\"number\">649</span> <span class=\"string\">bytes</span></span><br><span class=\"line\"><span class=\"attr\">Verification error:</span> <span class=\"string\">unable</span> <span class=\"string\">to</span> <span class=\"string\">get</span> <span class=\"string\">local</span> <span class=\"string\">issuer</span> <span class=\"string\">certificate</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"string\">Reused,</span> <span class=\"string\">TLSv1.3,</span> <span class=\"string\">Cipher</span> <span class=\"string\">is</span> <span class=\"string\">TLS_AES_256_GCM_SHA384</span></span><br><span class=\"line\"><span class=\"string\">Server</span> <span class=\"string\">public</span> <span class=\"string\">key</span> <span class=\"string\">is</span> <span class=\"number\">256</span> <span class=\"string\">bit</span></span><br><span class=\"line\"><span class=\"string\">Secure</span> <span class=\"string\">Renegotiation</span> <span class=\"string\">IS</span> <span class=\"string\">NOT</span> <span class=\"string\">supported</span></span><br><span class=\"line\"><span class=\"attr\">Compression:</span> <span class=\"string\">NONE</span></span><br><span class=\"line\"><span class=\"attr\">Expansion:</span> <span class=\"string\">NONE</span></span><br><span class=\"line\"><span class=\"literal\">No</span> <span class=\"string\">ALPN</span> <span class=\"string\">negotiated</span></span><br><span class=\"line\"><span class=\"string\">Early</span> <span class=\"string\">data</span> <span class=\"string\">was</span> <span class=\"string\">accepted</span></span><br><span class=\"line\"><span class=\"attr\">Verify return code:</span> <span class=\"number\">20</span> <span class=\"string\">(unable</span> <span class=\"string\">to</span> <span class=\"string\">get</span> <span class=\"string\">local</span> <span class=\"string\">issuer</span> <span class=\"string\">certificate)</span></span><br><span class=\"line\"><span class=\"meta\">--- </span></span><br></pre></td></tr></table></figure>\n\n<p>从输出中可以看到 <code>Early data was accepted</code>。这个时候转到 wireshark，看抓到的包是怎么样的。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_52.png\"></p>\n<p>可以看到 Client 在 ClientHello 之后，就立即发送了 Application Data。</p>\n<p>在 wireshark 中首选项，把下图中的勾去掉。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_57.png\"></p>\n<p>配置生效以后，可以看到 Application Data 里面的请求了。</p>\n<p><img src=\"https://img.halfrost.com/Blog/ArticleImage/122_51.png\"></p>\n<p>普通的 GET 请求中 header 中带了 Early-Data 的值。这个值就会传给 Server 处理了。</p>\n<h2 id=\"十一-TLS-1-3-的状态机\"><a href=\"#十一-TLS-1-3-的状态机\" class=\"headerlink\" title=\"十一. TLS 1.3 的状态机\"></a>十一. TLS 1.3 的状态机</h2><p>TLS 1.3 相对 TLS 1.2 握手流程发生了巨大的变化，所以状态机也发生了巨大的变化。下面放 2 张状态流转图，最为总结，对应的也是本篇文章的精华。</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">START &lt;----+</span><br><span class=\"line\">              Send ClientHello |        <span class=\"type\">| Recv</span> HelloRetryRequest</span><br><span class=\"line\">         [K_send = early data] |        <span class=\"type\">|</span></span><br><span class=\"line\"><span class=\"type\">                               v</span>        |</span><br><span class=\"line\">          <span class=\"type\">/                 WAIT_SH</span> ----+</span><br><span class=\"line\">          |                    <span class=\"type\">| Recv</span> ServerHello</span><br><span class=\"line\">          |                    <span class=\"type\">| K_recv</span> = handshake</span><br><span class=\"line\">      Can |                    <span class=\"type\">V</span></span><br><span class=\"line\">     send |                 <span class=\"type\">WAIT_EE</span></span><br><span class=\"line\">    early |                    <span class=\"type\">| Recv</span> EncryptedExtensions</span><br><span class=\"line\">     data |           <span class=\"type\">+--------+--------+</span></span><br><span class=\"line\"><span class=\"type\">          |     Using</span> |                 <span class=\"type\">| Using</span> certificate</span><br><span class=\"line\">          |       <span class=\"type\">PSK</span> |                 <span class=\"type\">v</span></span><br><span class=\"line\">          |           <span class=\"type\">|            WAIT_CERT_CR</span></span><br><span class=\"line\">          |           <span class=\"type\">|        Recv</span> |       <span class=\"type\">| Recv</span> CertificateRequest</span><br><span class=\"line\">          |           <span class=\"type\">| Certificate</span> |       <span class=\"type\">v</span></span><br><span class=\"line\">          |           <span class=\"type\">|             |    WAIT_CERT</span></span><br><span class=\"line\">          |           <span class=\"type\">|             |       | Recv</span> Certificate</span><br><span class=\"line\">          |           <span class=\"type\">|             v</span>       v</span><br><span class=\"line\">          |           <span class=\"type\">|              WAIT_CV</span></span><br><span class=\"line\">          |           <span class=\"type\">|                 | Recv</span> CertificateVerify</span><br><span class=\"line\">          |           <span class=\"type\">+&gt; WAIT_FINISHED</span> &lt;+</span><br><span class=\"line\">          |                  <span class=\"type\">| Recv</span> Finished</span><br><span class=\"line\">          \\                  | <span class=\"type\">[Send</span> EndOfEarlyData]</span><br><span class=\"line\">                             | <span class=\"type\">K_send</span> = handshake</span><br><span class=\"line\">                             | <span class=\"type\">[Send</span> Certificate [+ CertificateVerify]]</span><br><span class=\"line\">   Can send                  | <span class=\"type\">Send</span> Finished</span><br><span class=\"line\">   app data   --&gt;            | <span class=\"type\">K_send</span> = K_recv = application</span><br><span class=\"line\">   <span class=\"built_in\">after</span> here                v</span><br><span class=\"line\">                         CONNECTED </span><br></pre></td></tr></table></figure>\n\n<p>这图是 Client 在握手流程上的状态机。如果读者还不清楚中间的某个步骤，可以对照上文中的内容查缺补漏。</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">START &lt;-----+</span><br><span class=\"line\">              Recv ClientHello |         <span class=\"type\">| Send</span> HelloRetryRequest</span><br><span class=\"line\">                               v         |</span><br><span class=\"line\">                            <span class=\"type\">RECVD_CH</span> ----+</span><br><span class=\"line\">                               | <span class=\"type\">Select</span> parameters</span><br><span class=\"line\">                               v</span><br><span class=\"line\">                            NEGOTIATED</span><br><span class=\"line\">                               | <span class=\"type\">Send</span> ServerHello</span><br><span class=\"line\">                               | <span class=\"type\">K_send</span> = handshake</span><br><span class=\"line\">                               | <span class=\"type\">Send</span> EncryptedExtensions</span><br><span class=\"line\">                               | <span class=\"type\">[Send</span> CertificateRequest]</span><br><span class=\"line\">Can send                       | <span class=\"type\">[Send</span> Certificate + CertificateVerify]</span><br><span class=\"line\">app data                       | <span class=\"type\">Send</span> Finished</span><br><span class=\"line\"><span class=\"built_in\">after</span>   --&gt;                    | <span class=\"type\">K_send</span> = application</span><br><span class=\"line\">here                  +--------+--------+</span><br><span class=\"line\">             No <span class=\"number\">0</span>-RTT |                 <span class=\"type\">| 0</span>-RTT</span><br><span class=\"line\">                      |                 <span class=\"type\">|</span></span><br><span class=\"line\"><span class=\"type\">  K_recv</span> = handshake  |                 <span class=\"type\">| K_recv</span> = early data</span><br><span class=\"line\">[Skip decrypt errors] |    <span class=\"type\">+------&gt; WAIT_EOED</span> -+</span><br><span class=\"line\">                      |    <span class=\"type\">|       Recv</span> |      <span class=\"type\">| Recv</span> EndOfEarlyData</span><br><span class=\"line\">                      |    <span class=\"type\">| early</span> data |      <span class=\"type\">| K_recv</span> = handshake</span><br><span class=\"line\">                      |    <span class=\"type\">+------------+      |</span></span><br><span class=\"line\"><span class=\"type\">                      |                        |</span></span><br><span class=\"line\"><span class=\"type\">                      +&gt; WAIT_FLIGHT2</span> &lt;--------+</span><br><span class=\"line\">                               |</span><br><span class=\"line\">                      <span class=\"type\">+--------+--------+</span></span><br><span class=\"line\"><span class=\"type\">              No</span> auth |                 <span class=\"type\">| Client</span> auth</span><br><span class=\"line\">                      |                 <span class=\"type\">|</span></span><br><span class=\"line\"><span class=\"type\">                      |                 v</span></span><br><span class=\"line\">                      |             <span class=\"type\">WAIT_CERT</span></span><br><span class=\"line\">                      |        <span class=\"type\">Recv</span> |       <span class=\"type\">| Recv</span> Certificate</span><br><span class=\"line\">                      |       <span class=\"type\">empty</span> |       <span class=\"type\">v</span></span><br><span class=\"line\">                      | <span class=\"type\">Certificate</span> |    <span class=\"type\">WAIT_CV</span></span><br><span class=\"line\">                      |             <span class=\"type\">|       | Recv</span></span><br><span class=\"line\">                      |             <span class=\"type\">v</span>       | <span class=\"type\">CertificateVerify</span></span><br><span class=\"line\">                      +-&gt; WAIT_FINISHED &lt;---+</span><br><span class=\"line\">                               | <span class=\"type\">Recv</span> Finished</span><br><span class=\"line\">                               | <span class=\"type\">K_recv</span> = application</span><br><span class=\"line\">                               v</span><br><span class=\"line\">                           CONNECTED </span><br></pre></td></tr></table></figure>\n\n<p>这图是 Server 在握手流程上的状态机。如果读者还不清楚中间的某个步骤，可以对照上文中的内容查缺补漏。读者能理解透上面这 2 张状态机，TLS 1.3 也就掌握透彻了。</p>\n<p>全文完。</p>\n<hr>\n<p>Reference：</p>\n<p><a href=\"https://tools.ietf.org/html/rfc8446\">RFC 8466</a><br><a href=\"https://tools.ietf.org/html/draft-ietf-tls-tls13-28\">TLS1.3 draft-28</a></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>GitHub Repo：<a href=\"https://github.com/halfrost/Halfrost-Field\">Halfrost-Field</a></p>\n<p>Follow: <a href=\"https://github.com/halfrost\">halfrost · GitHub</a></p>\n<p>Source: <a href=\"https://halfrost.com/https_tls1-3_handshake/\">https://halfrost.com/HTTPS_handshake&#x2F;</a></p></blockquote>\n<p><img src=\"https://img.halfrost.com/wechat-qr-code.png\"></p>\n","text":"直观感受 TLS 握手流程(下)在 HTTPS 开篇的文章中，笔者分析了 HTTPS 之所以安全的原因是因为 TLS 协议的存在。TLS 能保证信息安全和完整性...","permalink":"/post/NETWORK/直观感受 TLS 握手流程(下)","photos":[],"count_time":{"symbolsCount":"44k","symbolsTime":"40 mins."},"categories":[{"name":"TLS","slug":"TLS","count":1,"path":"api/categories/TLS.json"},{"name":"NETWORK","slug":"TLS/NETWORK","count":1,"path":"api/categories/TLS/NETWORK.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"RTT","slug":"RTT","count":1,"path":"api/tags/RTT.json"},{"name":"PSK","slug":"PSK","count":1,"path":"api/tags/PSK.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E8%A7%82%E6%84%9F%E5%8F%97-TLS-%E6%8F%A1%E6%89%8B%E6%B5%81%E7%A8%8B-%E4%B8%8B\"><span class=\"toc-text\">直观感受 TLS 握手流程(下)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%83-TLS-1-3-%E9%A6%96%E6%AC%A1%E6%8F%A1%E6%89%8B%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">七. TLS 1.3 首次握手流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AB-%E7%9B%B4%E8%A7%82%E6%84%9F%E5%8F%97-TLS-1-3-%E9%A6%96%E6%AC%A1%E6%8F%A1%E6%89%8B%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">八. 直观感受 TLS 1.3 首次握手流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B9%9D-TLS-1-3-%E4%BC%9A%E8%AF%9D%E6%81%A2%E5%A4%8D\"><span class=\"toc-text\">九. TLS 1.3 会话恢复</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%BC%9A%E8%AF%9D%E6%81%A2%E5%A4%8D%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">1. 会话恢复模式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-Ticket-Age\"><span class=\"toc-text\">(1) Ticket Age</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-PSK-Binder\"><span class=\"toc-text\">(2) PSK Binder</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-0-RTT-%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">2. 0-RTT 模式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81-%E7%9B%B4%E8%A7%82%E6%84%9F%E5%8F%97-TLS-1-3-%E4%BC%9A%E8%AF%9D%E6%81%A2%E5%A4%8D\"><span class=\"toc-text\">十. 直观感受 TLS 1.3 会话恢复</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-PSK-%E4%BC%9A%E8%AF%9D%E6%81%A2%E5%A4%8D\"><span class=\"toc-text\">1. PSK 会话恢复</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-0-RTT\"><span class=\"toc-text\">2. 0-RTT</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%B8%80-TLS-1-3-%E7%9A%84%E7%8A%B6%E6%80%81%E6%9C%BA\"><span class=\"toc-text\">十一. TLS 1.3 的状态机</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Netty ChannelInactive 断链场景分析","uid":"a159c983ebe30de9eaec5108a827bcdd","slug":"JAVA/Netty ChannelInactive 断链场景分析","date":"2024-03-25T16:04:40.000Z","updated":"2025-09-30T03:26:13.974Z","comments":true,"path":"api/articles/JAVA/Netty ChannelInactive 断链场景分析.json","keywords":"XuGuangSheng","cover":"/covers/netty-channelinactive.jpg","text":"Netty ChannelInactive 断链场景分析本文档主要列举离会、关闭进程、断网、重连等会导致sdk与服务端断开连接的场景的设计与实现，并试图解释其原...","permalink":"/post/JAVA/Netty ChannelInactive 断链场景分析","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Netty","slug":"Netty","count":1,"path":"api/categories/Netty.json"},{"name":"JAVA","slug":"Netty/JAVA","count":1,"path":"api/categories/Netty/JAVA.json"}],"tags":[{"name":"netty","slug":"netty","count":1,"path":"api/tags/netty.json"},{"name":"channel","slug":"channel","count":1,"path":"api/tags/channel.json"},{"name":"channelInactive","slug":"channelInactive","count":1,"path":"api/tags/channelInactive.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"直观感受 TLS 握手流程(上)","uid":"18647109cd1271b82271b0b5bf74c52c","slug":"NETWORK/直观感受 TLS 握手流程(上)","date":"2024-03-08T10:07:56.000Z","updated":"2025-09-30T03:26:56.529Z","comments":true,"path":"api/articles/NETWORK/直观感受 TLS 握手流程(上).json","keywords":"XuGuangSheng","cover":"/covers/tls.jpg","text":"直观感受 TLS 握手流程(上)在 HTTPS 开篇的文章中，笔者分析了 HTTPS 之所以安全的原因是因为 TLS 协议的存在。TLS 能保证信息安全和完整性...","permalink":"/post/NETWORK/直观感受 TLS 握手流程(上)","photos":[],"count_time":{"symbolsCount":"56k","symbolsTime":"51 mins."},"categories":[{"name":"Server","slug":"Server","count":1,"path":"api/categories/Server.json"},{"name":"NETWORK","slug":"Server/NETWORK","count":1,"path":"api/categories/Server/NETWORK.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"Client","slug":"Client","count":2,"path":"api/tags/Client.json"},{"name":"TLS","slug":"TLS","count":1,"path":"api/tags/TLS.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}