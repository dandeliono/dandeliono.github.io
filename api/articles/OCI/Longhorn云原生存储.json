{"title":"Longhorn云原生存储","uid":"28da5e689dcfe147ac9028067fa50b4a","slug":"OCI/Longhorn云原生存储","date":"2024-06-11T17:02:24.000Z","updated":"2025-09-30T03:26:57.254Z","comments":true,"path":"api/articles/OCI/Longhorn云原生存储.json","keywords":"XuGuangSheng","cover":"/covers/longhorn.jpg","content":"<h1 id=\"Longhorn云原生存储\"><a href=\"#Longhorn云原生存储\" class=\"headerlink\" title=\"Longhorn云原生存储\"></a>Longhorn云原生存储</h1><p>官方github：<a href=\"https://github.com/longhorn/longhorn\">https://github.com/longhorn/longhorn</a></p>\n<p>官方网站：<a href=\"https://longhorn.io/\">https://longhorn.io</a></p>\n<p><strong>Longhorn</strong>是一个轻量级、可靠且功能强大的分布式块存储系统，适用于 Kubernetes。使用容器和微服务实现分布式块存储。Longhorn 为每个块储存设备卷创建一个专用的存储控制器，并在存储在多个节点上的多个副本之间同步复制该卷。存储控制器和副本本身是使用 Kubernetes 编排的。Longhorn 是免费的开源软件。它最初由Rancher Labs开发，现在作为云原生计算基金会的孵化项目进行开发。</p>\n<p><strong>Longhorn 支持以下架构</strong>：</p>\n<ol>\n<li>AMD64</li>\n<li>ARM64（实验性）</li>\n</ol>\n<p><strong>使用Longhorn，您可以</strong>：</p>\n<ul>\n<li>使用 Longhorn 卷作为 Kubernetes 集群中分布式有状态应用程序的持久存储</li>\n<li>将您的块存储分区为 Longhorn 卷，以便您可以在有或没有云提供商的情况下使用 Kubernetes 卷。</li>\n<li>跨多个节点和数据中心复制块存储以提高可用性</li>\n<li>将备份数据存储在外部存储（如 NFS 或 AWS S3）中</li>\n<li>创建跨集群灾难恢复卷，以便从第二个 Kubernetes 集群中的备份中快速恢复主 Kubernetes 集群中的数据</li>\n<li>计划卷的定期快照，并计划定期备份到 NFS 或与 S3 兼容的辅助存储</li>\n<li>从备份还原卷</li>\n<li>在不中断持久卷的情况下升级 Longhorn</li>\n</ul>\n<p>Longhorn带有一个独立的UI，可以使用Helm，kubectl或Rancher应用程序目录进行安装。</p>\n<p><strong>使用微服务简化分布式块存储</strong></p>\n<p>由于现代云环境需要数以万计到数百万个分布式块存储卷，因此一些存储控制器已成为高度复杂的分布式系统。相比之下，Longhorn 可以通过将大型块存储控制器分区为多个较小的存储控制器来简化存储系统，只要这些卷仍然可以从公共磁盘池构建。通过为每个卷使用一个存储控制器，Longhorn 将每个卷转换为微服务。控制器被称为Longhorn Engine。</p>\n<p>Longhorn Manager 组件编排 Longhorn 引擎，因此它们可以连贯地协同工作。</p>\n<p><strong>在 Kubernetes 中使用持久性存储，而无需依赖云提供商</strong></p>\n<p>Pod 可以直接引用存储，但不建议这样做，因为它不允许 Pod 或容器可移植。相反，工作负载的存储要求应该在 Kubernetes 持久卷 （PV） 和持久卷声明 （PVC） 中定义。使用 Longhorn，您可以指定卷的大小、IOPS 要求以及跨为卷提供存储资源的主机所需的同步副本数。然后，您的 Kubernetes 资源可以为每个 Longhorn 卷使用 PVC 和相应的 PV，或者使用 Longhorn 存储类自动为工作负载创建 PV。</p>\n<p>副本在基础磁盘或网络存储上进行精简置备。</p>\n<p><strong>跨多个计算或存储主机计划多个副本</strong></p>\n<p>为了提高可用性，Longhorn 会创建每个卷的副本。副本包含卷的快照链，每个快照都存储与上一个快照相比的更改。卷的每个副本也在容器中运行，因此具有三个副本的卷会产生四个容器。</p>\n<p>每个卷的副本数可在 Longhorn 中配置，以及将调度副本的节点数。Longhorn 会监控每个复制副本的运行状况并执行修复，并在必要时重建复制副本。</p>\n<p><strong>为每个卷分配多个存储前端</strong></p>\n<p>常见的前端包括一个 Linux 内核设备（映射在 &#x2F;dev&#x2F;longhorn 下）和一个 iSCSI 目标。</p>\n<p><strong>为定期快照和备份操作指定计划</strong></p>\n<p>指定这些操作的频率（每小时、每天、每周、每月和每年）、执行这些操作的确切时间（例如，每个星期日的凌晨 3：00）以及保留的定期快照和备份集数。</p>\n<h2 id=\"1-1-架构介绍\"><a href=\"#1-1-架构介绍\" class=\"headerlink\" title=\"1.1 架构介绍\"></a>1.1 架构介绍</h2><p>Longhorn设计有两层：数据平面和控制平面。Longhorn Engine 是对应于数据平面的存储控制器，而 Longhorn Manager 对应于控制平面。</p>\n<p>Longhorn Manager Pod 作为 Kubernetes DaemonSet 在 Longhorn 集群中的每个节点上运行。它负责在 Kubernetes 集群中创建和管理卷，并处理来自 UI 或 Kubernetes 的卷插件的 API 调用。它遵循 Kubernetes 控制器模式，有时称为运算符模式。Longhorn Manager 与 Kubernetes API 服务器通信，以创建新的 Longhorn 卷 CRD。然后，Longhorn Manager 会观察 API 服务器的响应，当它看到 Kubernetes API 服务器创建了一个新的 Longhorn 卷 CRD 时，Longhorn Manager 会创建一个新卷。当要求 Longhorn Manager 创建卷时，它会在卷附加到的节点上创建一个 Longhorn Engine 实例，并在将放置副本的每个节点上创建一个副本。副本应放置在单独的主机上，以确保最大的可用性。副本的多个数据路径确保了 Longhorn 卷的高可用性。即使某个副本或引擎出现问题，该问题也不会影响所有副本或 Pod 对卷的访问。Pod 仍将正常运行。长角引擎始终与使用 Longhorn 卷的 Pod 在同一节点中运行。它跨存储在多个节点上的多个副本同步复制卷。引擎和副本是使用 Kubernetes 编排的。</p>\n<p><img src=\"https://zhangzhuo-1257627961.cos.ap-beijing.myqcloud.com/Typora/how-longhorn-works.svg?imageView2/2/w/1280/format/jpg/interlace/1/q/100\"></p>\n<ul>\n<li>有三个实例与 Longhorn 卷。</li>\n<li>每个卷都有一个专用的控制器，称为Longhorn Engine，并作为Linux进程运行。</li>\n<li>每个 Longhorn 卷都有两个副本，每个副本都是一个 Linux 进程。</li>\n<li>图中的箭头表示卷、控制器实例、副本实例和磁盘之间的读&#x2F;写数据流。</li>\n<li>通过为每个卷创建单独的 Longhorn 引擎，如果一个控制器出现故障，其他卷的功能将不受影响。</li>\n</ul>\n<h2 id=\"1-2-微服务设置的优势\"><a href=\"#1-2-微服务设置的优势\" class=\"headerlink\" title=\"1.2 微服务设置的优势\"></a>1.2 微服务设置的优势</h2><p>在 Longhorn 中，每个引擎只需要为一个卷提供服务，从而简化了存储控制器的设计。由于控制器软件的故障域被隔离到各个卷，因此控制器崩溃只会影响一个卷。</p>\n<p>Longhorn Engine简单而轻巧，因此我们可以创建多达100，000个单独的引擎。Kubernetes 调度这些单独的引擎，从一组共享磁盘中提取资源，并与 Longhorn 合作以形成一个有弹性的分布式块存储系统。</p>\n<p>由于每个卷都有自己的控制器，因此还可以升级每个卷的控制器和副本实例，而不会对 IO 操作造成明显中断。</p>\n<p>Longhorn 可以创建一个长时间运行的作业来协调所有实时卷的升级，而不会中断系统的持续运行。为确保升级不会导致不可预见的问题，Longhorn 可以选择升级一小部分卷，并在升级过程中出现问题时回滚到旧版本。</p>\n<h2 id=\"1-3-精简置备和卷大小、\"><a href=\"#1-3-精简置备和卷大小、\" class=\"headerlink\" title=\"1.3 精简置备和卷大小、\"></a>1.3 精简置备和卷大小、</h2><p>Longhorn 是一个精简配置的存储系统。这意味着Longhorn卷将仅占用当前所需的空间。例如，如果分配了 20 GB 的卷，但仅使用其中的 1GB，则磁盘上的实际数据大小将为 1 GB。您可以在 UI 的卷详细信息中查看实际数据大小。</p>\n<p>如果从卷中删除了内容，则 Longhorn 卷本身的大小无法缩小。例如，如果创建一个 20 GB 的卷，使用了 10 GB，然后删除了 9 GB 的内容，则磁盘上的实际大小仍将是 10 GB 而不是 1 GB。发生这种情况是因为 Longhorn 在块级别而不是文件系统级别运行，因此 Longhorn 不知道用户是否删除了内容。该信息主要保存在文件系统级别。</p>\n<h2 id=\"1-4-副本\"><a href=\"#1-4-副本\" class=\"headerlink\" title=\"1.4 副本\"></a>1.4 副本</h2><p>每个副本都包含 Longhorn 卷的快照链。快照类似于图像的图层，最旧的快照用作基础图层，较新的快照位于顶部。仅当数据覆盖旧快照中的数据时，数据才会包含在新快照中。快照链一起显示数据的当前状态。</p>\n<p>对于每个 Longhorn 卷，该卷的多个副本应在 Kubernetes 集群中运行，每个副本都在一个单独的节点上。所有副本都被视为相同，并且 Longhorn 引擎始终在与 pod 相同的节点上运行，Pod 也是卷的使用者。通过这种方式，我们确保即使 Pod 已关闭，引擎也可以移动到另一个 Pod，并且您的服务将继续不受中断。</p>\n<p>可以在设置中更改默认副本计数。附加卷后，可以在 UI 中更改卷的副本计数。</p>\n<p>如果当前正常运行的副本计数小于指定的副本计数，Longhorn 将开始重建新副本。</p>\n<p>如果当前正常运行的副本计数大于指定的副本计数，则 Longhorn 将不执行任何操作。在此情况下，如果复制副本发生故障或删除，Longhorn 将不会开始重建新副本，除非正常的副本计数低于指定的副本计数。</p>\n<h3 id=\"1-副本的工作原理\"><a href=\"#1-副本的工作原理\" class=\"headerlink\" title=\"1.副本的工作原理\"></a>1.副本的工作原理</h3><p>从卷的副本读取数据时，如果可以在实时数据中找到该数据，则使用该数据。否则，将读取最新的快照。如果在最新快照中找不到数据，则读取下一个最旧的快照，依此类推，直到读取最旧的快照。拍摄快照时，将创建一个差异磁盘。随着快照数量的增加，差异磁盘链（也称为快照链）可能会变得很长。因此，为了提高读取性能，Longhorn 维护了一个读取索引，用于记录哪个差异磁盘为每个 4K 存储块保存有效数据。</p>\n<p>在下图中，该卷有八个块。读取索引有八个条目，并且在执行读取操作时会懒惰地填满。</p>\n<p>写入操作会重置读取索引，使其指向实时数据。实时数据由某些索引中的数据和其他索引中的空白空间组成。</p>\n<p>除了读取索引之外，我们目前不维护其他元数据来指示使用了哪些块。</p>\n<p><img src=\"https://zhangzhuo-1257627961.cos.ap-beijing.myqcloud.com//Typora/read-index.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100\"></p>\n<p>上图采用颜色编码，根据读取索引显示哪些块包含最新数据，下表中还列出了最新数据的来源</p>\n<table>\n<thead>\n<tr>\n<th>读取索引</th>\n<th>最新数据来源</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>最新快照</td>\n</tr>\n<tr>\n<td>1</td>\n<td>实时数据</td>\n</tr>\n<tr>\n<td>2</td>\n<td>最早的快照</td>\n</tr>\n<tr>\n<td>3</td>\n<td>最早的快照</td>\n</tr>\n<tr>\n<td>4</td>\n<td>最早的快照</td>\n</tr>\n<tr>\n<td>5</td>\n<td>实时数据</td>\n</tr>\n<tr>\n<td>6</td>\n<td>实时数据</td>\n</tr>\n<tr>\n<td>7</td>\n<td>实时数据</td>\n</tr>\n</tbody></table>\n<p>请注意，如上图中的绿色箭头所示，读取索引的索引 5 之前指向第二个最旧的快照作为最新数据的来源，然后当索引 5 处的 4K 存储块被实时数据覆盖时，它更改为指向实时数据。读取索引保存在内存中，每个 4K 块消耗一个字节。字节大小的读取索引意味着您可以为每个卷拍摄多达 254 个快照。读取索引为每个副本消耗一定量的内存中数据结构。例如，1 TB 卷占用 256 MB 的内存中读取索引。</p>\n<h2 id=\"1-5-快照\"><a href=\"#1-5-快照\" class=\"headerlink\" title=\"1.5 快照\"></a>1.5 快照</h2><p>快照功能使卷能够恢复到历史记录中的某个点。辅助存储中的备份也可以从快照构建。从快照还原卷时，它反映创建快照时卷的状态。快照功能也是 Longhorn 重建过程的一部分。每当 Longhorn 检测到副本出现故障时，它都会自动拍摄（系统）快照，并开始在另一个节点上重建它。</p>\n<h3 id=\"1-快照工作原理\"><a href=\"#1-快照工作原理\" class=\"headerlink\" title=\"1.快照工作原理\"></a>1.快照工作原理</h3><p>快照类似于图像的图层，最旧的快照用作基础图层，较新的快照位于顶部。仅当数据覆盖旧快照中的数据时，数据才会包含在新快照中。快照在创建后无法更改，除非删除快照，在这种情况下，其更改将与下一个最新的快照合并。新数据始终写入实时版本。新快照始终是从实时数据创建的。要创建新快照，实时数据将成为最新的快照。然后创建一个新的空白版本的实时数据，以取代旧的实时数据。</p>\n<p><strong>重复快照</strong></p>\n<p>为了减少快照占用的空间，用户可以计划定期快照或备份，其中包含要保留的多个快照，这将按计划自动创建新的快照&#x2F;备份，然后清理任何过多的快照&#x2F;备份。</p>\n<p><strong>删除快照</strong></p>\n<p>可以通过 UI 手动删除不需要的快照。如果触发了任何快照的删除，则系统生成的任何快照都将自动标记为删除。在 Longhorn 中，无法删除最新的快照。这是因为每当删除快照时，Longhorn 都会将其内容与下一个快照混淆，以便下一个和以后的快照保留正确的内容。但是 Longhorn 无法对最新快照执行此操作，因为没有更新的快照可与已删除的快照混为一谈。最新快照的下一个“快照”是实时卷（卷头），用户当前正在读取&#x2F;写入该卷，因此无法进行合并过程。相反，最新的快照将被标记为已删除，并且将在下次可能的情况下将其清理。要清理最新快照，可以创建新快照，然后删除以前的“最新”快照。</p>\n<p><strong>存储快照</strong></p>\n<p>快照存储在本地，作为卷的每个副本的一部分。它们存储在 Kubernetes 集群中节点的磁盘上。快照存储在与主机物理磁盘上的卷数据相同的位置。</p>\n<p><strong>崩溃一致性</strong></p>\n<p>Longhorn 是一种崩溃一致性块存储解决方案。操作系统在写入块层之前将内容保留在缓存中是正常的。这意味着，如果所有副本都已关闭，则 Longhorn 可能不包含关机前立即发生的更改，因为内容保存在操作系统级缓存中，尚未传输到 Longhorn 系统。此问题类似于台式计算机因断电而关闭时可能发生的问题。恢复电源后，您可能会在硬盘驱动器中找到一些损坏的文件。要在任何给定时刻强制将数据写入块层，可以在节点上手动运行 sync 命令，也可以卸载磁盘。在这两种情况下，操作系统都会将缓存中的内容写入块层。Longhorn 在创建快照之前会自动运行同步命令。</p>\n<h2 id=\"1-6-备份和辅助存储\"><a href=\"#1-6-备份和辅助存储\" class=\"headerlink\" title=\"1.6 备份和辅助存储\"></a>1.6 备份和辅助存储</h2><p>备份是备份存储中的对象，备份存储是 Kubernetes 集群外部的 NFS 或 S3 兼容对象存储。备份提供了一种辅助存储形式，因此即使您的 Kubernetes 集群变得不可用，仍然可以检索您的数据。由于卷复制是同步的，并且由于网络延迟，因此很难执行跨区域复制。备份存储还用作解决此问题的介质。在 Longhorn 设置中配置备份目标后，Longhorn 可以连接到备份存储，并在 Longhorn UI 中显示现有备份的列表。如果 Longhorn 在第二个 Kubernetes 集群中运行，它还可以将灾难恢复卷同步到辅助存储中的备份，以便您的数据可以在第二个 Kubernetes 集群中更快地恢复。</p>\n<h3 id=\"1-备份原理\"><a href=\"#1-备份原理\" class=\"headerlink\" title=\"1.备份原理\"></a>1.备份原理</h3><p>备份是使用一个快照作为源创建的，以便它反映创建快照时卷数据的状态。备份远程存储在群集外部。与快照相比，可以将备份视为快照链的扁平化版本。与将分层图像转换为平面图像时丢失信息的方式类似，将快照链转换为备份时数据也会丢失。在这两次转化中，所有被覆盖的数据都将丢失。由于备份不包含快照，因此它们不包含卷数据更改的历史记录。从备份还原卷后，该卷最初包含一个快照。此快照是原始链中所有快照的合并版本，它反映了创建备份时卷的实时数据。虽然快照可能为数百 GB，但备份由 2 MB 文件组成。同一原始卷的每个新备份都是增量备份，用于检测和传输快照之间的更改块。这是一项相对简单的任务，因为每个快照都是一个差异文件，并且仅存储上次快照中的更改。此设计还意味着，如果没有更改任何块并进行了备份，则 backupstore 中的备份将显示为 0 字节。但是，如果要从该备份还原，它仍将包含完整的卷数据，因为它将还原备份存储上已存在的必要块，这些块是备份所必需的。为了避免存储大量小块存储，Longhorn 使用 2 MB 块执行备份操作。这意味着，如果 2MB 边界中的任何 4K 块发生更改，Longhorn 将备份整个 2MB 块。这在可管理性和效率之间提供了适当的平衡。</p>\n<p><img src=\"https://zhangzhuo-1257627961.cos.ap-beijing.myqcloud.com//Typora/longhorn-backup-creation.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100\"></p>\n<p>上图描述了如何从 Longhorn 中的快照创建备份：</p>\n<ul>\n<li>图的主存储端显示了 Kubernetes 集群中 Longhorn 卷的一个副本。副本由四个快照链组成。按从最新到最旧的顺序，快照为“实时数据”、“snap3”、“snap2”和“snap1”。</li>\n<li>图的辅助存储端显示了外部对象存储服务（如 S3）中的两个备份。</li>\n<li>在辅助存储中，从 snap2 备份的颜色编码显示它包括来自 snap1 的蓝色变化和来自 snap2 的绿色变化。snap2 中没有任何更改覆盖 snap1 中的数据，因此 snap1 和 snap2 的更改都包含在从 snap2 备份中。</li>\n<li>名为“从快照备份 3”的备份反映了创建 snap3 时卷数据的状态。颜色编码和箭头表示从 snap3 备份包含来自 snap3 的所有深红色更改，但仅包含来自 snap2 的一个绿色更改。这是因为 snap3 中的一个红色变化覆盖了 snap2 中的一个绿色变化。这说明了备份如何不包括完整的更改历史记录，因为它们将快照与之前的快照混淆。</li>\n<li>每个备份都维护自己的一组 2 MB 块。每个 2 MB 块仅备份一次。两个备份共享一个绿色块和一个蓝色块。</li>\n</ul>\n<p>从辅助存储中删除备份时，Longhorn 不会删除它使用的所有块。相反，它会定期执行垃圾回收，以清理辅助存储中未使用的块。属于同一卷的所有备份的 2 MB 块存储在一个公共目录下，因此可以在多个备份之间共享。为了节省空间，可以在备份之间未更改的 2 MB 块重用于在辅助存储中共享同一备份卷的多个备份。由于校验和用于寻址 2 MB 块，因此我们对同一卷中的 2 MB 块实现了一定程度的重复数据删除。卷级元数据存储在卷.cfg中。每个备份（例如，snap2.cfg）的元数据文件相对较小，因为它们仅包含备份中所有 2 MB 块的偏移量和校验和。每个 2 MB 块（.blk 文件）都会被压缩。</p>\n<p>我这里部署的版本为v1.2.4最新版本，在部署 Longhorn v1.2.4 之前，请确保您的 Kubernetes 集群至少为 v1.18，因为支持的 Kubernetes 版本已在 v1.2.4 中更新 （&gt;&#x3D; v1.18）。如果是低版本请部署选择相应的版本</p>\n<h2 id=\"2-1-安装前准备\"><a href=\"#2-1-安装前准备\" class=\"headerlink\" title=\"2.1 安装前准备\"></a>2.1 安装前准备</h2><p>在安装了 Longhorn 的 Kubernetes 集群中，每个节点都必须满足以下要求</p>\n<ul>\n<li>与 Kubernetes 兼容的容器运行时（Docker v1.13+、containerd v1.3.7+ 等）</li>\n<li>Kubernetes v1.18+，v1.2.4要求。</li>\n<li><code>open-iscsi</code>已安装，并且守护程序正在所有节点上运行。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">yum install iscsi-initiator-utils</span><br><span class=\"line\">systemctl enable iscsid</span><br><span class=\"line\">systemctl start iscsid</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>RWX 支持要求每个节点都安装了 NFSv4 客户端。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">yum install nfs-utils</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>主机文件系统支持存储数据的功能。</p>\n<ul>\n<li>ext4</li>\n<li>XFS</li>\n</ul>\n</li>\n<li><p>bash必须安装<code>curl findmnt grep awk blkid lsblk</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">yum install curl util-linux grep gawk</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>必须启用装载传播。</li>\n</ul>\n<p>官方提供了一个测试脚本，需要在kube-master节点执行：<a href=\"https://raw.githubusercontent.com/longhorn/longhorn/v1.2.4/scripts/environment_check.sh\">https://raw.githubusercontent.com/longhorn/longhorn/v1.2.4/scripts/environment_check.sh</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[16:04:12 root@node-1 ~]</span><br><span class=\"line\">[16:02:09 root@node-1 ~]</span><br><span class=\"line\">daemonset.apps/longhorn-environment-check created</span><br><span class=\"line\">waiting for pods to become ready (0/3)</span><br><span class=\"line\">waiting for pods to become ready (0/3)</span><br><span class=\"line\">all pods ready (3/3)</span><br><span class=\"line\"></span><br><span class=\"line\">  MountPropagation is enabled!</span><br><span class=\"line\"></span><br><span class=\"line\">cleaning up...</span><br><span class=\"line\">daemonset.apps &quot;longhorn-environment-check&quot; deleted</span><br><span class=\"line\">clean up complete</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-使用Helm安装Longhorn\"><a href=\"#2-2-使用Helm安装Longhorn\" class=\"headerlink\" title=\"2.2 使用Helm安装Longhorn\"></a>2.2 使用Helm安装Longhorn</h2><p>官方提供了俩种安装方式，我们在这里使用helm进行安装</p>\n<p>首先在kube-master安装Helm v2.0+。</p>\n<h3 id=\"1-部署\"><a href=\"#1-部署\" class=\"headerlink\" title=\"1.部署\"></a>1.部署</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[16:05:21 root@node-1 ~]</span><br><span class=\"line\">version.BuildInfo&#123;Version:&quot;v3.7.2&quot;, GitCommit:&quot;663a896f4a815053445eec4153677ddc24a0a361&quot;, GitTreeState:&quot;clean&quot;, GoVersion:&quot;go1.16.10&quot;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>添加 Longhorn Helm 存储库</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">helm repo add longhorn https://charts.longhorn.io</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>从存储库中获取最新图表</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">helm repo update</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>下载chart包</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">helm  pull longhorn/longhorn</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>解压</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xf longhorn-1.2.4.tgz</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>进入目录执行安装</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd longhorn</span><br><span class=\"line\">helm install longhorn  --namespace longhorn-system --create-namespace .</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>验证</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">kubectl get pod -n longhorn-system </span><br><span class=\"line\"></span><br><span class=\"line\">[16:51:32 root@node-1 longhorn]</span><br><span class=\"line\">NAME                 PROVISIONER          RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE</span><br><span class=\"line\">longhorn (default)   driver.longhorn.io   Delete          Immediate           true                   8m32s</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>创建pvc并且挂载验证</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1  </span><br><span class=\"line\">apiVersion: apps/v1 </span><br><span class=\"line\">kind: Deployment    </span><br><span class=\"line\">metadata:           </span><br><span class=\"line\">  name: nginx       </span><br><span class=\"line\">  namespace: default</span><br><span class=\"line\">spec:               </span><br><span class=\"line\">  replicas: 3      </span><br><span class=\"line\">  selector:          </span><br><span class=\"line\">    matchLabels:     </span><br><span class=\"line\">      app: nginx   </span><br><span class=\"line\">  template:          </span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      creationTimestamp: null</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app: nginx</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - name: test</span><br><span class=\"line\">        image: 192.168.10.254:5000/bash/nginx:v1</span><br><span class=\"line\">        volumeMounts: </span><br><span class=\"line\">        - mountPath: &quot;/data&quot;</span><br><span class=\"line\">          name: data</span><br><span class=\"line\">      volumes:              </span><br><span class=\"line\">        - name: data          </span><br><span class=\"line\">          persistentVolumeClaim: </span><br><span class=\"line\">            claimName: claim</span><br><span class=\"line\">---</span><br><span class=\"line\">kind: PersistentVolumeClaim</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: claim</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  accessModes:</span><br><span class=\"line\">    - ReadWriteMany</span><br><span class=\"line\">  storageClassName: longhorn</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">    requests:</span><br><span class=\"line\">      storage: 1Gi</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>创建后验证</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$kubectl get pvc</span><br><span class=\"line\">NAME    STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class=\"line\">claim   Bound    pvc-30ec630f-4b4d-4fad-a26f-36f7036919a7   1Gi        RWX            longhorn       2m23s</span><br><span class=\"line\">$kubectl get pod</span><br><span class=\"line\">NAME                    READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">nginx-996746966-g7fsw   1/1     Running   0          2m26s</span><br><span class=\"line\">nginx-996746966-lw67n   1/1     Running   0          2m26s</span><br><span class=\"line\">nginx-996746966-v7dst   1/1     Running   0          2m26s</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-修改配置\"><a href=\"#2-修改配置\" class=\"headerlink\" title=\"2.修改配置\"></a>2.修改配置</h3><p><strong>存储类配置</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">persistence:</span><br><span class=\"line\"></span><br><span class=\"line\">  defaultClass: true</span><br><span class=\"line\"></span><br><span class=\"line\">  defaultFsType: xfs</span><br><span class=\"line\"></span><br><span class=\"line\">  defaultClassReplicaCount: 1</span><br><span class=\"line\"></span><br><span class=\"line\">  reclaimPolicy: Delete</span><br><span class=\"line\"></span><br><span class=\"line\">  recurringJobSelector:</span><br><span class=\"line\">    enable: false</span><br><span class=\"line\">    jobList: []</span><br><span class=\"line\">  backingImage:</span><br><span class=\"line\">    enable: false</span><br><span class=\"line\">    name: ~</span><br><span class=\"line\">    dataSourceType: ~</span><br><span class=\"line\">    dataSourceParameters: ~</span><br><span class=\"line\">    expectedChecksum: ~</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>全局配置</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaultSettings:</span><br><span class=\"line\"></span><br><span class=\"line\">  backupTarget: ~</span><br><span class=\"line\">  backupTargetCredentialSecret: ~</span><br><span class=\"line\">  allowRecurringJobWhileVolumeDetached: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  createDefaultDiskLabeledNodes: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  defaultDataPath: /var/lib/longhorn</span><br><span class=\"line\"></span><br><span class=\"line\">  defaultDataLocality: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  replicaSoftAntiAffinity: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  replicaAutoBalance: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  storageOverProvisioningPercentage: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  storageMinimalAvailablePercentage: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  upgradeChecker: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  defaultReplicaCount: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  defaultLonghornStaticStorageClass: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  backupstorePollInterval: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  priorityClass: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  autoSalvage: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  disableSchedulingOnCordonedNode: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  replicaZoneSoftAntiAffinity: ~</span><br><span class=\"line\">  nodeDownPodDeletionPolicy: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  allowNodeDrainWithLastHealthyReplica: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  mkfsExt4Parameters: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  replicaReplenishmentWaitInterval: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  concurrentReplicaRebuildPerNodeLimit: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  disableRevisionCounter: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  systemManagedPodsImagePullPolicy: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  allowVolumeCreationWithDegradedAvailability: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  autoCleanupSystemGeneratedSnapshot: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  concurrentAutomaticEngineUpgradePerNodeLimit: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  backingImageCleanupWaitInterval: ~</span><br><span class=\"line\">  backingImageRecoveryWaitInterval: ~</span><br><span class=\"line\"></span><br><span class=\"line\">  guaranteedEngineManagerCPU: ~</span><br><span class=\"line\">  guaranteedReplicaManagerCPU: ~</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>csi配置</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">csi:</span><br><span class=\"line\"></span><br><span class=\"line\">  kubeletRootDir: /data1/kubelet/root                                                                        </span><br><span class=\"line\">  attacherReplicaCount: ~</span><br><span class=\"line\">  provisionerReplicaCount: ~</span><br><span class=\"line\">  resizerReplicaCount: ~</span><br><span class=\"line\">  snapshotterReplicaCount: ~</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-1-为UI控制台设置认证\"><a href=\"#3-1-为UI控制台设置认证\" class=\"headerlink\" title=\"3.1 为UI控制台设置认证\"></a>3.1 为UI控制台设置认证</h2><p>UI控制台自己并没有认证功能，依赖与ingress提供认证功能，这里使用ingress-nginx演示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">USER=admin; PASSWORD=123456; echo &quot;$&#123;USER&#125;:$(openssl passwd -stdin -apr1 &lt;&lt;&lt; $&#123;PASSWORD&#125;)&quot; &gt;&gt; auth</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl -n longhorn-system create secret generic basic-auth --from-file=auth</span><br><span class=\"line\"></span><br><span class=\"line\">apiVersion: networking.k8s.io/v1beta1</span><br><span class=\"line\">kind: Ingress</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: longhorn-ingress</span><br><span class=\"line\">  namespace: longhorn-system</span><br><span class=\"line\">  annotations:</span><br><span class=\"line\">    nginx.ingress.kubernetes.io/auth-type: basic</span><br><span class=\"line\">    nginx.ingress.kubernetes.io/ssl-redirect: &#x27;false&#x27;</span><br><span class=\"line\">    nginx.ingress.kubernetes.io/auth-secret: basic-auth</span><br><span class=\"line\">    nginx.ingress.kubernetes.io/auth-realm: &#x27;Authentication Required &#x27;</span><br><span class=\"line\">    nginx.ingress.kubernetes.io/proxy-body-size: 10000m</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  rules:   </span><br><span class=\"line\">  - host: www.longhornio.org</span><br><span class=\"line\">    http: </span><br><span class=\"line\">      paths:</span><br><span class=\"line\">      - pathType: Prefix</span><br><span class=\"line\">        path: &quot;/&quot;</span><br><span class=\"line\">        backend:</span><br><span class=\"line\">          serviceName: longhorn-frontend</span><br><span class=\"line\">          servicePort: 80</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-2-k8s中创建存储类\"><a href=\"#3-2-k8s中创建存储类\" class=\"headerlink\" title=\"3.2 k8s中创建存储类\"></a>3.2 k8s中创建存储类</h2><p>使用 kubectl 创建 Longhorn Volumes时，首先您将创建一个 Longhorn StorageClass。接下来，创建一个引用存储类的 PersistentVolumeClaim。最后，PersistentVolumeClaim 作为 Pod 中的卷挂载。部署 Pod 后，Kubernetes 主节点将检查 PersistentVolumeClaim，以确保资源请求可以得到满足。如果存储可用，Kubernetes 主节点将创建 Longhorn 卷并将其绑定到 Pod。</p>\n<p>官方示例文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kind: StorageClass</span><br><span class=\"line\">apiVersion: storage.k8s.io/v1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: longhorn-test           </span><br><span class=\"line\">provisioner: driver.longhorn.io</span><br><span class=\"line\">allowVolumeExpansion: true      </span><br><span class=\"line\">reclaimPolicy: Delete           </span><br><span class=\"line\">volumeBindingMode: Immediate    </span><br><span class=\"line\">parameters:       </span><br><span class=\"line\">  numberOfReplicas: &quot;2&quot;   </span><br><span class=\"line\">  staleReplicaTimeout: &quot;2880&quot;  </span><br><span class=\"line\">  fromBackup: &quot;&quot;</span><br><span class=\"line\">  fsType: &quot;ext4&quot;   </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-3-卷扩展\"><a href=\"#3-3-卷扩展\" class=\"headerlink\" title=\"3.3 卷扩展\"></a>3.3 卷扩展</h2><p>使用StorageClass创建的卷，可以直接修改pvc的<code>spec.resources.requests.storage</code>字段进行扩容,如果卷是被挂载状态修改完成后并不会立马进行扩容操作，必须停止挂载pvc的Pod使pvc处于<code>detached</code>状态后才会进行扩容操作。</p>\n<p>在扩展期间不允许重建和添加复制副本，在重建或添加复制副本时不允许扩展。</p>\n<p><strong>示例</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get pvc</span><br><span class=\"line\">NAME    STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class=\"line\">claim   Bound    pvc-5119939d-ff12-42c4-b6f8-5d2fcc393bc2   1Gi        RWX            longhorn       11s</span><br><span class=\"line\">$ kubectl edit pvc claim</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  accessModes:</span><br><span class=\"line\">  - ReadWriteMany</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">    requests:</span><br><span class=\"line\">      storage: 2Gi  </span><br><span class=\"line\">$kubectl get pvc</span><br><span class=\"line\">NAME    STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class=\"line\">claim   Bound    pvc-5119939d-ff12-42c4-b6f8-5d2fcc393bc2   2Gi        RWX            longhorn       63s</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-4-单节点多磁盘实现\"><a href=\"#3-4-单节点多磁盘实现\" class=\"headerlink\" title=\"3.4 单节点多磁盘实现\"></a>3.4 单节点多磁盘实现</h2><p>Longhorn 支持在节点上使用多个磁盘来存储卷数据，默认情况下会初始k8s所有的node节点作为Longhorn的数据节点，默认的数据目录为<code>/var/lib/longhorn</code>。但是可以通过安装时设置<code>createDefaultDiskLabeledNodes</code>为true，改变默认操作表示只有<code>node.longhorn.io/create-default-disk=true</code>标签的node才会初始化数据目录，可以不给节点打这个标签，之后手动在UI页面配置各个节点的磁盘，配置方式如下。</p>\n<ul>\n<li>修改部署helm的valuse文件，重新部署</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaultSettings:</span><br><span class=\"line\">  createDefaultDiskLabeledNodes: true  #修改这个值</span><br><span class=\"line\"></span><br><span class=\"line\">#重新部署</span><br><span class=\"line\">$ helm install longhorn -n longhorn-system .</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>UI验证</li>\n</ul>\n<p>可以看到所有node都是禁止调度以及没有数据目录的状态</p>\n<p><img src=\"https://zhangzhuo-1257627961.cos.ap-beijing.myqcloud.com//Typora/image-20220517135320789.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100\"></p>\n<ul>\n<li>node添加磁盘</li>\n</ul>\n<p>选择一个node节点,点击<code>Edit Node and Disks</code>进入编辑状态。</p>\n<p>点击<code>Add Disk</code>进行数据目录的添加，数据目录需事先进行格式化硬盘并且挂载到相应目录</p>\n<p>可以重复添加多个数据目录，每个数据目录对应一个物理磁盘</p>\n<p><img src=\"https://zhangzhuo-1257627961.cos.ap-beijing.myqcloud.com//Typora/image-20220517141202652.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100\"></p>\n<p><strong>填写的内容有</strong></p>\n<ul>\n<li>Name: 磁盘名称</li>\n<li>Path：数据目录路径</li>\n<li>Storage Reserved: 保留空间</li>\n<li>Scheduling: 是否允许调度</li>\n<li>Eviction Requested: 是否驱逐副本</li>\n</ul>\n<h2 id=\"3-5-驱逐节点上的副本与磁盘\"><a href=\"#3-5-驱逐节点上的副本与磁盘\" class=\"headerlink\" title=\"3.5 驱逐节点上的副本与磁盘\"></a>3.5 驱逐节点上的副本与磁盘</h2><p>驱逐节点上的副本需要在UI页面进行操作，在Node选项卡找到对应的节点，需要先设置禁用节点相应磁盘后在设置驱逐副本。</p>\n<p><strong>驱逐节点磁盘副本</strong></p>\n<ol>\n<li>到选项卡，选择其中一个节点，然后在下拉菜单中进行选择。<code>Node Edit Node and Disks</code></li>\n<li>确保已禁用磁盘以进行调度并设置为 。<code>Scheduling Disable</code></li>\n<li>设置为并保存。<code>Eviction Requested true</code></li>\n<li>之后等待磁盘中的副本变为0，即可进行删除磁盘操作</li>\n</ol>\n<p><img src=\"https://zhangzhuo-1257627961.cos.ap-beijing.myqcloud.com//Typora/image-20220517134121358.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100\"></p>\n<p><strong>驱逐节点所有副本</strong></p>\n<ol>\n<li>转到选项卡，选择一个或多个节点，然后单击 。<code>Node Edit Node</code></li>\n<li>确保已禁用节点以进行调度并设置为 。<code>Scheduling Disable</code></li>\n<li>设置为 ，然后保存。<code>Eviction Requested true</code></li>\n</ol>\n<p><img src=\"https://zhangzhuo-1257627961.cos.ap-beijing.myqcloud.com//Typora/image-20220517134420184.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100\"></p>\n<h2 id=\"3-6-移除node节点步骤\"><a href=\"#3-6-移除node节点步骤\" class=\"headerlink\" title=\"3.6 移除node节点步骤\"></a>3.6 移除node节点步骤</h2><ol>\n<li>禁用磁盘调度。</li>\n<li>逐出节点上的所有副本。</li>\n<li>驱逐节点所有Pod</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl drain &lt;node-name&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>使用选项卡中的 从 Longhorn 中删除节点。<code>Delete Node</code></p>\n<p>或者，从 Kubernetes 中删除该节点，使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl delete node &lt;node-name&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Longhorn 将自动从群集中删除该节点。</p>\n</li>\n</ol>\n<h2 id=\"3-7-卷访问模式\"><a href=\"#3-7-卷访问模式\" class=\"headerlink\" title=\"3.7 卷访问模式\"></a>3.7 卷访问模式</h2><p>Longhorn部署在k8s中时创建PVC时可指定俩种访问模式分别为<code>ReadWriteMany</code>,<code>ReadWriteOnce</code>,俩种模式在Pod中的挂载方式有所不同。</p>\n<p><strong>ReadWriteMany：可以被多个Pod以读写的方式进行挂载</strong></p>\n<p>当pvc被定义为<code>ReadWriteMany</code>访问模式时，当挂载这个pvc的Pod启动时Longhorn会创建一个共享挂载的容器以iSCSI的方式先把这个pvc挂载到这个pod，之后所有挂载这个Pod的容器都以nfs的方式通过这个容器挂载这个Pod，从而实现一个PVC可以被多个Pod挂载</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[15:49:26 root@nexus test]</span><br><span class=\"line\">NAME                                                     READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">share-manager-pvc-e8dc9c09-f46e-46bf-8873-4aa6b1cc2a4e   1/1     Running   0          8m9s  </span><br><span class=\"line\">[15:50:15 root@nexus test]</span><br><span class=\"line\">NAME                                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)     AGE</span><br><span class=\"line\">pvc-e8dc9c09-f46e-46bf-8873-4aa6b1cc2a4e   ClusterIP   172.10.53.247    &lt;none&gt;        2049/TCP    8m56s  </span><br><span class=\"line\"></span><br><span class=\"line\">root@nginx-996746966-cvr94:/</span><br><span class=\"line\">Filesystem                                               Size  Used Avail Use% Mounted on</span><br><span class=\"line\">172.10.53.247:/pvc-e8dc9c09-f46e-46bf-8873-4aa6b1cc2a4e 1014M   39M  975M   4% /data    </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>ReadWriteOnce: 只允许一个Pod挂载</strong></p>\n<p>当pvc被定义为<code>ReadWriteOnce</code>访问模式时，挂载Pvc的Pod会直接以iSCSI方式挂载这个pvc</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[15:50:27 root@nexus test]</span><br><span class=\"line\">NAME                        STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class=\"line\">nginx-nginx-statefulset-0   Bound    pvc-24a2da15-d1fb-4e33-a99a-ed32081b52a2   1Gi        RWO            longhorn       28m</span><br><span class=\"line\"></span><br><span class=\"line\">root@nginx-statefulset-3:/</span><br><span class=\"line\">Filesystem                                              Size  Used Avail Use% Mounted on</span><br><span class=\"line\">/dev/longhorn/pvc-5785b32c-fc5e-4122-939a-57f8eb306d78 1014M   40M  975M   4% /data</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-8-高可用相关\"><a href=\"#3-8-高可用相关\" class=\"headerlink\" title=\"3.8 高可用相关\"></a>3.8 高可用相关</h2><h3 id=\"1-自动平衡副本\"><a href=\"#1-自动平衡副本\" class=\"headerlink\" title=\"1.自动平衡副本\"></a>1.自动平衡副本</h3><p>当副本在节点或区域上的调度不均匀时，Longhorn 设置允许副本在新节点可用于群集时进行自动平衡。</p>\n<p>设置参数为<code>eplicaAutoBalance</code>，全局配置，可以安装时在valuse中设置</p>\n<ul>\n<li><code>disabled</code>.这是默认选项，不会执行副本自动平衡。</li>\n<li><code>least-effort</code>.此选项指示 Longhorn 平衡副本以实现最小冗余。例如，添加节点 2 后，具有 4 个不平衡副本的卷将仅重新平衡 1 个副本。</li>\n<li><code>best-effort</code>.此选项指示 Longhorn 尝试平衡副本以实现均匀冗余。例如，添加节点 2 后，具有 4 个不平衡副本的卷将重新平衡 2 个副本。</li>\n</ul>\n<p><strong>在存储类中设置</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kind: StorageClass</span><br><span class=\"line\">apiVersion: storage.k8s.io/v1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: hyper-converged</span><br><span class=\"line\">provisioner: driver.longhorn.io</span><br><span class=\"line\">allowVolumeExpansion: true</span><br><span class=\"line\">parameters:</span><br><span class=\"line\">  numberOfReplicas: &quot;3&quot;</span><br><span class=\"line\">  replicaAutoBalance: &quot;least-effort&quot;  </span><br><span class=\"line\">  staleReplicaTimeout: &quot;2880&quot; </span><br><span class=\"line\">  fromBackup: &quot;&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>官方文档：<a href=\"https://longhorn.io/docs/1.2.4/monitoring\">https://longhorn.io/docs/1.2.4/monitoring</a></p>\n<p>这里采用kube-Prometheus项目进行监控。</p>\n<p>Longhorn 在 REST 端点上以 Prometheus 文本格式原生公开指标。<code>http://LONGHORN_MANAGER_IP:PORT/metrics</code></p>\n<p>官方示例。监控系统使用Prometheus来收集数据和警报，Grafana用于可视化&#x2F;仪表板收集的数据。从高级概述来看，监控系统包含：</p>\n<ul>\n<li>Prometheus服务器，从Longhorn指标端点抓取和存储时间序列数据。Prometheus还负责根据配置的规则和收集的数据生成警报。然后，Prometheus服务器向警报管理器发送警报。</li>\n<li>然后，AlertManager 管理这些警报，包括静音、抑制、聚合以及通过电子邮件、待命通知系统和聊天平台等方法发送通知。</li>\n<li>Grafana查询Prometheus服务器以获取数据并绘制用于可视化的仪表板。</li>\n</ul>\n<p><img src=\"https://zhangzhuo-1257627961.cos.ap-beijing.myqcloud.com//Typora/longhorn-monitoring-system.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100\"></p>\n<h2 id=\"4-1-使用ServiceMonitor获取指标数据\"><a href=\"#4-1-使用ServiceMonitor获取指标数据\" class=\"headerlink\" title=\"4.1 使用ServiceMonitor获取指标数据\"></a>4.1 使用ServiceMonitor获取指标数据</h2><p><strong>示例文件</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: monitoring.coreos.com/v1</span><br><span class=\"line\">kind: ServiceMonitor</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: longhorn</span><br><span class=\"line\">  namespace: monitoring</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    name: longhorn</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  endpoints:</span><br><span class=\"line\">  - port: manager</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    matchLabels:</span><br><span class=\"line\">      app: longhorn-manager</span><br><span class=\"line\">  namespaceSelector:</span><br><span class=\"line\">    matchNames:</span><br><span class=\"line\">    - longhorn-system</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-2-创建ruleg告警规则\"><a href=\"#4-2-创建ruleg告警规则\" class=\"headerlink\" title=\"4.2 创建ruleg告警规则\"></a>4.2 创建ruleg告警规则</h2><p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: monitoring.coreos.com/v1</span><br><span class=\"line\">kind: PrometheusRule</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    prometheus: longhorn</span><br><span class=\"line\">    role: alert-rules</span><br><span class=\"line\">  name: prometheus-longhorn-rules</span><br><span class=\"line\">  namespace: monitoring</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  groups:</span><br><span class=\"line\">  - name: longhorn.rules</span><br><span class=\"line\">    rules:</span><br><span class=\"line\">    - alert: LonghornVolumeActualSpaceUsedWarning</span><br><span class=\"line\">      annotations:</span><br><span class=\"line\">        description: The actual space used by Longhorn volume &#123;&#123;$labels.volume&#125;&#125; on &#123;&#123;$labels.node&#125;&#125; is at &#123;&#123;$value&#125;&#125;% capacity for</span><br><span class=\"line\">          more than 5 minutes.</span><br><span class=\"line\">        summary: The actual used space of Longhorn volume is over 90% of the capacity.</span><br><span class=\"line\">      expr: (longhorn_volume_actual_size_bytes / longhorn_volume_capacity_bytes) * 100 &gt; 90</span><br><span class=\"line\">      for: 5m</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        issue: The actual used space of Longhorn volume &#123;&#123;$labels.volume&#125;&#125; on &#123;&#123;$labels.node&#125;&#125; is high.</span><br><span class=\"line\">        severity: warning</span><br><span class=\"line\">    - alert: LonghornVolumeStatusCritical</span><br><span class=\"line\">      annotations:</span><br><span class=\"line\">        description: Longhorn volume &#123;&#123;$labels.volume&#125;&#125; on &#123;&#123;$labels.node&#125;&#125; is Fault for</span><br><span class=\"line\">          more than 2 minutes.</span><br><span class=\"line\">        summary: Longhorn volume &#123;&#123;$labels.volume&#125;&#125; is Fault</span><br><span class=\"line\">      expr: longhorn_volume_robustness == 3</span><br><span class=\"line\">      for: 5m</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        issue: Longhorn volume &#123;&#123;$labels.volume&#125;&#125; is Fault.</span><br><span class=\"line\">        severity: critical</span><br><span class=\"line\">    - alert: LonghornVolumeStatusWarning</span><br><span class=\"line\">      annotations:</span><br><span class=\"line\">        description: Longhorn volume &#123;&#123;$labels.volume&#125;&#125; on &#123;&#123;$labels.node&#125;&#125; is Degraded for</span><br><span class=\"line\">          more than 5 minutes.</span><br><span class=\"line\">        summary: Longhorn volume &#123;&#123;$labels.volume&#125;&#125; is Degraded</span><br><span class=\"line\">      expr: longhorn_volume_robustness == 2</span><br><span class=\"line\">      for: 5m</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        issue: Longhorn volume &#123;&#123;$labels.volume&#125;&#125; is Degraded.</span><br><span class=\"line\">        severity: warning</span><br><span class=\"line\">    - alert: LonghornNodeStorageWarning</span><br><span class=\"line\">      annotations:</span><br><span class=\"line\">        description: The used storage of node &#123;&#123;$labels.node&#125;&#125; is at &#123;&#123;$value&#125;&#125;% capacity for</span><br><span class=\"line\">          more than 5 minutes.</span><br><span class=\"line\">        summary:  The used storage of node is over 70% of the capacity.</span><br><span class=\"line\">      expr: (longhorn_node_storage_usage_bytes / longhorn_node_storage_capacity_bytes) * 100 &gt; 70</span><br><span class=\"line\">      for: 5m</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        issue: The used storage of node &#123;&#123;$labels.node&#125;&#125; is high.</span><br><span class=\"line\">        severity: warning</span><br><span class=\"line\">    - alert: LonghornDiskStorageWarning</span><br><span class=\"line\">      annotations:</span><br><span class=\"line\">        description: The used storage of disk &#123;&#123;$labels.disk&#125;&#125; on node &#123;&#123;$labels.node&#125;&#125; is at &#123;&#123;$value&#125;&#125;% capacity for</span><br><span class=\"line\">          more than 5 minutes.</span><br><span class=\"line\">        summary:  The used storage of disk is over 70% of the capacity.</span><br><span class=\"line\">      expr: (longhorn_disk_usage_bytes / longhorn_disk_capacity_bytes) * 100 &gt; 70</span><br><span class=\"line\">      for: 5m</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        issue: The used storage of disk &#123;&#123;$labels.disk&#125;&#125; on node &#123;&#123;$labels.node&#125;&#125; is high.</span><br><span class=\"line\">        severity: warning</span><br><span class=\"line\">    - alert: LonghornNodeDown</span><br><span class=\"line\">      annotations:</span><br><span class=\"line\">        description: There are &#123;&#123;$value&#125;&#125; Longhorn nodes which have been offline for more than 5 minutes.</span><br><span class=\"line\">        summary: Longhorn nodes is offline</span><br><span class=\"line\">      expr: (avg(longhorn_node_count_total) or on() vector(0)) - (count(longhorn_node_status&#123;condition=&quot;ready&quot;&#125; == 1) or on() vector(0)) &gt; 0</span><br><span class=\"line\">      for: 5m</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        issue: There are &#123;&#123;$value&#125;&#125; Longhorn nodes are offline</span><br><span class=\"line\">        severity: critical</span><br><span class=\"line\">    - alert: LonghornIntanceManagerCPUUsageWarning</span><br><span class=\"line\">      annotations:</span><br><span class=\"line\">        description: Longhorn instance manager &#123;&#123;$labels.instance_manager&#125;&#125; on &#123;&#123;$labels.node&#125;&#125; has CPU Usage / CPU request is &#123;&#123;$value&#125;&#125;% for</span><br><span class=\"line\">          more than 5 minutes.</span><br><span class=\"line\">        summary: Longhorn instance manager &#123;&#123;$labels.instance_manager&#125;&#125; on &#123;&#123;$labels.node&#125;&#125; has CPU Usage / CPU request is over 300%.</span><br><span class=\"line\">      expr: (longhorn_instance_manager_cpu_usage_millicpu/longhorn_instance_manager_cpu_requests_millicpu) * 100 &gt; 300</span><br><span class=\"line\">      for: 5m</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        issue: Longhorn instance manager &#123;&#123;$labels.instance_manager&#125;&#125; on &#123;&#123;$labels.node&#125;&#125; consumes 3 times the CPU request.</span><br><span class=\"line\">        severity: warning</span><br><span class=\"line\">    - alert: LonghornNodeCPUUsageWarning</span><br><span class=\"line\">      annotations:</span><br><span class=\"line\">        description: Longhorn node &#123;&#123;$labels.node&#125;&#125; has CPU Usage / CPU capacity is &#123;&#123;$value&#125;&#125;% for</span><br><span class=\"line\">          more than 5 minutes.</span><br><span class=\"line\">        summary: Longhorn node &#123;&#123;$labels.node&#125;&#125; experiences high CPU pressure for more than 5m.</span><br><span class=\"line\">      expr: (longhorn_node_cpu_usage_millicpu / longhorn_node_cpu_capacity_millicpu) * 100 &gt; 90</span><br><span class=\"line\">      for: 5m</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        issue: Longhorn node &#123;&#123;$labels.node&#125;&#125; experiences high CPU pressure.</span><br><span class=\"line\">        severity: warning</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-3-导入grafana模板\"><a href=\"#4-3-导入grafana模板\" class=\"headerlink\" title=\"4.3 导入grafana模板\"></a>4.3 导入grafana模板</h2><p>模板：<a href=\"https://grafana.com/grafana/dashboards/13032\">https://grafana.com/grafana/dashboards/13032</a></p>\n<h2 id=\"5-1-快照功能\"><a href=\"#5-1-快照功能\" class=\"headerlink\" title=\"5.1 快照功能\"></a>5.1 快照功能</h2><p>快照是 Kubernetes 卷在任何给定时间点的状态。</p>\n<p>要创建现有集群的快照，</p>\n<ol>\n<li>在 Longhorn UI 的顶部导航栏中，单击<strong>Volume</strong>。</li>\n<li>单击要为其拍摄快照的卷的名称。这将进入卷详细页面。</li>\n<li>单击<strong>Take Snapshot</strong>按钮</li>\n</ol>\n<p>创建快照后，您将在卷头之前的卷快照列表中看到它</p>\n<h2 id=\"5-2-卷克隆\"><a href=\"#5-2-卷克隆\" class=\"headerlink\" title=\"5.2 卷克隆\"></a>5.2 卷克隆</h2><p>Longhorn 支持 CSI 卷克隆。官方说明<a href=\"https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/\">https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/</a></p>\n<p><strong>示例</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kind: PersistentVolumeClaim</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: claim</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  accessModes:</span><br><span class=\"line\">    - ReadWriteMany</span><br><span class=\"line\">  storageClassName: longhorn</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">    requests:</span><br><span class=\"line\">      storage: 1Gi</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>您可以通过应用以下 yaml 文件来创建一个内容与 完全相同的新 PVC，除了官方的一些要求之外还必须满足cloned-claim和claim的<code>resources.requests.storage</code>相同。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: PersistentVolumeClaim</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: cloned-claim</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  storageClassName: longhorn</span><br><span class=\"line\">  dataSource:</span><br><span class=\"line\">    name: claim</span><br><span class=\"line\">    kind: PersistentVolumeClaim</span><br><span class=\"line\">  accessModes:</span><br><span class=\"line\">    - ReadWriteMany</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">    requests:</span><br><span class=\"line\">      storage: 1Gi</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>创建后验证：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[16:15:14 root@nexus test]</span><br><span class=\"line\">NAME           STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class=\"line\">claim          Bound    pvc-e8dc9c09-f46e-46bf-8873-4aa6b1cc2a4e   1Gi        RWX            longhorn       50m</span><br><span class=\"line\">cloned-claim   Bound    pvc-911789f9-fe73-44a8-bc12-7cd53674bf04   1Gi        RWO            longhorn       2m49s</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-3-备份详解\"><a href=\"#5-3-备份详解\" class=\"headerlink\" title=\"5.3 备份详解\"></a>5.3 备份详解</h2><p>Longhorn可以备份数据到s3对象存储或者nfs当中，并且可以设置定期备份。</p>\n<h3 id=\"1-备份目标设置\"><a href=\"#1-备份目标设置\" class=\"headerlink\" title=\"1.备份目标设置\"></a>1.备份目标设置</h3><p>备份目标是用于访问 Longhorn 中的备份存储的端点。备份存储是 NFS 服务器或 S3 兼容服务器，用于存储 Longhorn 卷的备份。</p>\n<p>我这里使用minio与nfs进行演示，如果使用其他s3对象存储请查看官方文档：<a href=\"https://longhorn.io/docs/1.2.4/snapshots-and-backups/backup-and-restore/set-backup-target/\">https://longhorn.io/docs/1.2.4/snapshots-and-backups/backup-and-restore/set-backup-target/</a></p>\n<p>备份目标的配置有俩项分别是</p>\n<p>backupTarget：备份目标设置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s3://对象存储桶名称@区域/目录名称/</span><br><span class=\"line\">s3://backupbucket@us-east-1/backup/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">nfs://nfs服务器地址:nfs服务器共享目录位置</span><br><span class=\"line\">nfs://longhorn-test-nfs-svc.default:/opt/backupstore</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>backupTargetCredentialSecret：备份目标的其他设置是secret资源名称，资源配置如下,只有使用s3对象存储才会有这个配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Secret</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: minio-secret</span><br><span class=\"line\">  namespace: longhorn-system</span><br><span class=\"line\">type: Opaque</span><br><span class=\"line\">data:  </span><br><span class=\"line\">  AWS_ACCESS_KEY_ID: xxx   </span><br><span class=\"line\">  AWS_SECRET_ACCESS_KEY: xxxx </span><br><span class=\"line\">  AWS_ENDPOINTS: xxxx </span><br><span class=\"line\">  AWS_CERT: xxxx     </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>MInio配置示例</strong>：</p>\n<p>需先部署minio服务，之后进行配置：</p>\n<p>安装时设置，需修改values文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaultSettings:</span><br><span class=\"line\">  backupTarget: s3://backupbucket@us-east-1/</span><br><span class=\"line\">  backupTargetCredentialSecret: minio-secret</span><br><span class=\"line\"></span><br><span class=\"line\">helm install longhorn -n longhorn-system . </span><br><span class=\"line\"></span><br><span class=\"line\">kubectl create secret generic minio-secret -n longhorn-system \\</span><br><span class=\"line\">--from-literal=AWS_ACCESS_KEY_ID=minio \\</span><br><span class=\"line\">--from-literal=AWS_SECRET_ACCESS_KEY=minio123 \\</span><br><span class=\"line\">--from-literal=AWS_ENDPOINTS=http://192.168.10.254:9000</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>配置完成后登录UI页面点击<code>Backup</code>选项卡，没有任何报错信息表示配置没有问题。</p>\n<p><strong>NFS配置示例</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaultSettings:</span><br><span class=\"line\">  backupTarget: nfs://192.168.254:/nfs/backup</span><br><span class=\"line\">  backupTargetCredentialSecret: ~  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-手动创建备份\"><a href=\"#2-手动创建备份\" class=\"headerlink\" title=\"2.手动创建备份\"></a>2.手动创建备份</h3><p>必须设置备份目标。确定备份目标配置没有问题，并且备份的volume必须处于挂载状态才可以进行备份。</p>\n<ol>\n<li>导航到<strong>Volume</strong>菜单。</li>\n<li>选择要备份的卷。</li>\n<li>单击<strong>Create backup</strong></li>\n<li>添加任何适当的标签，然后单击确定。</li>\n</ol>\n<p>创建完成后可以在<strong>Backup</strong>导航菜单看到所创建的备份。</p>\n<h3 id=\"3-定期备份\"><a href=\"#3-定期备份\" class=\"headerlink\" title=\"3.定期备份\"></a>3.定期备份</h3><p>可以在UI中配置，也可以在k8s中进行配置，他是一个CRD资源<code>RecurringJob</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: longhorn.io/v1beta1</span><br><span class=\"line\">kind: RecurringJob</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: backup</span><br><span class=\"line\">  namespace: longhorn-system</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  cron: &quot;*/5 * * * *&quot;</span><br><span class=\"line\">  task: &quot;backup&quot;</span><br><span class=\"line\">  groups:</span><br><span class=\"line\">  - default</span><br><span class=\"line\">  - group1</span><br><span class=\"line\">  retain: 1</span><br><span class=\"line\">  concurrency: 2</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    label/1: a</span><br><span class=\"line\">    label/2: b</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>name</code>：定期作业的名称。不要使用重复的名称。并且的长度不应超过40个字符。</li>\n<li><code>task</code>：作业类型。它支持（定期创建快照）或（定期创建快照然后进行备份）。选项有<code>snapshot</code>，<code>backup</code></li>\n<li><code>cron</code>：克伦表达式。它告诉作业的执行时间。</li>\n<li><code>retain</code>：Longhorn 将为每个卷作业保留多少个快照&#x2F;备份。它应该不小于1。</li>\n<li><code>concurrency</code>：要并发运行的作业数。它应该不小于1。</li>\n</ul>\n<p>可以指定可选参数：</p>\n<ul>\n<li><code>groups</code>：作业应属于的组，默认volues创建后都属于default组，所以如果对所有卷进行备份请设置default，如果不同的卷有不同的备份请配置不同组</li>\n<li><code>labels</code>：创建快照与备份后添加相应的标签。</li>\n</ul>\n<h3 id=\"4-允许在分离状态的卷进行备份作业\"><a href=\"#4-允许在分离状态的卷进行备份作业\" class=\"headerlink\" title=\"4.允许在分离状态的卷进行备份作业\"></a>4.允许在分离状态的卷进行备份作业</h3><p>Longhorn 提供的设置允许您执行定期备份，即使卷已分离也是如此。</p>\n<p>您可以在 Longhorn UI 中找到该设置。<code>allow-recurring-job-while-volume-detached</code>，安装时设置项在values配置文件中。</p>\n<p>启用该设置后，Longhorn 将自动附加卷，并在需要执行定期快照&#x2F;备份时拍摄快照&#x2F;备份。</p>\n<p>请注意，在自动附加卷期间，卷尚未准备好执行工作负载。工作负荷必须等到定期作业完成。</p>\n<h2 id=\"5-4-重备份还原pvc\"><a href=\"#5-4-重备份还原pvc\" class=\"headerlink\" title=\"5.4 重备份还原pvc\"></a>5.4 重备份还原pvc</h2><p>还原操作必须去UI页面进行操作，需要先删除要还原的卷。</p>\n<ol>\n<li>导航到<strong>Backup</strong></li>\n<li>选择要还原的备份，然后单击<strong>Restore Backup backup</strong></li>\n<li>在<strong>name</strong>字段中，选择要还原的卷。</li>\n<li>单击<strong>OK</strong></li>\n<li>此时卷已经恢复但是PVC是不会自己创建的需要进行Volume中找到恢复的卷点击编辑选择<code>Create PV/PVC</code>配置完成后点击<code>OK</code>即可。</li>\n</ol>\n","text":"Longhorn云原生存储官方github：https://github.com/longhorn/longhorn 官方网站：https://longhorn...","permalink":"/post/OCI/Longhorn云原生存储","photos":[],"count_time":{"symbolsCount":"27k","symbolsTime":"25 mins."},"categories":[{"name":"Longhorn","slug":"Longhorn","count":1,"path":"api/categories/Longhorn.json"},{"name":"OCI","slug":"Longhorn/OCI","count":1,"path":"api/categories/Longhorn/OCI.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"Kubernetes","slug":"Kubernetes","count":1,"path":"api/tags/Kubernetes.json"},{"name":"Pod","slug":"Pod","count":1,"path":"api/tags/Pod.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Longhorn%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">Longhorn云原生存储</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1.1 架构介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E7%BD%AE%E7%9A%84%E4%BC%98%E5%8A%BF\"><span class=\"toc-text\">1.2 微服务设置的优势</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-3-%E7%B2%BE%E7%AE%80%E7%BD%AE%E5%A4%87%E5%92%8C%E5%8D%B7%E5%A4%A7%E5%B0%8F%E3%80%81\"><span class=\"toc-text\">1.3 精简置备和卷大小、</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-4-%E5%89%AF%E6%9C%AC\"><span class=\"toc-text\">1.4 副本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%89%AF%E6%9C%AC%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">1.副本的工作原理</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-5-%E5%BF%AB%E7%85%A7\"><span class=\"toc-text\">1.5 快照</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%BF%AB%E7%85%A7%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">1.快照工作原理</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-6-%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BE%85%E5%8A%A9%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">1.6 备份和辅助存储</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%A4%87%E4%BB%BD%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">1.备份原理</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E5%AE%89%E8%A3%85%E5%89%8D%E5%87%86%E5%A4%87\"><span class=\"toc-text\">2.1 安装前准备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E4%BD%BF%E7%94%A8Helm%E5%AE%89%E8%A3%85Longhorn\"><span class=\"toc-text\">2.2 使用Helm安装Longhorn</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">1.部署</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.修改配置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E4%B8%BAUI%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%AE%BE%E7%BD%AE%E8%AE%A4%E8%AF%81\"><span class=\"toc-text\">3.1 为UI控制台设置认证</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-k8s%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%AD%98%E5%82%A8%E7%B1%BB\"><span class=\"toc-text\">3.2 k8s中创建存储类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-%E5%8D%B7%E6%89%A9%E5%B1%95\"><span class=\"toc-text\">3.3 卷扩展</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-4-%E5%8D%95%E8%8A%82%E7%82%B9%E5%A4%9A%E7%A3%81%E7%9B%98%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">3.4 单节点多磁盘实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-5-%E9%A9%B1%E9%80%90%E8%8A%82%E7%82%B9%E4%B8%8A%E7%9A%84%E5%89%AF%E6%9C%AC%E4%B8%8E%E7%A3%81%E7%9B%98\"><span class=\"toc-text\">3.5 驱逐节点上的副本与磁盘</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-6-%E7%A7%BB%E9%99%A4node%E8%8A%82%E7%82%B9%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">3.6 移除node节点步骤</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-7-%E5%8D%B7%E8%AE%BF%E9%97%AE%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">3.7 卷访问模式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-8-%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">3.8 高可用相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E8%87%AA%E5%8A%A8%E5%B9%B3%E8%A1%A1%E5%89%AF%E6%9C%AC\"><span class=\"toc-text\">1.自动平衡副本</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E4%BD%BF%E7%94%A8ServiceMonitor%E8%8E%B7%E5%8F%96%E6%8C%87%E6%A0%87%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">4.1 使用ServiceMonitor获取指标数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-%E5%88%9B%E5%BB%BAruleg%E5%91%8A%E8%AD%A6%E8%A7%84%E5%88%99\"><span class=\"toc-text\">4.2 创建ruleg告警规则</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-3-%E5%AF%BC%E5%85%A5grafana%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">4.3 导入grafana模板</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-1-%E5%BF%AB%E7%85%A7%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">5.1 快照功能</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-2-%E5%8D%B7%E5%85%8B%E9%9A%86\"><span class=\"toc-text\">5.2 卷克隆</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-3-%E5%A4%87%E4%BB%BD%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">5.3 备份详解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%A4%87%E4%BB%BD%E7%9B%AE%E6%A0%87%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">1.备份目标设置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%89%8B%E5%8A%A8%E5%88%9B%E5%BB%BA%E5%A4%87%E4%BB%BD\"><span class=\"toc-text\">2.手动创建备份</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%AE%9A%E6%9C%9F%E5%A4%87%E4%BB%BD\"><span class=\"toc-text\">3.定期备份</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%85%81%E8%AE%B8%E5%9C%A8%E5%88%86%E7%A6%BB%E7%8A%B6%E6%80%81%E7%9A%84%E5%8D%B7%E8%BF%9B%E8%A1%8C%E5%A4%87%E4%BB%BD%E4%BD%9C%E4%B8%9A\"><span class=\"toc-text\">4.允许在分离状态的卷进行备份作业</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-4-%E9%87%8D%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9Fpvc\"><span class=\"toc-text\">5.4 重备份还原pvc</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Shell脚本调试技术","uid":"5df6cb5002e831cbd9dddd37fc2dda58","slug":"LINUX/Shell脚本调试技术","date":"2024-06-12T15:15:07.000Z","updated":"2025-09-30T03:26:35.974Z","comments":true,"path":"api/articles/LINUX/Shell脚本调试技术.json","keywords":"XuGuangSheng","cover":"/covers/shell.jpg","text":"Shell脚本调试技术shell编程在unix/linux世界中使用得非常广泛，熟练掌握shell编程也是成为一名优秀的unix/linux开发者和系统管理员的...","permalink":"/post/LINUX/Shell脚本调试技术","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"shell","slug":"shell","count":2,"path":"api/categories/shell.json"},{"name":"LINUX","slug":"shell/LINUX","count":2,"path":"api/categories/shell/LINUX.json"}],"tags":[{"name":"使用","slug":"使用","count":5,"path":"api/tags/使用.json"},{"name":"DEBUG","slug":"DEBUG","count":1,"path":"api/tags/DEBUG.json"},{"name":"trap","slug":"trap","count":1,"path":"api/tags/trap.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"高校项目汇总","uid":"b7a0ddae62c7a26d383904662692ec9c","slug":"OTHER/高校项目汇总","date":"2024-06-06T23:53:57.000Z","updated":"2025-09-30T03:27:02.398Z","comments":true,"path":"api/articles/OTHER/高校项目汇总.json","keywords":"XuGuangSheng","cover":"/covers/309e2b0f0197.jpg","text":"高校项目汇总【清华大学】 1.学堂在线：https://www.xuetangx.com 2.深言达意：https://www.shenyandayi.com ...","permalink":"/post/OTHER/高校项目汇总","photos":[],"count_time":{"symbolsCount":908,"symbolsTime":"1 mins."},"categories":[{"name":"https","slug":"https","count":12,"path":"api/categories/https.json"},{"name":"OTHER","slug":"https/OTHER","count":2,"path":"api/categories/https/OTHER.json"}],"tags":[{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"www","slug":"www","count":8,"path":"api/tags/www.json"},{"name":"org","slug":"org","count":2,"path":"api/tags/org.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}