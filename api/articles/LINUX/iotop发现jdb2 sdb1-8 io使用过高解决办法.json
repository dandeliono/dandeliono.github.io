{"title":"iotop发现jdb2 sdb1-8 io使用过高解决办法","uid":"a5de914b5d23a430628c528e96e12efd","slug":"LINUX/iotop发现jdb2 sdb1-8 io使用过高解决办法","date":"2022-08-03T16:05:11.000Z","updated":"2025-09-30T03:26:37.167Z","comments":true,"path":"api/articles/LINUX/iotop发现jdb2 sdb1-8 io使用过高解决办法.json","keywords":"XuGuangSheng","cover":"/covers/iotopjdb2-sdb1-8-io.jpg","content":"<h1 id=\"iotop发现jdb2-x2F-sdb1-8-io使用过高解决办法\"><a href=\"#iotop发现jdb2-x2F-sdb1-8-io使用过高解决办法\" class=\"headerlink\" title=\"iotop发现jdb2&#x2F;sdb1-8 io使用过高解决办法\"></a>iotop发现jdb2&#x2F;sdb1-8 io使用过高解决办法</h1><h5 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h5><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\[root@push-5\\-221 ~\\]<span class=\"comment\"># iotop</span></span><br><span class=\"line\">otal DISK READ: 0.00 B/s | Total DISK WRITE: 6.26 M/s</span><br><span class=\"line\">  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO\\&gt; COMMAND 795 be/3 root        0.00 B/s    0.00 B/s  0.00 % 95.80 % \\[jbd2/dm-0\\-8\\] 22952 be/4 rabbitmq    0.00 B/s    4.04 M/s  0.00 % 50.10 % beam.smp -W w -A 128 -P 10~inet\\_dist\\_listen\\_max 25672</span><br><span class=\"line\"> 8597 be/4 mysql       0.00 B/s   90.05 K/s  0.00 % 16.08 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 22960 be/4 rabbitmq    0.00 B/s   52.53 K/s  0.00 % 13.40 % beam.smp -W w -A 128 -P 10~inet\\_dist\\_listen\\_max 25672</span><br><span class=\"line\">22955 be/4 rabbitmq    0.00 B/s  105.06 K/s  0.00 % 11.76 % beam.smp -W w -A 128 -P 10~inet\\_dist\\_listen\\_max 25672</span><br><span class=\"line\">22948 be/4 rabbitmq    0.00 B/s   41.27 K/s  0.00 % 10.10 % beam.smp -W w -A 128 -P 10~inet\\_dist\\_listen\\_max 25672</span><br><span class=\"line\">22947 be/4 rabbitmq    0.00 B/s   48.78 K/s  0.00 %  7.44 % beam.smp -W w -A 128 -P 10~inet\\_dist\\_listen\\_max 25672</span><br><span class=\"line\">22921 be/4 rabbitmq    0.00 B/s   48.78 K/s  0.00 %  6.55 % beam.smp -W w -A 128 -P 10~inet\\_dist\\_listen\\_max 25672</span><br><span class=\"line\">22946 be/4 rabbitmq    0.00 B/s   45.03 K/s  0.00 %  6.30 % beam.smp -W w -A 128 -P 10~inet\\_dist\\_listen\\_max 25672</span><br><span class=\"line\">23039 be/4 rabbitmq    0.00 B/s   26.27 K/s  0.00 %  6.07 % beam.smp -W w -A 128 -P 10~inet\\_dist\\_listen\\_max 25672</span><br><span class=\"line\">23002 be/4 rabbitmq    0.00 B/s   45.03 K/s  0.00 %  6.02 % beam.smp -W w -A 128 -P 10~inet\\_dist\\_listen\\_max 25672</span><br><span class=\"line\">22964 be/4 rabbitmq    0.00 B/s   48.78 K/s  0.00 %  4.67 % beam.smp -W w -A 128 -P 10~inet\\_dist\\_listen\\_max 25672</span><br><span class=\"line\">11655 be/4 mysql       0.00 B/s    0.00 B/s  0.00 %  2.77 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 30533 be/4 mysql       0.00 B/s    7.50 K/s  0.00 %  2.72 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 4458 be/4 mysql       0.00 B/s    3.75 K/s  0.00 %  1.87 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 6629 be/4 mysql       0.00 B/s    3.75 K/s  0.00 %  1.66 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 6116 be/4 mysql       0.00 B/s    3.75 K/s  0.00 %  1.62 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 19645 be/4 mysql       0.00 B/s    3.75 K/s  0.00 %  1.44 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 25633 be/4 mysql       0.00 B/s    3.75 K/s  0.00 %  1.22 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 8603 be/4 mysql       0.00 B/s    7.50 K/s  0.00 %  0.89 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 11659 be/4 mysql       0.00 B/s  180.11 K/s  0.00 %  0.43 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 22803 be/4 mysql       0.00 B/s   11.26 K/s  0.00 %  0.36 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 4470 be/4 mysql       0.00 B/s    3.75 K/s  0.00 %  0.03 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock 8601 be/4 mysql       0.00 B/s    3.75 K/s  0.00 %  0.02 % mysqld --basedir=/usr --da~=/var/lib/mysql/mysql.sock</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>发现[jbd2&#x2F;dm-0-8]这个进程占用 IO95%。</p>\n<h6 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h6><p>进入 mysql ，查看 sync_binlog 变量设置</p>\n<figure class=\"highlight smali\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">\\[root@hlsms-fensheng-4 ~\\]<span class=\"comment\"># mysql -uroot -p</span></span><br><span class=\"line\">Enter password: </span><br><span class=\"line\">Welcome to the MySQ<span class=\"class\">L monitor.  Commands end with ;</span><span class=\"built_in\"> or </span>\\\\g.</span><br><span class=\"line\">Your MySQL connection id is 2118462 Server version: 5.7.22 MySQL Community Server (GPL)</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2018, Oracle<span class=\"built_in\"> and/or </span>its affiliates. All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">Oracle is a registered trademark of Oracle Corporation<span class=\"built_in\"> and/or </span>its</span><br><span class=\"line\">affiliates. Other names may be trademarks of their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\">Type &#x27;help;&#x27;<span class=\"built_in\"> or </span>&#x27;\\\\h&#x27; for help. Type &#x27;\\\\c&#x27; to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql\\&gt; show variables like &#x27;%sync\\_binlog%&#x27;; +---------------+-------+</span><br><span class=\"line\">| Variable\\_name | Value |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| sync\\_binlog   | 1     |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql\\&gt; </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>当前值为 1，表示每次提交事务后，将 binlog_cache 中的数据强制写入磁盘。当设置为 “1” 的时候，是最安全但是性能损耗最大的设置。因为当设置为 1 的时候，即使系统 Crash，也最多丢失 binlog_cache 中未完成的一个事务</p>\n<p>当设置为 0 时，表示当事务提交之后，MySQL 不做 fsync 之类的磁盘同步指令刷新 binlog_cache 中的信息到磁盘，而让 Filesystem 自行决定什么时候来做同步，或者 cache 满了之后才同步到磁盘。</p>\n<p>在 MySQL 中系统默认的设置是 sync_binlog&#x3D;0，也就是不做任何强制性的磁盘刷新指令，这时候的性能是最好的，但是风险也是最大的。因为一旦系统 Crash，在 binlog_cache 中的所有 binlog 信息都会被丢失。</p>\n<p>sync_binlog&#x3D;n，当每进行 n 次事务提交之后，MySQL 将进行一次 fsync 之类的磁盘同步指令来将 binlog_cache 中的数据强制写入磁盘。</p>\n<p>所以 sync_binlog&#x3D;1，导致事务写入太频繁，从而出现[jbd2&#x2F;dm-0-8]这个进程占用 IO95%。</p>\n<p>因此将 sync_log 设置为 500</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; set global sync\\_binlog=500;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql\\&gt; show variables like <span class=\"emphasis\">&#x27;%sync\\_binlog%&#x27;</span>; <span class=\"code\">+---------------+</span>-------+</span><br><span class=\"line\"><span class=\"section\">| Variable\\_name | Value |</span></span><br><span class=\"line\"><span class=\"section\">+---------------+-------+</span></span><br><span class=\"line\"><span class=\"section\">| sync\\_binlog   | 500   |</span></span><br><span class=\"line\"><span class=\"section\">+---------------+-------+</span></span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql\\&gt; </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"设置innodb-flush-log-at-trx-commit-变量\"><a href=\"#设置innodb-flush-log-at-trx-commit-变量\" class=\"headerlink\" title=\"设置innodb_flush_log_at_trx_commit 变量\"></a>设置<strong>innodb_flush_log_at_trx_commit 变量</strong></h5><p>innodb_flush_log_at_trx_commit 是配置 MySql 日志何时写入硬盘的参数：</p>\n<p>0：log buffer 将每秒一次地写入 log file 中，并且 log file 的 flush(刷到磁盘) 操作同时进行。该模式下在事务提交的时候，不会主动触发写入磁盘的操作。</p>\n<p>1：每次事务提交时<a href=\"http://lib.csdn.net/base/mysql\" title=\"MySQL 知识库\">MySQL</a>都会把 log buffer 的数据写入 log file，并且 flush(刷到磁盘) 中去，该模式为系统默认。</p>\n<p>2：每次事务提交时<a href=\"http://lib.csdn.net/base/mysql\" title=\"MySQL 知识库\">mysql</a>都会把 log buffer 的数据写入 log file，但是 flush(刷到磁盘) 操作并不会同时进行。该模式下，MySQL 会每秒执行一次 flush(刷到磁盘) 操作\\</p>\n<p>一般设置为 2</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show variables like <span class=\"emphasis\">&#x27;%innodb\\_flush\\_log\\_at\\_trx\\_commit%&#x27;</span>; <span class=\"code\">+--------------------------------+</span>-------+</span><br><span class=\"line\"><span class=\"section\">| Variable\\_name                  | Value |</span></span><br><span class=\"line\"><span class=\"section\">+--------------------------------+-------+</span></span><br><span class=\"line\"><span class=\"section\">| innodb\\_flush\\_log\\_at\\_trx\\_commit | 1     |</span></span><br><span class=\"line\"><span class=\"section\">+--------------------------------+-------+</span></span><br><span class=\"line\">1 row in set (0.01 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql\\&gt; set global innodb\\_flush\\_log\\_at\\_trx\\_commit=2;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql\\&gt; show variables like <span class=\"emphasis\">&#x27;%innodb\\_flush\\_log\\_at\\_trx\\_commit%&#x27;</span>; <span class=\"code\">+--------------------------------+</span>-------+</span><br><span class=\"line\"><span class=\"section\">| Variable\\_name                  | Value |</span></span><br><span class=\"line\"><span class=\"section\">+--------------------------------+-------+</span></span><br><span class=\"line\"><span class=\"section\">| innodb\\_flush\\_log\\_at\\_trx\\_commit | 2     |</span></span><br><span class=\"line\"><span class=\"section\">+--------------------------------+-------+</span></span><br><span class=\"line\">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h4><p>再次查看 iotop</p>\n<pre><code>Total DISK READ: 0.00 B/s | Total DISK WRITE: 781.51 K/s \n  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO\\&gt; COMMAND 1458 be/3 root        0.00 B/s    0.00 B/s  0.00 %  6.97 % \\[jbd2/dm-2\\-8\\] 26496 be/4 mysql       0.00 B/s   14.47 K/s  0.00 %  4.02 % mysqld --basedir=/usr --datadir=~ocket=/home/data/mysql/mysql.sock 26500 be/4 mysql       0.00 B/s  665.73 K/s  0.00 %  2.42 % mysqld --basedir=/usr --datadir=~ocket=/home/data/mysql/mysql.sock 26498 be/4 mysql       0.00 B/s    0.00 B/s  0.00 %  1.52 % mysqld --basedir=/usr --datadir=~ocket=/home/data/mysql/mysql.sock 26505 be/4 mysql       0.00 B/s    0.00 B/s  0.00 %  0.17 % mysqld --basedir=/usr --datadir=~ocket=/home/data/mysql/mysql.sock 26499 be/4 mysql       0.00 B/s    0.00 B/s  0.00 %  0.00 % mysqld --basedir=/usr --datadir=~ocket=/home/data/mysql/mysql.sock 14668 be/4 mysql       0.00 B/s   21.71 K/s  0.00 %  0.00 % mysqld --basedir=/usr --datadir=~ocket=/home/data/mysql/mysql.sock 16970 be/4 mysql       0.00 B/s   18.09 K/s  0.00 %  0.00 % mysqld --basedir=/usr --datadir=~ocket=/home/data/mysql/mysql.sock\n</code></pre>\n<p>[jbd2&#x2F;dm-2-8]明显降低</p>\n","text":"iotop发现jdb2/sdb1-8 io使用过高解决办法现象1234567891011121314\\[root@push-5\\-221 ~\\]# iotopo...","permalink":"/post/LINUX/iotop发现jdb2 sdb1-8 io使用过高解决办法","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"binlog","slug":"binlog","count":1,"path":"api/categories/binlog.json"},{"name":"LINUX","slug":"binlog/LINUX","count":1,"path":"api/categories/binlog/LINUX.json"}],"tags":[{"name":"cache","slug":"cache","count":2,"path":"api/tags/cache.json"},{"name":"log","slug":"log","count":4,"path":"api/tags/log.json"},{"name":"MySQL","slug":"MySQL","count":2,"path":"api/tags/MySQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#iotop%E5%8F%91%E7%8E%B0jdb2-x2F-sdb1-8-io%E4%BD%BF%E7%94%A8%E8%BF%87%E9%AB%98%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95\"><span class=\"toc-text\">iotop发现jdb2&#x2F;sdb1-8 io使用过高解决办法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%8E%B0%E8%B1%A1\"><span class=\"toc-text\">现象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3\"><span class=\"toc-text\">解决</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AEinnodb-flush-log-at-trx-commit-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">设置innodb_flush_log_at_trx_commit 变量</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">验证</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"订单拆分的算法工具","uid":"d4735e073a9024218ffc41d269e2b60f","slug":"JAVA/订单拆分的算法工具","date":"2022-08-05T09:20:57.000Z","updated":"2025-09-30T03:26:29.577Z","comments":true,"path":"api/articles/JAVA/订单拆分的算法工具.json","keywords":"XuGuangSheng","cover":"/covers/29c90dd60332.jpg","text":"订单拆分的算法工具本篇文章带你打造一个自适应场景的交易订单合单拆分通用算法方案，根据现有技术的痛点，我们支付的时候设计一种自适应场景的交易下单合单拆分通用算法的...","permalink":"/post/JAVA/订单拆分的算法工具","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"https","slug":"https","count":12,"path":"api/categories/https.json"},{"name":"JAVA","slug":"https/JAVA","count":5,"path":"api/categories/https/JAVA.json"}],"tags":[{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"raw","slug":"raw","count":5,"path":"api/tags/raw.json"},{"name":"githubusercontent","slug":"githubusercontent","count":3,"path":"api/tags/githubusercontent.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Logstash性能调优","uid":"f4f318f964064d6dbbbf9f460a2ebe37","slug":"MIDDLEWARE/Logstash性能调优","date":"2022-08-03T15:53:32.000Z","updated":"2025-09-30T03:26:48.474Z","comments":true,"path":"api/articles/MIDDLEWARE/Logstash性能调优.json","keywords":"XuGuangSheng","cover":"/covers/logstash.jpg","text":"Logstash性能调优详细调优参考 Inputs 和 Outputs 的性能当输入输出源的性能已经达到上限，那么性能瓶颈不在 Logstash，应优先对输入输...","permalink":"/post/MIDDLEWARE/Logstash性能调优","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"Inputs","slug":"Inputs","count":1,"path":"api/categories/Inputs.json"},{"name":"MIDDLEWARE","slug":"Inputs/MIDDLEWARE","count":1,"path":"api/categories/Inputs/MIDDLEWARE.json"}],"tags":[{"name":"Outputs","slug":"Outputs","count":1,"path":"api/tags/Outputs.json"},{"name":"的性能","slug":"的性能","count":1,"path":"api/tags/的性能.json"},{"name":"系统性能指标","slug":"系统性能指标","count":1,"path":"api/tags/系统性能指标.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}