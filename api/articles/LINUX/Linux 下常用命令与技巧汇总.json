{"title":"Linux 下常用命令与技巧汇总","uid":"dbdd74b0108262782d34164391ad385e","slug":"LINUX/Linux 下常用命令与技巧汇总","date":"2025-08-05T17:32:52.000Z","updated":"2025-09-30T03:26:33.132Z","comments":true,"path":"api/articles/LINUX/Linux 下常用命令与技巧汇总.json","keywords":"XuGuangSheng","cover":"/covers/linux.jpg","content":"<h1 id=\"Linux-下常用命令与技巧汇总\"><a href=\"#Linux-下常用命令与技巧汇总\" class=\"headerlink\" title=\"Linux 下常用命令与技巧汇总\"></a>Linux 下常用命令与技巧汇总</h1><p>收集自己常用到的linux命令与技巧,方便后续查找.不定期更新.</p>\n<h2 id=\"1-查询系统准确的启动时间-​\"><a href=\"#1-查询系统准确的启动时间-​\" class=\"headerlink\" title=\"1. 查询系统准确的启动时间 ​\"></a>1. 查询系统准确的启动时间 <a href=\"#_1-%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F%E5%87%86%E7%A1%AE%E7%9A%84%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4\">​</a></h2><p>bash</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">date -d <span class=\"string\">&quot;$(awk -F. &#x27;&#123;print $1&#125;&#x27; /proc/uptime) second ago&quot;</span> +<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span></span><br><span class=\"line\"><span class=\"number\">2018</span>-<span class=\"number\">01</span>-<span class=\"number\">17</span> <span class=\"number\">22</span>:<span class=\"number\">27</span>:<span class=\"number\">55</span></span><br></pre></td></tr></table></figure>\n\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">who</span> -b</span><br><span class=\"line\"> <span class=\"attribute\">system</span> boot <span class=\"number\">2018</span>-<span class=\"number\">01</span>-<span class=\"number\">17</span> <span class=\"number\">22</span>:<span class=\"number\">27</span></span><br></pre></td></tr></table></figure>\n\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">uptime</span> -s</span><br><span class=\"line\"><span class=\"attribute\">2019</span>-<span class=\"number\">09</span>-<span class=\"number\">04</span> <span class=\"number\">00</span>:<span class=\"number\">40</span>:<span class=\"number\">58</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-查询所有进程的准确启动时间和运行时长-​\"><a href=\"#2-查询所有进程的准确启动时间和运行时长-​\" class=\"headerlink\" title=\"2. 查询所有进程的准确启动时间和运行时长 ​\"></a>2. 查询所有进程的准确启动时间和运行时长 <a href=\"#_2-%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%87%86%E7%A1%AE%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4%E5%92%8C%E8%BF%90%E8%A1%8C%E6%97%B6%E9%95%BF\">​</a></h2><p>-e 表示查询所有进程<br>-o 表示按指定的格式输出<br>lstart 为进程启动时间<br>etime可以显示已经运行了多长时间<br>args 为具体的命令行参数</p>\n<p>bash</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ps</span> -<span class=\"keyword\">e</span> -<span class=\"keyword\">o</span> pid,lstart,etime,<span class=\"keyword\">args</span></span><br></pre></td></tr></table></figure>\n\n<p><code>ps -efL</code> 加 <code>-L</code> 则显示线程</p>\n<p>TOP5 线程最多的进程列表</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -eL -o pid,ppid,state,<span class=\"built_in\">command</span> | <span class=\"built_in\">sort</span> | <span class=\"built_in\">uniq</span> -c | <span class=\"built_in\">sort</span> -n -k1 | <span class=\"built_in\">tail</span> -5</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-设置时间-​\"><a href=\"#3-设置时间-​\" class=\"headerlink\" title=\"3. 设置时间 ​\"></a>3. 设置时间 <a href=\"#_3-%E8%AE%BE%E7%BD%AE%E6%97%B6%E9%97%B4\">​</a></h2><p>bash</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">date</span> -s <span class=\"string\">&quot;dd/mm/yyyy hh:mm:ss&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>也可以在centos7下使用</p>\n<p>bash</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">timedatectl</span> <span class=\"built_in\">set-time</span> <span class=\"string\">&quot;2012-10-30 18:17:16&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-同步OS与硬件时间-​\"><a href=\"#4-同步OS与硬件时间-​\" class=\"headerlink\" title=\"4. 同步OS与硬件时间 ​\"></a>4. 同步OS与硬件时间 <a href=\"#_4-%E5%90%8C%E6%AD%A5os%E4%B8%8E%E7%A1%AC%E4%BB%B6%E6%97%B6%E9%97%B4\">​</a></h2><p>将OS系统时间同步到硬件(RTC)</p>\n<p>将硬件时间同步到OS</p>\n<h2 id=\"5-查看硬件信息-​\"><a href=\"#5-查看硬件信息-​\" class=\"headerlink\" title=\"5. 查看硬件信息 ​\"></a>5. 查看硬件信息 <a href=\"#_5-%E6%9F%A5%E7%9C%8B%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF\">​</a></h2><p>bash</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">lscpu</span> <span class=\"comment\">#查看CPU信息</span></span><br><span class=\"line\">lspci <span class=\"comment\">#查看PCI信息</span></span><br><span class=\"line\">lsusb <span class=\"comment\">#查看外设USB</span></span><br><span class=\"line\">lsscsi <span class=\"comment\">#查看SCSI设备</span></span><br><span class=\"line\">lsblk <span class=\"comment\">#查看块设备</span></span><br><span class=\"line\">dmidecode -t memory <span class=\"comment\">#查内存槽位信息. 不跟 -t , 查全量processor, Memory, BIOS</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-锁定文件-不被任何程序修改-​\"><a href=\"#6-锁定文件-不被任何程序修改-​\" class=\"headerlink\" title=\"6 锁定文件,不被任何程序修改 ​\"></a>6 锁定文件,不被任何程序修改 <a href=\"#_6-%E9%94%81%E5%AE%9A%E6%96%87%E4%BB%B6-%E4%B8%8D%E8%A2%AB%E4%BB%BB%E4%BD%95%E7%A8%8B%E5%BA%8F%E4%BF%AE%E6%94%B9\">​</a></h2><p>chattr 可以改变文件扩展属性, <code>chattr +i</code> 可以防止任何程序修改该文件. 即使有root权限.<br>常用于锁定dns配置,防止dhcp程序自动修改. <code>lsattr</code> 查看当前的扩展属性. <code>man chattr</code> 查看所有参数含义.</p>\n<p>bash</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chattr +i <span class=\"regexp\">/etc/</span>resolv.conf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-stat-查看文件详细元数据信息-特别是inode-​\"><a href=\"#7-stat-查看文件详细元数据信息-特别是inode-​\" class=\"headerlink\" title=\"7. stat 查看文件详细元数据信息, 特别是inode ​\"></a>7. stat 查看文件详细元数据信息, 特别是inode <a href=\"#_7-stat-%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E8%AF%A6%E7%BB%86%E5%85%83%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF-%E7%89%B9%E5%88%AB%E6%98%AFinode\">​</a></h2><p>bash</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">stat</span> <span class=\"string\">messages</span></span><br><span class=\"line\"> <span class=\"attr\">File:</span> <span class=\"string\">‘messages’</span></span><br><span class=\"line\"> <span class=\"attr\">Size: 0 Blocks: 0 IO Block:</span> <span class=\"number\">4096 </span><span class=\"string\">regular</span> <span class=\"string\">empty</span> <span class=\"string\">file</span></span><br><span class=\"line\"><span class=\"attr\">Device: fd01h/64769d Inode: 528438 Links:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">Access:</span> <span class=\"string\">(0600/-rw-------)</span>  <span class=\"attr\">Uid:</span> <span class=\"string\">(</span> <span class=\"number\">0</span><span class=\"string\">/</span> <span class=\"string\">root)</span>   <span class=\"attr\">Gid:</span> <span class=\"string\">(</span> <span class=\"number\">0</span><span class=\"string\">/</span> <span class=\"string\">root)</span></span><br><span class=\"line\"><span class=\"attr\">Context:</span> <span class=\"string\">system_u:object_r:var_log_t:s0</span></span><br><span class=\"line\"><span class=\"attr\">Access:</span> <span class=\"number\">2018-01-14 21:32:01.977218590</span> <span class=\"string\">+0800</span></span><br><span class=\"line\"><span class=\"attr\">Modify:</span> <span class=\"number\">2018-01-14 21:32:01.977218590</span> <span class=\"string\">+0800</span></span><br><span class=\"line\"><span class=\"attr\">Change:</span> <span class=\"number\">2018-01-14 21:32:01.977218590</span> <span class=\"string\">+0800</span></span><br><span class=\"line\"> <span class=\"attr\">Birth:</span> <span class=\"bullet\">-</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-xxd查看二进制文件-​\"><a href=\"#8-xxd查看二进制文件-​\" class=\"headerlink\" title=\"8. xxd查看二进制文件 ​\"></a>8. xxd查看二进制文件 <a href=\"#_8-xxd%E6%9F%A5%E7%9C%8B%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6\">​</a></h2><p>-s 指定起始位置(不指定则从0开始), -l 指定打印多少个字节</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">xxd</span> -s <span class=\"number\">1</span> -l <span class=\"number\">5</span> /etc/hosts</span><br></pre></td></tr></table></figure>\n\n<p>当将js,或其他文本类信息嵌入到C程序时, <code>xxd -i</code> 非常实用.</p>\n<p>bash</p>\n<figure class=\"highlight x86asm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ xxd a<span class=\"number\">.</span><span class=\"keyword\">js</span></span><br><span class=\"line\"><span class=\"number\">0000000</span>: <span class=\"number\">7661</span> <span class=\"number\">7220</span> <span class=\"number\">6120</span> 3d20 310a var a = <span class=\"number\">1</span>.</span><br><span class=\"line\">$ xxd -i a<span class=\"number\">.</span><span class=\"keyword\">js</span></span><br><span class=\"line\">unsigned char a_js[] = &#123;</span><br><span class=\"line\"> <span class=\"number\">0x76</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0x3d</span>, <span class=\"number\">0x20</span>, <span class=\"number\">0x31</span>, <span class=\"number\">0x0a</span></span><br><span class=\"line\">&#125;<span class=\"comment\">;</span></span><br><span class=\"line\">unsigned <span class=\"keyword\">int</span> a_js_len = <span class=\"number\">10</span><span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9-批量修改文件名-​\"><a href=\"#9-批量修改文件名-​\" class=\"headerlink\" title=\"9. 批量修改文件名 ​\"></a>9. 批量修改文件名 <a href=\"#_9-%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D\">​</a></h2><p>用法:<code>rename 原字符串 目标字符串 文件</code><br>含义:<br>原字符串：将文件名需要替换的字符串；<br>目标字符串：将文件名中含有的原字符替换成目标字符串；<br>文件：指定要改变文件名的文件列</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">rename</span>支持通配符</span><br><span class=\"line\">?    可替代单个字符</span><br><span class=\"line\"><span class=\"comment\">*    可替代多个字符</span></span><br><span class=\"line\">[charset]    可替代charset集中的任意单个字符</span><br></pre></td></tr></table></figure>\n\n<p>将所有已<code>yum</code>开头的文件的后缀名从<code>.yumtx</code>改为<code>.txt</code></p>\n<p>bash</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rename <span class=\"string\">.yumtx</span> <span class=\"string\">.txt</span> yum*</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-df-查询文件系统挂载点信息-​\"><a href=\"#10-df-查询文件系统挂载点信息-​\" class=\"headerlink\" title=\"10. df 查询文件系统挂载点信息 ​\"></a>10. df 查询文件系统挂载点信息 <a href=\"#_10-df-%E6%9F%A5%E8%AF%A2%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%8C%82%E8%BD%BD%E7%82%B9%E4%BF%A1%E6%81%AF\">​</a></h2><p><code>-h</code> 使容量的大小显示更人性化 <code>-T</code> 显示文件系统类型</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">df</span> -hT</span><br><span class=\"line\">Filesystem Type Size Used Avail Use% Mounted on</span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root ext4 50G 8.0G 39G 18% /</span><br><span class=\"line\">devtmpfs devtmpfs 484M 0 484M 0% /dev</span><br><span class=\"line\">tmpfs tmpfs 495M 0 495M 0% /dev/shm</span><br><span class=\"line\">tmpfs tmpfs 495M 460K 494M 1% /run</span><br><span class=\"line\">tmpfs tmpfs 495M 0 495M 0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/sda1 ext4 477M 234M 215M 53% /boot</span><br><span class=\"line\">/dev/mapper/VolGroup-lv_home ext4 12G 41M 11G 1% /home</span><br><span class=\"line\">tmpfs tmpfs 99M 0 99M 0% /run/user/0</span><br></pre></td></tr></table></figure>\n\n<p><code>-i</code> 显示inode容量</p>\n<p>bash</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$</span> <span class=\"variable\">df</span> <span class=\"operator\">-</span><span class=\"variable\">hi</span></span><br><span class=\"line\"><span class=\"variable\">Filesystem</span> <span class=\"variable\">Inodes</span> <span class=\"variable\">IUsed</span> <span class=\"variable\">IFree</span> <span class=\"variable\">IUse</span><span class=\"operator\">%</span> <span class=\"variable\">Mounted</span> <span class=\"variable\">on</span></span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"variable\">dev</span><span class=\"operator\">/</span><span class=\"variable\">mapper</span><span class=\"operator\">/</span><span class=\"variable\">VolGroup</span><span class=\"operator\">-</span><span class=\"type\">lv_root</span> <span class=\"number\">3.2</span><span class=\"variable\">M</span> <span class=\"number\">170</span><span class=\"built_in\">K</span> <span class=\"number\">3.0</span><span class=\"variable\">M</span> <span class=\"number\">6</span><span class=\"operator\">%</span> <span class=\"operator\">/</span></span><br><span class=\"line\"><span class=\"variable\">devtmpfs</span> <span class=\"number\">121</span><span class=\"built_in\">K</span> <span class=\"number\">389</span> <span class=\"number\">121</span><span class=\"built_in\">K</span> <span class=\"number\">1</span><span class=\"operator\">%</span> <span class=\"operator\">/</span><span class=\"variable\">dev</span></span><br><span class=\"line\"><span class=\"variable\">tmpfs</span> <span class=\"number\">124</span><span class=\"built_in\">K</span> <span class=\"number\">1</span> <span class=\"number\">124</span><span class=\"built_in\">K</span> <span class=\"number\">1</span><span class=\"operator\">%</span> <span class=\"operator\">/</span><span class=\"variable\">dev</span><span class=\"operator\">/</span><span class=\"variable\">shm</span></span><br><span class=\"line\"><span class=\"variable\">tmpfs</span> <span class=\"number\">124</span><span class=\"built_in\">K</span> <span class=\"number\">498</span> <span class=\"number\">124</span><span class=\"built_in\">K</span> <span class=\"number\">1</span><span class=\"operator\">%</span> <span class=\"operator\">/</span><span class=\"variable\">run</span></span><br><span class=\"line\"><span class=\"variable\">tmpfs</span> <span class=\"number\">124</span><span class=\"built_in\">K</span> <span class=\"number\">16</span> <span class=\"number\">124</span><span class=\"built_in\">K</span> <span class=\"number\">1</span><span class=\"operator\">%</span> <span class=\"operator\">/</span><span class=\"variable\">sys</span><span class=\"operator\">/</span><span class=\"variable\">fs</span><span class=\"operator\">/</span><span class=\"variable\">cgroup</span></span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"variable\">dev</span><span class=\"operator\">/</span><span class=\"variable\">sda1</span> <span class=\"number\">126</span><span class=\"built_in\">K</span> <span class=\"number\">358</span> <span class=\"number\">125</span><span class=\"built_in\">K</span> <span class=\"number\">1</span><span class=\"operator\">%</span> <span class=\"operator\">/</span><span class=\"variable\">boot</span></span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"variable\">dev</span><span class=\"operator\">/</span><span class=\"variable\">mapper</span><span class=\"operator\">/</span><span class=\"variable\">VolGroup</span><span class=\"operator\">-</span><span class=\"type\">lv_home</span> <span class=\"number\">740</span><span class=\"built_in\">K</span> <span class=\"number\">31</span> <span class=\"number\">740</span><span class=\"built_in\">K</span> <span class=\"number\">1</span><span class=\"operator\">%</span> <span class=\"operator\">/</span><span class=\"variable\">home</span></span><br><span class=\"line\"><span class=\"variable\">tmpfs</span> <span class=\"number\">124</span><span class=\"built_in\">K</span> <span class=\"number\">1</span> <span class=\"number\">124</span><span class=\"built_in\">K</span> <span class=\"number\">1</span><span class=\"operator\">%</span> <span class=\"operator\">/</span><span class=\"variable\">run</span><span class=\"operator\">/</span><span class=\"variable\">user</span><span class=\"operator\">/</span><span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"11-du-命令-​\"><a href=\"#11-du-命令-​\" class=\"headerlink\" title=\"11. du 命令 ​\"></a>11. du 命令 <a href=\"#_11-du-%E5%91%BD%E4%BB%A4\">​</a></h2><p>单位是KB 如下获取&#x2F;tmp下所有文件的大小, 并按降序排列</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">du</span> -xs /tmp/* | <span class=\"built_in\">sort</span> -rn -k1</span><br><span class=\"line\">8 systemd-private-415928f8a9ee431abb4fdb7f6265aa87-chronyd.service-uw9sq7</span><br><span class=\"line\">4 <span class=\"built_in\">test</span></span><br><span class=\"line\">4 empty</span><br><span class=\"line\">4 a.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-find删除查找到的文件-​\"><a href=\"#12-find删除查找到的文件-​\" class=\"headerlink\" title=\"12. find删除查找到的文件 ​\"></a>12. find删除查找到的文件 <a href=\"#_12-find%E5%88%A0%E9%99%A4%E6%9F%A5%E6%89%BE%E5%88%B0%E7%9A%84%E6%96%87%E4%BB%B6\">​</a></h2><p>find命令经常会用到, <code>-type f</code>表示只返回文件, <code>-exec</code> 可将已找到的结果作为标准输入执行其他命令.</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find &lt;PATH&gt; -<span class=\"built_in\">type</span> f -<span class=\"built_in\">exec</span> <span class=\"built_in\">rm</span> &#123;&#125; \\; <span class=\"comment\"># 逐个删除查找到的文件, 将 path 改为实际要查找的目录</span></span><br><span class=\"line\">find &lt;PATH&gt; -<span class=\"built_in\">type</span> f -<span class=\"built_in\">exec</span> <span class=\"built_in\">rm</span> &#123;&#125; + <span class=\"comment\"># 一次性删除查找到的文件</span></span><br></pre></td></tr></table></figure>\n\n<p>bash</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span> [PATH] [option] [action] </span><br><span class=\"line\">-mtime <span class=\"built_in\">n</span> <span class=\"symbol\">:</span> <span class=\"built_in\">n</span>为数字，意思为在<span class=\"built_in\">n</span>天之前的“一天内”被更改过的文件； </span><br><span class=\"line\">-mtime +<span class=\"built_in\">n</span> <span class=\"symbol\">:</span> 列出在<span class=\"built_in\">n</span>天之前（不含<span class=\"built_in\">n</span>天本身）被更改过的文件名； </span><br><span class=\"line\">-mtime -<span class=\"built_in\">n</span> <span class=\"symbol\">:</span> 列出在<span class=\"built_in\">n</span>天之内（含<span class=\"built_in\">n</span>天本身）被更改过的文件名； </span><br><span class=\"line\">-newer file <span class=\"symbol\">:</span> 列出比file还要新的文件名 </span><br><span class=\"line\">例如： </span><br><span class=\"line\"><span class=\"built_in\">find</span> /root -mtime <span class=\"number\">0</span> # 在当前目录下查找今天之内有改动的文件 </span><br><span class=\"line\">  </span><br><span class=\"line\">与文件权限及名称有关的参数： </span><br><span class=\"line\">-name filename ：找出文件名为filename的文件 </span><br><span class=\"line\">-size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件 </span><br><span class=\"line\">-tpye <span class=\"built_in\">TYPE</span> ：查找文件的类型为<span class=\"built_in\">TYPE</span>的文件，<span class=\"built_in\">TYPE</span>的值主要有：一般文件（f)、设备文件（b、c）、 </span><br><span class=\"line\"> 目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）； </span><br><span class=\"line\">-perm <span class=\"built_in\">mode</span> ：查找文件权限刚好等于<span class=\"built_in\">mode</span>的文件，<span class=\"built_in\">mode</span>用数字表示，如<span class=\"number\">0755</span>； </span><br><span class=\"line\">-perm -<span class=\"built_in\">mode</span> ：查找文件权限必须要全部包括<span class=\"built_in\">mode</span>权限的文件，<span class=\"built_in\">mode</span>用数字表示 </span><br><span class=\"line\">-perm +<span class=\"built_in\">mode</span> ：查找文件权限包含任一<span class=\"built_in\">mode</span>的权限的文件，<span class=\"built_in\">mode</span>用数字表示 </span><br><span class=\"line\">例如： </span><br><span class=\"line\"><span class=\"built_in\">find</span> / -name passwd # 查找文件名为passwd的文件 </span><br><span class=\"line\"><span class=\"built_in\">find</span> . -perm <span class=\"number\">0755</span> # 查找当前目录中文件权限的<span class=\"number\">0755</span>的文件 </span><br><span class=\"line\"><span class=\"built_in\">find</span> . -size +<span class=\"number\">12</span>k # 查找当前目录中大于<span class=\"number\">12</span>KB的文件，注意c表示byte</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"13-xargs-命令-​\"><a href=\"#13-xargs-命令-​\" class=\"headerlink\" title=\"13. xargs 命令 ​\"></a>13. xargs 命令 <a href=\"#_13-xargs-%E5%91%BD%E4%BB%A4\">​</a></h2><p>该命令可以将一个命令的输出作为参数传递给另一个命令。<br>区别于管道符<code>|</code>是将将输出作为另一个命令的标准输入传递.</p>\n<p>bash</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /tmp -name *.png -<span class=\"keyword\">type</span> <span class=\"type\">f </span>| xargs tar -cvzf images.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>默认是将内容放到参数的最后面, 如果要放到指定位置,需要使用 <code>-i</code> 和 <code>&#123;&#125;</code><br>如下所示，将第一个命令的输出放到<code>&#123;&#125;</code>出现的位置</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> /etc/*.conf | xargs -i <span class=\"built_in\">cp</span> &#123;&#125; /home/likegeeks/Desktop/out</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"14-grep查询文本-​\"><a href=\"#14-grep查询文本-​\" class=\"headerlink\" title=\"14. grep查询文本 ​\"></a>14. grep查询文本 <a href=\"#_14-grep%E6%9F%A5%E8%AF%A2%E6%96%87%E6%9C%AC\">​</a></h2><p>在文件中查找字符串(不区分大小写)</p>\n<p>bash</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grep</span> -i <span class=\"string\">&quot;the&quot;</span> <span class=\"regexp\">/etc/</span>hosts</span><br></pre></td></tr></table></figure>\n\n<p>输出成功匹配的行，以及该行之后的三行. -B 表示前三行. -C 指前后三行</p>\n<p>bash</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grep</span> -A <span class=\"number\">3</span> <span class=\"string\">&quot;localhost&quot;</span> <span class=\"regexp\">/etc/</span>hosts</span><br></pre></td></tr></table></figure>\n\n<p>在一个文件夹中递归查询包含指定字符串的文件</p>\n<p>查找不包含 127 的所有行</p>\n<p>bash</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grep</span> -v <span class=\"string\">&quot;127&quot;</span> <span class=\"regexp\">/etc/</span>hosts</span><br></pre></td></tr></table></figure>\n\n<p>递归搜索时忽略二进制文件,加参数<code>-I</code></p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -r <span class=\"string\">&quot;abc&quot;</span> -I /etc</span><br></pre></td></tr></table></figure>\n\n<p>打印被搜索的文件名</p>\n<p>bash</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grep</span> -H <span class=\"string\">&quot;abc&quot;</span> <span class=\"regexp\">/etc/</span>fstab</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"15-tail-查看文件指定行信息-​\"><a href=\"#15-tail-查看文件指定行信息-​\" class=\"headerlink\" title=\"15. tail 查看文件指定行信息 ​\"></a>15. tail 查看文件指定行信息 <a href=\"#_15-tail-%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E6%8C%87%E5%AE%9A%E8%A1%8C%E4%BF%A1%E6%81%AF\">​</a></h2><p>显示最后3行记录</p>\n<p>bash</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tail -<span class=\"number\">3</span> /var/log/yum<span class=\"selector-class\">.log-20180101</span></span><br><span class=\"line\">Dec <span class=\"number\">10</span> <span class=\"number\">00</span>:<span class=\"number\">35</span>:<span class=\"number\">55</span> Installed: libvirt-debuginfo-<span class=\"number\">3.2</span>.<span class=\"number\">0</span>-<span class=\"number\">14</span><span class=\"selector-class\">.el7_4</span>.<span class=\"number\">3</span><span class=\"selector-class\">.x86_64</span></span><br><span class=\"line\">Dec <span class=\"number\">10</span> <span class=\"number\">18</span>:<span class=\"number\">52</span>:<span class=\"number\">40</span> Installed: cloud-init-<span class=\"number\">0.7</span>.<span class=\"number\">9</span>-<span class=\"number\">9</span><span class=\"selector-class\">.el7</span><span class=\"selector-class\">.centos</span>.<span class=\"number\">2</span><span class=\"selector-class\">.x86_64</span></span><br><span class=\"line\">Dec <span class=\"number\">10</span> <span class=\"number\">19</span>:<span class=\"number\">50</span>:<span class=\"number\">30</span> Erased: cloud-init-<span class=\"number\">0.7</span>.<span class=\"number\">9</span>-<span class=\"number\">9</span><span class=\"selector-class\">.el7</span><span class=\"selector-class\">.centos</span>.<span class=\"number\">2</span>.x86_64</span><br></pre></td></tr></table></figure>\n\n<p>从第770行开始显示</p>\n<p>bash</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tail -n +<span class=\"number\">770</span> /var/log/yum<span class=\"selector-class\">.log-20180101</span></span><br><span class=\"line\">Dec <span class=\"number\">10</span> <span class=\"number\">18</span>:<span class=\"number\">52</span>:<span class=\"number\">40</span> Installed: cloud-init-<span class=\"number\">0.7</span>.<span class=\"number\">9</span>-<span class=\"number\">9</span><span class=\"selector-class\">.el7</span><span class=\"selector-class\">.centos</span>.<span class=\"number\">2</span><span class=\"selector-class\">.x86_64</span></span><br><span class=\"line\">Dec <span class=\"number\">10</span> <span class=\"number\">19</span>:<span class=\"number\">50</span>:<span class=\"number\">30</span> Erased: cloud-init-<span class=\"number\">0.7</span>.<span class=\"number\">9</span>-<span class=\"number\">9</span><span class=\"selector-class\">.el7</span><span class=\"selector-class\">.centos</span>.<span class=\"number\">2</span>.x86_64</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"16-批量创建目录-​\"><a href=\"#16-批量创建目录-​\" class=\"headerlink\" title=\"16. 批量创建目录 ​\"></a>16. 批量创建目录 <a href=\"#_16-%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95\">​</a></h2><p>bash</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p <span class=\"keyword\">new</span><span class=\"type\">_folder</span>/&#123;folder_1,folder_2,folder_3,folder_4,folder_5&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"17-echo-相关命令-​\"><a href=\"#17-echo-相关命令-​\" class=\"headerlink\" title=\"17. echo 相关命令 ​\"></a>17. echo 相关命令 <a href=\"#_17-echo-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4\">​</a></h2><p>显示当前使用哪个shell</p>\n<p>显示最近一个命令执行的结果码</p>\n<h2 id=\"18-nohup与标准输出-标准错误输出-​\"><a href=\"#18-nohup与标准输出-标准错误输出-​\" class=\"headerlink\" title=\"18. nohup与标准输出,标准错误输出 ​\"></a>18. nohup与标准输出,标准错误输出 <a href=\"#_18-nohup%E4%B8%8E%E6%A0%87%E5%87%86%E8%BE%93%E5%87%BA-%E6%A0%87%E5%87%86%E9%94%99%E8%AF%AF%E8%BE%93%E5%87%BA\">​</a></h2><p><code>nohup</code>配和<code>&amp;</code>可以让进程在后台运行, 如果没有显示指定, 默认将标准输出和错误输出重定向到 nohup.out<br><code>1&gt;/dev/null</code> 首先表示标准输出重定向到空设备文件，也就是不输出任何信息到终端，不显示任何信息<br><code>2&gt;&amp;1</code> 表示标准错误输出重定向等同于标准输出，因为之前标准输出已经重定向到了空设备文件，所以标准错误输出也重定向到空设备文件<br>常用使用方式为:</p>\n<p>bash</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup COMMAND &gt;output.<span class=\"built_in\">log</span> <span class=\"number\">2</span>&gt;<span class=\"meta\">&amp;1 &amp;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"19-Linux模块的安装和卸载-​\"><a href=\"#19-Linux模块的安装和卸载-​\" class=\"headerlink\" title=\"19. Linux模块的安装和卸载 ​\"></a>19. Linux模块的安装和卸载 <a href=\"#_19-linux%E6%A8%A1%E5%9D%97%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%8D%B8%E8%BD%BD\">​</a></h2><p>bash</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">lsmod</span> <span class=\"comment\">#显示当前装入的内核模块</span></span><br><span class=\"line\"><span class=\"string\">modinfo</span> <span class=\"string\">module_name</span> <span class=\"comment\">#显示模块信息</span></span><br><span class=\"line\"><span class=\"string\">modprobe</span> -<span class=\"string\">c</span> <span class=\"comment\">#显示模块的配置信息 </span></span><br><span class=\"line\"><span class=\"string\">modprobe</span> <span class=\"built_in\">--show-depends</span> <span class=\"string\">module_name</span> <span class=\"comment\">#显示模块的依赖信息</span></span><br><span class=\"line\"><span class=\"string\">modprobe</span> <span class=\"string\">module_name</span> <span class=\"comment\">#手动加载模块</span></span><br><span class=\"line\"><span class=\"string\">rmmod</span> <span class=\"string\">module_name</span> <span class=\"comment\">#卸载模块</span></span><br></pre></td></tr></table></figure>\n\n<p>systemd 读取 &#x2F;etc&#x2F;modules-load.d&#x2F; 中的配置加载额外的内核模块。配置文件名称通常为 <code>/etc/modules-load.d/&lt;program&gt;.conf</code>。如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"built_in\">cat</span> /etc/modules-load.d/bonding.conf</span></span><br><span class=\"line\">bonding</span><br></pre></td></tr></table></figure>\n\n<p>使用 &#x2F;etc&#x2F;modprobe.d&#x2F;中的文件来配置传递参数，如:</p>\n<p>bash</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ /etc/modprobe.d/bonding.<span class=\"keyword\">conf</span></span><br><span class=\"line\"><span class=\"keyword\">options</span> bonding <span class=\"keyword\">mode</span>=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>别名</p>\n<p>bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"built_in\">cat</span> /etc/modprobe.d/myalias.conf</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Lets you use <span class=\"string\">&#x27;mymod&#x27;</span> <span class=\"keyword\">in</span> MODULES, instead of <span class=\"string\">&#x27;really_long_module_name&#x27;</span></span></span><br><span class=\"line\">alias mymod really_long_module_name</span><br></pre></td></tr></table></figure>\n\n<p>如果模块直接编译进内核，也可以通过启动管理器(GRUB, LILO 或 Syslinux)的内核行加入参数： <code>modname.parametername=parametercontents</code></p>\n<p>列出直接编译到内核的模块列表</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> /lib/modules/$(<span class=\"built_in\">uname</span> -r)/modules.builtin</span><br><span class=\"line\">kernel/lib/zlib_deflate/zlib_deflate.ko</span><br><span class=\"line\">kernel/lib/zlib_inflate/zlib_inflate.ko</span><br><span class=\"line\">kernel/lib/crc16.ko</span><br><span class=\"line\">kernel/lib/crc32.ko</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"20-column格式化输出-​\"><a href=\"#20-column格式化输出-​\" class=\"headerlink\" title=\"20. column格式化输出 ​\"></a>20. column格式化输出 <a href=\"#_20-column%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA\">​</a></h2><p>可以让一些命令的输出看起来更舒服些. 例如<code>blkid</code>,<code>mount</code>,<code>cat /etc/fstab</code>.</p>\n<p>bash</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ blkid</span><br><span class=\"line\">/dev/sda1: <span class=\"attribute\">UUID</span>=<span class=\"string\">&quot;04f8e14d-906d-475a-bacc-7d4be966f670&quot;</span> <span class=\"attribute\">TYPE</span>=<span class=\"string\">&quot;ext4&quot;</span></span><br><span class=\"line\">/dev/sda2: <span class=\"attribute\">UUID</span>=<span class=\"string\">&quot;8pXbJg-c7bG-CzS4-Xs9Y-SdBD-TYOJ-0r9hgF&quot;</span> <span class=\"attribute\">TYPE</span>=<span class=\"string\">&quot;LVM2_member&quot;</span></span><br><span class=\"line\">/dev/mapper/VolGroup-lv_swap: <span class=\"attribute\">UUID</span>=<span class=\"string\">&quot;c058935d-34e0-403c-82f6-435b1c8194ce&quot;</span> <span class=\"attribute\">TYPE</span>=<span class=\"string\">&quot;swap&quot;</span></span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root: <span class=\"attribute\">UUID</span>=<span class=\"string\">&quot;e9fe20ee-5d6f-4610-98ca-7cbed5d012ad&quot;</span> <span class=\"attribute\">TYPE</span>=<span class=\"string\">&quot;ext4&quot;</span></span><br><span class=\"line\">/dev/mapper/VolGroup-lv_home: <span class=\"attribute\">UUID</span>=<span class=\"string\">&quot;43578ba0-a809-4274-931d-b92f881196ad&quot;</span> <span class=\"attribute\">TYPE</span>=<span class=\"string\">&quot;ext4&quot;</span></span><br><span class=\"line\">$ blkid | column -t</span><br><span class=\"line\">/dev/sda1: <span class=\"attribute\">UUID</span>=<span class=\"string\">&quot;04f8e14d-906d-475a-bacc-7d4be966f670&quot;</span> <span class=\"attribute\">TYPE</span>=<span class=\"string\">&quot;ext4&quot;</span></span><br><span class=\"line\">/dev/sda2: <span class=\"attribute\">UUID</span>=<span class=\"string\">&quot;8pXbJg-c7bG-CzS4-Xs9Y-SdBD-TYOJ-0r9hgF&quot;</span> <span class=\"attribute\">TYPE</span>=<span class=\"string\">&quot;LVM2_member&quot;</span></span><br><span class=\"line\">/dev/mapper/VolGroup-lv_swap: <span class=\"attribute\">UUID</span>=<span class=\"string\">&quot;c058935d-34e0-403c-82f6-435b1c8194ce&quot;</span> <span class=\"attribute\">TYPE</span>=<span class=\"string\">&quot;swap&quot;</span></span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root: <span class=\"attribute\">UUID</span>=<span class=\"string\">&quot;e9fe20ee-5d6f-4610-98ca-7cbed5d012ad&quot;</span> <span class=\"attribute\">TYPE</span>=<span class=\"string\">&quot;ext4&quot;</span></span><br><span class=\"line\">/dev/mapper/VolGroup-lv_home: <span class=\"attribute\">UUID</span>=<span class=\"string\">&quot;43578ba0-a809-4274-931d-b92f881196ad&quot;</span> <span class=\"attribute\">TYPE</span>=<span class=\"string\">&quot;ext4&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>-s</code> 参数指定可以指定分隔符. 默认是空格</p>\n<p>bash</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"keyword\">grep</span> -E <span class=\"string\">&quot;sshd|qemu&quot;</span> <span class=\"regexp\">/etc/</span>passwd | column -t -s:</span><br><span class=\"line\">sshd x <span class=\"number\">74</span> <span class=\"number\">74</span> Privilege-separated SSH <span class=\"regexp\">/var/</span>empty<span class=\"regexp\">/sshd /</span>sbin/nologin</span><br><span class=\"line\">qemu x <span class=\"number\">107</span> <span class=\"number\">107</span> qemu user <span class=\"regexp\">/ /</span>sbin/nologin</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"21-通过pid查看进程的环境变量信息-​\"><a href=\"#21-通过pid查看进程的环境变量信息-​\" class=\"headerlink\" title=\"21. 通过pid查看进程的环境变量信息 ​\"></a>21. 通过pid查看进程的环境变量信息 <a href=\"#_21-%E9%80%9A%E8%BF%87pid%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%BF%A1%E6%81%AF\">​</a></h2><p>使用strings, 可以格式化打印</p>\n<p>bash</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ strings /proc/1158/environ</span><br><span class=\"line\"><span class=\"attribute\">LANG</span>=en_US.UTF-8</span><br><span class=\"line\"><span class=\"attribute\">PATH</span>=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin</span><br><span class=\"line\"><span class=\"attribute\">NOTIFY_SOCKET</span>=/run/systemd/notify</span><br><span class=\"line\"><span class=\"attribute\">SSH_USE_STRONG_RNG</span>=0</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"22-通过pid查看进程对应可执行文件的绝对路径-​\"><a href=\"#22-通过pid查看进程对应可执行文件的绝对路径-​\" class=\"headerlink\" title=\"22. 通过pid查看进程对应可执行文件的绝对路径 ​\"></a>22. 通过pid查看进程对应可执行文件的绝对路径 <a href=\"#_22-%E9%80%9A%E8%BF%87pid%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E5%AF%B9%E5%BA%94%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%9A%84%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84\">​</a></h2><p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">readlink</span> /proc/[pid]/exe</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"23-通过pid查看进程的当前工作目录-​\"><a href=\"#23-通过pid查看进程的当前工作目录-​\" class=\"headerlink\" title=\"23. 通过pid查看进程的当前工作目录 ​\"></a>23. 通过pid查看进程的当前工作目录 <a href=\"#_23-%E9%80%9A%E8%BF%87pid%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%BD%93%E5%89%8D%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95\">​</a></h2><h2 id=\"24-lsof-一切皆文件-​\"><a href=\"#24-lsof-一切皆文件-​\" class=\"headerlink\" title=\"24. lsof 一切皆文件 ​\"></a>24. lsof 一切皆文件 <a href=\"#_24-lsof-%E4%B8%80%E5%88%87%E7%9A%86%E6%96%87%E4%BB%B6\">​</a></h2><p><code>-p [PID]</code> 只显示该进程打开的所有文件. 不带参数显示所有已打开的文件<br><code>-d</code> 对<code>FD</code>有效, 用于筛选文件列表. <code>^txt</code> 显示除txt 其他所有类型的文件. <code>1</code> 显示所有fd为1的文件. 可以使用<code>,</code>逗号连接多个选择<br><code>-a</code> 表示两个参数都必须满足 (AND)。如果没有 -a 标志，缺省的情况是显示匹配任何一个参数 (OR) 的文件<br><code>-n</code> 阻止网络地址转换<br><code>-P</code> 阻止端口号到端口名的转换<br><code>-i protocol:@ip:port</code> protocol 包括 tcp 和 udp. 显示符合该地址的文件列表 <code>-u s</code> s为用户名或者用户ID, 选择该用户下的文件</p>\n<p><code>lsof [name]</code><br>name是 mount point或者文件系统对应的设备文件, 则显示在该文件系统上打开的所有文件列表<br>name是 文件夹(非mount point), 则显示所有将该文件夹作为正常文件打开的列表. 例如 cwd, rtd. 如果 <code>+d</code> 打印所有在该目录下已打开的文件,但不递归查找子目录. <code>+D</code> 则允许递归查找</p>\n<p>谁在使用 &#x2F;var&#x2F;log&#x2F;audit&#x2F;audit.log</p>\n<p>bash</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsof /var/<span class=\"keyword\">log</span>/audit/audit.<span class=\"keyword\">log</span></span><br><span class=\"line\">COMMAND PID <span class=\"keyword\">USER</span> FD <span class=\"keyword\">TYPE</span> DEVICE SIZE/<span class=\"keyword\">OFF</span> NODE <span class=\"type\">NAME</span></span><br><span class=\"line\">auditd <span class=\"number\">669</span> root <span class=\"number\">5</span>w REG <span class=\"number\">253</span>,<span class=\"number\">1</span> <span class=\"number\">2027785</span> <span class=\"number\">524474</span> /var/<span class=\"keyword\">log</span>/audit/audit.<span class=\"keyword\">log</span></span><br></pre></td></tr></table></figure>\n\n<p>显示文件系统<code>/</code>下所有已打开的文件列表. 和<code>fuser /</code>效果一样</p>\n<p>所有在&#x2F;var下已打开的文件</p>\n<p>bash</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsof +D /var/spool/</span><br><span class=\"line\">COMMAND PID <span class=\"keyword\">USER</span> <span class=\"title\">FD</span> <span class=\"keyword\">TYPE</span> DEVICE SIZE/OFF <span class=\"keyword\">NODE</span> <span class=\"title\">NAME</span></span><br><span class=\"line\"><span class=\"keyword\">master</span> <span class=\"title\">1297</span> root cwd DIR <span class=\"number\">253</span>,<span class=\"number\">1</span> <span class=\"number\">4096</span> <span class=\"number\">524402</span> /var/spool/postfix</span><br><span class=\"line\"><span class=\"keyword\">master</span> <span class=\"title\">1297</span> root <span class=\"number\">10</span>uW REG <span class=\"number\">253</span>,<span class=\"number\">1</span> <span class=\"number\">33</span> <span class=\"number\">524591</span> /var/spool/postfix/pid/<span class=\"literal\">master</span>.pid</span><br><span class=\"line\">qmgr <span class=\"number\">1301</span> postfix cwd DIR <span class=\"number\">253</span>,<span class=\"number\">1</span> <span class=\"number\">4096</span> <span class=\"number\">524402</span> /var/spool/postfix</span><br><span class=\"line\">pickup <span class=\"number\">4178</span> postfix cwd DIR <span class=\"number\">253</span>,<span class=\"number\">1</span> <span class=\"number\">4096</span> <span class=\"number\">524402</span> /var/spool/postfix</span><br></pre></td></tr></table></figure>\n\n<p>列出tcpdump这个用户打开的所有文件</p>\n<p>bash</p>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsof -u tcpdump</span><br><span class=\"line\">COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump cwd DIR 253,1<span class=\"number\"> 4096 </span>2752513 /root</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump rtd DIR 253,1<span class=\"number\"> 4096 </span>2 /</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump txt REG 253,1<span class=\"number\"> 929928 </span>1323976 /usr/sbin/tcpdump</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump mem REG 253,1<span class=\"number\"> 62184 </span>1328951 /usr/lib64/libnss_files-2.17.so</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump mem REG 0,7<span class=\"number\"> 231120 </span>socket:[231120] (stat: No such file or directory)</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump mem REG 253,1<span class=\"number\"> 90664 </span>1311459 /usr/lib64/libz.so.1.2.7</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump mem REG 253,1<span class=\"number\"> 19776 </span>1328757 /usr/lib64/libdl-2.17.so</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump mem REG 253,1<span class=\"number\"> 2127336 </span>1314561 /usr/lib64/libc-2.17.so</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump mem REG 253,1<span class=\"number\"> 266496 </span>1312167 /usr/lib64/libpcap.so.1.5.3</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump mem REG 253,1<span class=\"number\"> 2512448 </span>1312014 /usr/lib64/libcrypto.so.1.0.2k</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump mem REG 253,1<span class=\"number\"> 23968 </span>1311919 /usr/lib64/libcap-ng.so.0.0.0</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump mem REG 253,1<span class=\"number\"> 164264 </span>1311451 /usr/lib64/ld-2.17.so</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump 0u CHR 136,1 0t0<span class=\"number\"> 4 </span>/dev/pts/1</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump 1u CHR 136,1 0t0<span class=\"number\"> 4 </span>/dev/pts/1</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump 2u CHR 136,1 0t0<span class=\"number\"> 4 </span>/dev/pts/1</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump 3u pack<span class=\"number\"> 231120 </span>0t0 ALL type=SOCK_RAW</span><br><span class=\"line\">tcpdump<span class=\"number\"> 17905 </span>tcpdump 4w REG 253,1<span class=\"number\"> 864256 </span>2756467 /root/abc2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"25-fuser-查找访问文件系统的进程-​\"><a href=\"#25-fuser-查找访问文件系统的进程-​\" class=\"headerlink\" title=\"25. fuser 查找访问文件系统的进程 ​\"></a>25. fuser 查找访问文件系统的进程 <a href=\"#_25-fuser-%E6%9F%A5%E6%89%BE%E8%AE%BF%E9%97%AE%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%9B%E7%A8%8B\">​</a></h2><p><code>-v</code> 显示具体的进程名和用户</p>\n<p>bash</p>\n<figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ fuser -v /</span><br><span class=\"line\"> USER PID ACCESS COMMAND</span><br><span class=\"line\">/:<span class=\"built_in\"> root</span> kernel mount /</span><br><span class=\"line\"><span class=\"built_in\"> root</span> <span class=\"number\">1</span> .rc.. systemd</span><br><span class=\"line\"><span class=\"built_in\"> root</span> <span class=\"number\">2</span> .rc.. kthreadd</span><br><span class=\"line\"><span class=\"built_in\"> root</span> <span class=\"number\">3</span> .rc.. ksoftirqd/<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\"> root</span> <span class=\"number\">5</span> .rc.. kworker/<span class=\"number\">0</span>:0H</span><br></pre></td></tr></table></figure>\n\n<p><code>-k</code> kill掉访问该文件系统的所有进程.慎用. 先使用上述命令查询</p>\n<h2 id=\"26-dd-测试磁盘或者文件读写-​\"><a href=\"#26-dd-测试磁盘或者文件读写-​\" class=\"headerlink\" title=\"26. dd 测试磁盘或者文件读写 ​\"></a>26. dd 测试磁盘或者文件读写 <a href=\"#_26-dd-%E6%B5%8B%E8%AF%95%E7%A3%81%E7%9B%98%E6%88%96%E8%80%85%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99\">​</a></h2><p>高危命令, <code>of</code>一定要指向正确的文件, 不要指 <code>/</code>, <code>/dev/vda</code>, <code>/dev/vda1</code>等系统重要设备.<br>该命令要在测试环境验证充分.<br><code>if</code> 表示从哪个设备&#x2F;文件读<br><code>of</code> 表示写到哪个设备&#x2F;文件<br><code>bs</code> 表示一次读写多少字节. 也可以使用 1K, 1M这样带单位的<br><code>count</code> 表示最多读写多少次. 总的读写量为 <code>bs * count</code><br><code>/dev/zero</code> 可以无限读取<code>\\0</code></p>\n<p>bash</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd <span class=\"attribute\">if</span>=/dev/zero <span class=\"attribute\">of</span>=/tmp/abc.txt <span class=\"attribute\">bs</span>=1M <span class=\"attribute\">count</span>=10</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"27-rpm-安装-x2F-更新-x2F-卸载软件包-​\"><a href=\"#27-rpm-安装-x2F-更新-x2F-卸载软件包-​\" class=\"headerlink\" title=\"27. rpm 安装&#x2F;更新&#x2F;卸载软件包 ​\"></a>27. rpm 安装&#x2F;更新&#x2F;卸载软件包 <a href=\"#_27-rpm-%E5%AE%89%E8%A3%85-%E6%9B%B4%E6%96%B0-%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%E5%8C%85\">​</a></h2><p>查询系统已安装的所有软件包</p>\n<p>查询某个文件所属的软件包名. 文件必须是绝对路径</p>\n<p>bash</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qf <span class=\"regexp\">/etc/</span>ssh/sshd_config</span><br></pre></td></tr></table></figure>\n\n<p>bash</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qf <span class=\"string\">`which strace`</span></span><br></pre></td></tr></table></figure>\n\n<p>查询包所含有的文件</p>\n<p>查询包里的配置文件</p>\n<p>bash</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qc openssh-<span class=\"keyword\">server</span></span><br></pre></td></tr></table></figure>\n\n<p>查询包里的文档</p>\n<p>bash</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qd openssh-<span class=\"keyword\">server</span></span><br></pre></td></tr></table></figure>\n\n<p>查询软件包里的脚本信息</p>\n<p>bash</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rpm -q --scripts openssh-server</span><br><span class=\"line\">preinstall scriptlet (using <span class=\"regexp\">/bin/</span>sh):</span><br><span class=\"line\">getent <span class=\"keyword\">group</span> sshd &gt;<span class=\"regexp\">/dev/</span><span class=\"keyword\">null</span> || groupadd -g <span class=\"number\">74</span> -r sshd || :</span><br><span class=\"line\">getent passwd sshd &gt;<span class=\"regexp\">/dev/</span><span class=\"keyword\">null</span> || \\</span><br><span class=\"line\"> useradd -c <span class=\"string\">&quot;Privilege-separated SSH&quot;</span> -u <span class=\"number\">74</span> -g sshd \\</span><br><span class=\"line\"> -s <span class=\"regexp\">/sbin/</span>nologin -r -d <span class=\"regexp\">/var/</span>empty<span class=\"regexp\">/sshd sshd 2&gt; /</span>dev/<span class=\"keyword\">null</span> || :</span><br><span class=\"line\">postinstall scriptlet (using <span class=\"regexp\">/bin/</span>sh):</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $<span class=\"number\">1</span> -eq <span class=\"number\">1</span> ] ; then</span><br><span class=\"line\"> # Initial installation</span><br><span class=\"line\"> systemctl preset sshd.service sshd.socket &gt;<span class=\"regexp\">/dev/</span><span class=\"keyword\">null</span> <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> || :</span><br><span class=\"line\">fi</span><br><span class=\"line\">preuninstall scriptlet (using <span class=\"regexp\">/bin/</span>sh):</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $<span class=\"number\">1</span> -eq <span class=\"number\">0</span> ] ; then</span><br><span class=\"line\"> # <span class=\"keyword\">Package</span> removal, not upgrade</span><br><span class=\"line\"> systemctl --no-reload disable sshd.service sshd.socket &gt; <span class=\"regexp\">/dev/</span><span class=\"keyword\">null</span> <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> || :</span><br><span class=\"line\"> systemctl stop sshd.service sshd.socket &gt; <span class=\"regexp\">/dev/</span><span class=\"keyword\">null</span> <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> || :</span><br><span class=\"line\">fi</span><br><span class=\"line\">postuninstall scriptlet (using <span class=\"regexp\">/bin/</span>sh):</span><br><span class=\"line\">systemctl daemon-reload &gt;<span class=\"regexp\">/dev/</span><span class=\"keyword\">null</span> <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> || :</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $<span class=\"number\">1</span> -ge <span class=\"number\">1</span> ] ; then</span><br><span class=\"line\"> # <span class=\"keyword\">Package</span> upgrade, not uninstall</span><br><span class=\"line\"> systemctl <span class=\"keyword\">try</span>-restart sshd.service &gt;<span class=\"regexp\">/dev/</span><span class=\"keyword\">null</span> <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> || :</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n<p>查询包,自定义输出的格式和地段</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">rpm</span> -qa --queryformat <span class=\"string\">&quot;%-35&#123;NAME&#125; %&#123;VERSION&#125; %&#123;RELEASE&#125; %&#123;INSTALLTIME:date&#125;\\n&quot;</span></span><br><span class=\"line\"><span class=\"attribute\">jzlib</span> <span class=\"number\">1</span>.<span class=\"number\">1</span>.<span class=\"number\">1</span> <span class=\"number\">6</span>.el7 Thu <span class=\"number\">27</span> Jun <span class=\"number\">2019</span> <span class=\"number\">11</span>:<span class=\"number\">30</span>:<span class=\"number\">01</span> AM HKT</span><br><span class=\"line\"><span class=\"attribute\">nss</span> <span class=\"number\">3</span>.<span class=\"number\">36</span>.<span class=\"number\">0</span> <span class=\"number\">7</span>.<span class=\"number\">1</span>.el7_6 Tue <span class=\"number\">11</span> Jun <span class=\"number\">2019</span> <span class=\"number\">11</span>:<span class=\"number\">13</span>:<span class=\"number\">42</span> PM HKT</span><br><span class=\"line\"><span class=\"attribute\">hamcrest</span> <span class=\"number\">1</span>.<span class=\"number\">3</span> <span class=\"number\">6</span>.el7 Thu <span class=\"number\">27</span> Jun <span class=\"number\">2019</span> <span class=\"number\">11</span>:<span class=\"number\">30</span>:<span class=\"number\">01</span> AM HKT</span><br><span class=\"line\"><span class=\"attribute\">dhcp</span>-libs <span class=\"number\">4</span>.<span class=\"number\">2</span>.<span class=\"number\">5</span> <span class=\"number\">68</span>.el7.centos.<span class=\"number\">1</span> Tue <span class=\"number\">11</span> Jun <span class=\"number\">2019</span> <span class=\"number\">11</span>:<span class=\"number\">13</span>:<span class=\"number\">43</span> PM HKT</span><br></pre></td></tr></table></figure>\n\n<p>查询当前包的changelog. 常用于查看已解决的CVE列表</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -<span class=\"selector-tag\">q</span> <span class=\"attr\">--changelog</span> openssh-server</span><br></pre></td></tr></table></figure>\n\n<p>查询包所能提供的CAPABILITY</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -<span class=\"selector-tag\">q</span> <span class=\"attr\">--provides</span> glibc</span><br></pre></td></tr></table></figure>\n\n<p>查询哪些包依赖某个CAPABILITY</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -<span class=\"selector-tag\">q</span> <span class=\"attr\">--whatrequires</span> <span class=\"selector-attr\">[CAPABILITY]</span></span><br></pre></td></tr></table></figure>\n\n<p>查询包所依赖的CAPABILITY</p>\n<p>查询包所有提供的CAPABILITY</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -<span class=\"selector-tag\">q</span> <span class=\"attr\">--whatprovides</span> <span class=\"selector-attr\">[CAPABILITY]</span></span><br></pre></td></tr></table></figure>\n\n<p>校验当前包与原始状态的差别.<br>5 – MD5 校验和<br>S – 文件长度<br>L – 符号链接<br>T – 文件修改日期<br>D – 设备<br>U – 用户<br>G – 用户组<br>M – 模式 (包含许可和文件类型)<br>? – 不可读文件<br>如下标志文件的md5, 文件长度, 修改日志有变化</p>\n<p>bash</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rpm -V openssh-server</span><br><span class=\"line\">S.5.<span class=\"string\">...T.</span> c <span class=\"string\">/etc/ssh/sshd_config</span></span><br></pre></td></tr></table></figure>\n\n<p>安装本地包 <code>-vh</code> 获得一个详细的安装进程 <code>--nodeps</code> 忽略依赖关系</p>\n<p>卸载包</p>\n<p>升级包</p>\n<p>查询本地包的信息,要加<code>-p</code></p>\n<h2 id=\"28-yum-安装-x2F-更新-x2F-卸载软件包-​\"><a href=\"#28-yum-安装-x2F-更新-x2F-卸载软件包-​\" class=\"headerlink\" title=\"28. yum 安装&#x2F;更新&#x2F;卸载软件包 ​\"></a>28. yum 安装&#x2F;更新&#x2F;卸载软件包 <a href=\"#_28-yum-%E5%AE%89%E8%A3%85-%E6%9B%B4%E6%96%B0-%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%E5%8C%85\">​</a></h2><p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install a <span class=\"comment\">#安装软件包a   (加上-y选项，可以在安装软件包时，不弹出是否继续的提示)</span></span><br><span class=\"line\">yum install xxx --downloadonly --downloaddir=/xxx <span class=\"comment\">#只下载,不安装.</span></span><br><span class=\"line\">yum reinstall xxx <span class=\"comment\">#重装</span></span><br><span class=\"line\">yum remove a <span class=\"comment\">#卸载软件包a</span></span><br><span class=\"line\">yum <span class=\"built_in\">groups</span> list <span class=\"comment\">#查看已安装的软件组和可用的软件组</span></span><br><span class=\"line\">yum <span class=\"built_in\">groups</span> install <span class=\"string\">&quot;Basic Web Server&quot;</span> <span class=\"comment\">#安装软件组</span></span><br><span class=\"line\">yum <span class=\"built_in\">groups</span> remove <span class=\"string\">&quot;Basic Web Server&quot;</span> <span class=\"comment\">#卸载软件组</span></span><br><span class=\"line\">yum info a <span class=\"comment\">#查看软件包a的相关信息，如大小，版本等...</span></span><br><span class=\"line\">yum update a <span class=\"comment\">#更新软件包a</span></span><br><span class=\"line\">yum update <span class=\"comment\">#整体更新所有可更新的软件包</span></span><br><span class=\"line\">yum provides 文件或目录 <span class=\"comment\">#查看文件由哪个rpm包提供的</span></span><br><span class=\"line\">yum search tree <span class=\"comment\">#从仓库中搜索关键词为tree的包</span></span><br><span class=\"line\">yum <span class=\"built_in\">history</span> <span class=\"comment\">#查看yum运行历史记录</span></span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>查找某个文件属于哪个包的方法有:<br>如果文件已经安装在本机, 则<code>rpm -qf xxx</code><br>如果文件没有在本机安装, 则<code>yum provides XXX</code> XXX 可以是文件名, 也可以使用glob这样的通配符去查找<br>比如安装某rpm包, 提示文件没找到, 则可以使用 <code>yum provices xxx</code>. 比如文件名为 abc.txt, 用<code>yum provides *abc.txt</code>去查找</p></blockquote>\n<p>查询当前在repo里指定包的所有可用版本, 可用于升级到特定版本. <code>yum update systemd</code>默认升级到最新版</p>\n<p>bash</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum list <span class=\"attr\">--showduplicates</span> systemd</span><br><span class=\"line\">Installed Packages</span><br><span class=\"line\">systemd<span class=\"selector-class\">.x86_64</span> <span class=\"number\">219</span>-<span class=\"number\">42</span><span class=\"selector-class\">.el7_4</span>.<span class=\"number\">1</span> @updates</span><br><span class=\"line\">Available Packages</span><br><span class=\"line\">systemd<span class=\"selector-class\">.x86_64</span> <span class=\"number\">219</span>-<span class=\"number\">42</span><span class=\"selector-class\">.el7</span> base</span><br><span class=\"line\">systemd<span class=\"selector-class\">.x86_64</span> <span class=\"number\">219</span>-<span class=\"number\">42</span><span class=\"selector-class\">.el7_4</span>.<span class=\"number\">1</span> updates</span><br><span class=\"line\">systemd<span class=\"selector-class\">.x86_64</span> <span class=\"number\">219</span>-<span class=\"number\">42</span><span class=\"selector-class\">.el7_4</span>.<span class=\"number\">4</span> updates</span><br></pre></td></tr></table></figure>\n\n<p>升级指定包到特定的版本</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">yum</span> install systemd-<span class=\"number\">219</span>-<span class=\"number\">42</span>.el7_4.<span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n\n<p>具体查看某次事务中安装,更新,删除的包列表</p>\n<p>bash</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum history info <span class=\"number\">307</span></span><br><span class=\"line\">Loaded plugins: auto<span class=\"operator\">-</span><span class=\"keyword\">update</span><span class=\"operator\">-</span>debuginfo, fastestmirror</span><br><span class=\"line\">Transaction ID : <span class=\"number\">307</span></span><br><span class=\"line\"><span class=\"keyword\">Begin</span> <span class=\"type\">time</span> : Sat <span class=\"type\">Dec</span> <span class=\"number\">9</span> <span class=\"number\">20</span>:<span class=\"number\">24</span>:<span class=\"number\">11</span> <span class=\"number\">2017</span></span><br><span class=\"line\"><span class=\"keyword\">Begin</span> rpmdb : <span class=\"number\">700</span>:b36eb7acc22b3ab4b107097d0b740dc6bfd84a58</span><br><span class=\"line\"><span class=\"keyword\">End</span> <span class=\"type\">time</span> : <span class=\"number\">20</span>:<span class=\"number\">24</span>:<span class=\"number\">12</span> <span class=\"number\">2017</span> (<span class=\"number\">1</span> seconds)</span><br><span class=\"line\"><span class=\"keyword\">End</span> rpmdb : <span class=\"number\">701</span>:df2089f95d28d6f1f19561b39352bf3dd7a98c75</span><br><span class=\"line\"><span class=\"keyword\">User</span> : root <span class=\"operator\">&lt;</span>root<span class=\"operator\">&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">Return</span><span class=\"operator\">-</span>Code : Success</span><br><span class=\"line\">Command Line : install qemu<span class=\"operator\">-</span>kvm</span><br><span class=\"line\">Transaction performed <span class=\"keyword\">with</span>:</span><br><span class=\"line\"> Installed rpm<span class=\"number\">-4.11</span><span class=\"number\">.3</span><span class=\"number\">-25.</span>el7.x86_64 <span class=\"variable\">@base</span></span><br><span class=\"line\"> Installed yum<span class=\"number\">-3.4</span><span class=\"number\">.3</span><span class=\"number\">-154.</span>el7.centos.noarch <span class=\"variable\">@base</span></span><br><span class=\"line\"> Installed yum<span class=\"operator\">-</span>plugin<span class=\"operator\">-</span>fastestmirror<span class=\"number\">-1.1</span><span class=\"number\">.31</span><span class=\"number\">-42.</span>el7.noarch <span class=\"variable\">@base</span></span><br><span class=\"line\">Packages Altered:</span><br><span class=\"line\"> Updated qemu<span class=\"operator\">-</span>img<span class=\"number\">-10</span>:<span class=\"number\">1.5</span><span class=\"number\">.3</span><span class=\"number\">-141.</span>el7_4<span class=\"number\">.2</span>.x86_64 <span class=\"variable\">@updates</span></span><br><span class=\"line\"> <span class=\"keyword\">Update</span> <span class=\"number\">10</span>:<span class=\"number\">1.5</span><span class=\"number\">.3</span><span class=\"number\">-141.</span>el7_4<span class=\"number\">.4</span>.x86_64 <span class=\"variable\">@updates</span></span><br><span class=\"line\"> Install qemu<span class=\"operator\">-</span>kvm<span class=\"number\">-10</span>:<span class=\"number\">1.5</span><span class=\"number\">.3</span><span class=\"number\">-141.</span>el7_4<span class=\"number\">.4</span>.x86_64 <span class=\"variable\">@updates</span></span><br><span class=\"line\"> Updated qemu<span class=\"operator\">-</span>kvm<span class=\"operator\">-</span>common<span class=\"number\">-10</span>:<span class=\"number\">1.5</span><span class=\"number\">.3</span><span class=\"number\">-141.</span>el7_4<span class=\"number\">.2</span>.x86_64 <span class=\"variable\">@updates</span></span><br><span class=\"line\"> <span class=\"keyword\">Update</span> <span class=\"number\">10</span>:<span class=\"number\">1.5</span><span class=\"number\">.3</span><span class=\"number\">-141.</span>el7_4<span class=\"number\">.4</span>.x86_64 <span class=\"variable\">@updates</span></span><br><span class=\"line\">history info</span><br></pre></td></tr></table></figure>\n\n<p>查询某个软件包的所有历史变更记录</p>\n<p>bash</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum history list cloud-init</span><br><span class=\"line\">Loaded plugins: <span class=\"built_in\">auto</span>-update-debuginfo, fastestmirror</span><br><span class=\"line\">ID | <span class=\"type\">Command</span> line | <span class=\"type\">Date</span> and <span class=\"built_in\">time</span> | <span class=\"type\">Action</span>(s) | <span class=\"type\">Altered</span></span><br><span class=\"line\">-------------------------------------------------------------------------------</span><br><span class=\"line\"> <span class=\"number\">312</span> | <span class=\"type\">erase</span> cloud-init | <span class=\"type\">2018</span><span class=\"number\">-01</span><span class=\"number\">-11</span> <span class=\"number\">00</span>:<span class=\"number\">07</span> | <span class=\"type\">Erase</span> | <span class=\"type\">1</span></span><br><span class=\"line\"> <span class=\"number\">311</span> | <span class=\"type\">install</span> cloud-init | <span class=\"type\">2018</span><span class=\"number\">-01</span><span class=\"number\">-11</span> <span class=\"number\">00</span>:<span class=\"number\">01</span> | <span class=\"type\">Install</span> | <span class=\"type\">1</span></span><br><span class=\"line\"> <span class=\"number\">310</span> | <span class=\"type\">erase</span> cloud-init | <span class=\"type\">2017</span><span class=\"number\">-12</span><span class=\"number\">-10</span> <span class=\"number\">19</span>:<span class=\"number\">50</span> | <span class=\"type\">Erase</span> | <span class=\"type\">1</span></span><br><span class=\"line\"> <span class=\"number\">309</span> | <span class=\"type\">install</span> cloud-init | <span class=\"type\">2017</span><span class=\"number\">-12</span><span class=\"number\">-10</span> <span class=\"number\">18</span>:<span class=\"number\">52</span> | <span class=\"type\">Install</span> | <span class=\"type\">1</span></span><br><span class=\"line\"> <span class=\"number\">306</span> | <span class=\"type\">erase</span> cloud-init | <span class=\"type\">2017</span><span class=\"number\">-12</span><span class=\"number\">-09</span> <span class=\"number\">13</span>:<span class=\"number\">09</span> | <span class=\"type\">Erase</span> | <span class=\"type\">1</span></span><br><span class=\"line\"> <span class=\"number\">301</span> | <span class=\"type\">install</span> cloud-init | <span class=\"type\">2017</span><span class=\"number\">-10</span><span class=\"number\">-14</span> <span class=\"number\">11</span>:<span class=\"number\">49</span> | <span class=\"type\">Install</span> | <span class=\"type\">5</span></span><br><span class=\"line\">history list</span><br></pre></td></tr></table></figure>\n\n<p>查询包的依赖关系</p>\n<p>bash</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum deplist strace</span><br><span class=\"line\">package: strace<span class=\"selector-class\">.x86_64</span> <span class=\"number\">4.12</span>-<span class=\"number\">4</span><span class=\"selector-class\">.el7</span></span><br><span class=\"line\"> dependency: /bin/sh</span><br><span class=\"line\"> provider: bash<span class=\"selector-class\">.x86_64</span> <span class=\"number\">4.2</span>.<span class=\"number\">46</span>-<span class=\"number\">29</span><span class=\"selector-class\">.el7_4</span></span><br><span class=\"line\"> dependency: libc<span class=\"selector-class\">.so</span>.<span class=\"number\">6</span>(GLIBC_2.<span class=\"number\">15</span>)(<span class=\"number\">64</span>bit)</span><br><span class=\"line\"> provider: glibc<span class=\"selector-class\">.x86_64</span> <span class=\"number\">2.17</span>-<span class=\"number\">196</span><span class=\"selector-class\">.el7_4</span>.<span class=\"number\">2</span></span><br><span class=\"line\"> dependency: libgcc_s<span class=\"selector-class\">.so</span>.<span class=\"number\">1</span>()(<span class=\"number\">64</span>bit)</span><br><span class=\"line\"> provider: libgcc<span class=\"selector-class\">.x86_64</span> <span class=\"number\">4.8</span>.<span class=\"number\">5</span>-<span class=\"number\">16</span><span class=\"selector-class\">.el7_4</span>.<span class=\"number\">1</span></span><br><span class=\"line\"> dependency: libgcc_s<span class=\"selector-class\">.so</span>.<span class=\"number\">1</span>(GCC_3.<span class=\"number\">0</span>)(<span class=\"number\">64</span>bit)</span><br><span class=\"line\"> provider: libgcc<span class=\"selector-class\">.x86_64</span> <span class=\"number\">4.8</span>.<span class=\"number\">5</span>-<span class=\"number\">16</span><span class=\"selector-class\">.el7_4</span>.<span class=\"number\">1</span></span><br><span class=\"line\"> dependency: libgcc_s<span class=\"selector-class\">.so</span>.<span class=\"number\">1</span>(GCC_3.<span class=\"number\">3.1</span>)(<span class=\"number\">64</span>bit)</span><br><span class=\"line\"> provider: libgcc<span class=\"selector-class\">.x86_64</span> <span class=\"number\">4.8</span>.<span class=\"number\">5</span>-<span class=\"number\">16</span><span class=\"selector-class\">.el7_4</span>.<span class=\"number\">1</span></span><br><span class=\"line\"> dependency: <span class=\"built_in\">rtld</span>(GNU_HASH)</span><br><span class=\"line\"> provider: glibc<span class=\"selector-class\">.x86_64</span> <span class=\"number\">2.17</span>-<span class=\"number\">196</span><span class=\"selector-class\">.el7_4</span>.<span class=\"number\">2</span></span><br><span class=\"line\"> provider: glibc<span class=\"selector-class\">.i686</span> <span class=\"number\">2.17</span>-<span class=\"number\">196</span><span class=\"selector-class\">.el7_4</span>.<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"29-解压缩命令-​\"><a href=\"#29-解压缩命令-​\" class=\"headerlink\" title=\"29. 解压缩命令 ​\"></a>29. 解压缩命令 <a href=\"#_29-%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4\">​</a></h2><p>tar.gz</p>\n<p>bash</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf abc<span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span> #解压缩</span><br><span class=\"line\">tar -xzvf abc<span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span> -C /path #解压缩到制动的path目录下</span><br><span class=\"line\">tar -tzvf abc<span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span> #不解压,只查看文件列表</span><br><span class=\"line\">tar -czvf abc<span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span> <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span> <span class=\"selector-tag\">b</span><span class=\"selector-class\">.txt</span> #将 <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span> 和 <span class=\"selector-tag\">b</span><span class=\"selector-class\">.txt</span> 压缩为 abc<span class=\"selector-class\">.tar</span>.gz</span><br></pre></td></tr></table></figure>\n\n<p>.gz</p>\n<p>bash</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">gzip</span> -d FileName.gz <span class=\"comment\">#解压</span></span><br><span class=\"line\">gzip FileName <span class=\"comment\">#压缩</span></span><br></pre></td></tr></table></figure>\n\n<p>.bz .bz2</p>\n<p>bash</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">bzip2 </span>-d FileName.<span class=\"keyword\">bz2 </span><span class=\"comment\">#解压</span></span><br></pre></td></tr></table></figure>\n\n<p>.tar.bz .tar.bz2</p>\n<p>bash</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar <span class=\"keyword\">jxvf </span>FileName.tar.<span class=\"keyword\">bz2 </span><span class=\"comment\">#解压</span></span><br></pre></td></tr></table></figure>\n\n<p>.Z</p>\n<p>bash</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uncompress FileName.Z <span class=\"comment\">#解压</span></span><br><span class=\"line\"><span class=\"built_in\">compress</span> FileName <span class=\"comment\">#压缩</span></span><br></pre></td></tr></table></figure>\n\n<p>.zip</p>\n<p>bash</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip FileName.<span class=\"built_in\">zip</span> <span class=\"comment\">#解压</span></span><br><span class=\"line\"><span class=\"built_in\">zip</span> FileName.<span class=\"built_in\">zip</span> DirName <span class=\"comment\">#压缩</span></span><br></pre></td></tr></table></figure>\n\n<p>.rar</p>\n<p>bash</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rar x FileName.rar <span class=\"comment\">#解压</span></span><br><span class=\"line\">rar <span class=\"keyword\">a</span> FileName.rar DirName <span class=\"comment\">#压缩</span></span><br></pre></td></tr></table></figure>\n\n<p>.rpm</p>\n<p>bash</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm2cpio FileName.rpm | cpio -<span class=\"keyword\">div</span> <span class=\"comment\">#解包</span></span><br></pre></td></tr></table></figure>\n\n<p>.deb</p>\n<p>bash</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">ar</span> p <span class=\"type\">FileName</span>.deb <span class=\"class\"><span class=\"keyword\">data</span>.tar.gz | tar -xzvf #解包</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"30-systemd-管理命令-​\"><a href=\"#30-systemd-管理命令-​\" class=\"headerlink\" title=\"30. systemd 管理命令 ​\"></a>30. systemd 管理命令 <a href=\"#_30-systemd-%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4\">​</a></h2><p>bash</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">systemctl</span> -<span class=\"string\">t</span> <span class=\"string\">help</span> <span class=\"comment\">#列出所有的单元类型</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">--type</span> <span class=\"string\">&quot;unit&quot;</span> <span class=\"comment\">#查看指定单元类型的状况, 替换 unit 为 &quot;mount&quot;, &quot;service&quot;, &quot;socket&quot;等</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">--failed</span> <span class=\"comment\">#查看所有加载失败的单元信息</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">status</span> <span class=\"string\">sshd</span> <span class=\"comment\">#查看sshd服务单元状况</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">start</span> <span class=\"string\">sshd</span> <span class=\"comment\">#启动sshd服务单元</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">stop</span> <span class=\"string\">sshd</span> <span class=\"comment\">#停止sshd服务单元</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">restart</span> <span class=\"string\">sshd</span> <span class=\"comment\">#重启sshd服务单元</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">enable</span> <span class=\"string\">sshd</span> <span class=\"comment\">#配置sshd服务单元开机自动启动</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">disable</span> <span class=\"string\">sshd</span> <span class=\"comment\">#配置sshd服务单元开机不启动</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">reload</span> <span class=\"string\">sshd</span> <span class=\"comment\">#重新加载sshd服务单元的配置文件</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">mask</span> <span class=\"string\">sshd</span> <span class=\"comment\">#彻底屏蔽sshd服务单元</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">unmask</span> <span class=\"string\">sshd</span> <span class=\"comment\">#取消屏蔽sshd服务单元</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">list-units</span> <span class=\"comment\">#列出当前所有的单元, 这是 systemctl 的默认命令</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">get-default</span> <span class=\"comment\">#查看系统默认启动的Target</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">set-default</span> <span class=\"string\">multi-user</span>.<span class=\"string\">target</span> <span class=\"comment\"># 设置系统默认的target为 多用户模式</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">list-dependencies</span> <span class=\"string\">multi-user</span>.<span class=\"string\">target</span> <span class=\"comment\">#查看该target下所有的unit</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">list-dependencies</span> <span class=\"string\">sshd</span> <span class=\"comment\"># 查看一个service所依赖的所有unit</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">list-dependencies</span> <span class=\"built_in\">--reverse</span> <span class=\"string\">sshd</span> <span class=\"comment\"># 查看哪个unit依赖该服务</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">list-dependencies</span> <span class=\"built_in\">--before</span> <span class=\"string\">sshd</span> <span class=\"comment\"># 查看所有unit after sshd, 也就是 sshd 配置里的before=</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">list-dependencies</span> <span class=\"built_in\">--after</span> <span class=\"string\">sshd</span> <span class=\"comment\"># 查看所有unit before sshd</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">cat</span> <span class=\"string\">sshd</span> <span class=\"comment\">#查看service的配置文件</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">show</span> <span class=\"string\">sshd</span> <span class=\"comment\">#查看service的配置参数, 不带 service则显示默认的配置. 可用来查询nofile, noproc等限制资源参数</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"built_in\">list-jobs</span> <span class=\"comment\">#查看有哪些job仍在运行或者等待运行</span></span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&#x2F;etc&#x2F;security&#x2F;limits.conf无法设置systemd服务的资源限制. 参见:<br><a href=\"http://smilejay.com/2016/06/centos-7-systemd-conf-limits/\">http://smilejay.com/2016/06/centos-7-systemd-conf-limits/</a></p></blockquote>\n<p>列出当前旧的LSB脚本</p>\n<p>bash</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl | grep LSB</span><br><span class=\"line\"> network.service <span class=\"built_in\">loaded</span> active <span class=\"built_in\">running</span> LSB: Bring up/down networking</span><br><span class=\"line\"> prl-x11.service <span class=\"built_in\">loaded</span> active exited LSB: Autostart script <span class=\"keyword\">for</span> Parallels service</span><br><span class=\"line\"> prltoolsd.service <span class=\"built_in\">loaded</span> active <span class=\"built_in\">running</span> LSB: Autostart script <span class=\"keyword\">for</span> guest tools service.</span><br></pre></td></tr></table></figure>\n\n<p>查询systemd 版本</p>\n<p>bash</p>\n<figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"params\">system</span>ctl --version</span><br><span class=\"line\"><span class=\"params\">system</span>d <span class=\"number\">219</span></span><br><span class=\"line\">+PAM +AUDIT +SELINUX +IMA -APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ -LZ4 -SECCOMP +BLKID +ELFUTILS +KMOD +IDN</span><br></pre></td></tr></table></figure>\n\n<p>查看启动耗时</p>\n<p>bash</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$ </span>systemd-analyze</span><br><span class=\"line\">Startup finished in <span class=\"number\">579</span>ms (kernel) + <span class=\"number\">2.964</span>s (initrd) + <span class=\"number\">8.899</span>s (userspace) = <span class=\"number\">12.442</span>s</span><br></pre></td></tr></table></figure>\n\n<p>查看每个服务的启动耗时,并打印TOP5</p>\n<p>bash</p>\n<figure class=\"highlight thrift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemd-analyze blame | head -<span class=\"number\">5</span></span><br><span class=\"line\"> <span class=\"number\">4.949</span>s NetworkManager-wait-online.<span class=\"keyword\">service</span></span><br><span class=\"line\"> <span class=\"number\">3.379</span>s network.<span class=\"keyword\">service</span></span><br><span class=\"line\"> <span class=\"number\">987</span>ms postfix.<span class=\"keyword\">service</span></span><br><span class=\"line\"> <span class=\"number\">656</span>ms dev-mapper-VolGroup\\x2dlv_root.device</span><br><span class=\"line\"> <span class=\"number\">591</span>ms lvm2-monitor.<span class=\"keyword\">service</span></span><br></pre></td></tr></table></figure>\n\n<p>打印最耗时的一条启动链, 后面跟指定的service, 则打印该服务的启动链</p>\n<p>bash</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemd-analyze critical-chain</span><br><span class=\"line\">The time after the unit is active <span class=\"keyword\">or</span> started is printed after the <span class=\"string\">&quot;@&quot;</span> character.</span><br><span class=\"line\">The time the unit takes <span class=\"keyword\">to</span> start is printed after the <span class=\"string\">&quot;+&quot;</span> character.</span><br><span class=\"line\">multi-user.<span class=\"keyword\">target</span> <span class=\"title\">@8</span>.<span class=\"number\">863</span>s</span><br><span class=\"line\">└─postfix.service <span class=\"title\">@7</span>.<span class=\"number\">864</span>s <span class=\"number\">+987</span>ms</span><br><span class=\"line\"> └─network.<span class=\"keyword\">target</span> <span class=\"title\">@7</span>.<span class=\"number\">856</span>s</span><br><span class=\"line\"> └─NetworkManager.service <span class=\"title\">@2</span>.<span class=\"number\">459</span>s <span class=\"number\">+64</span>ms</span><br><span class=\"line\"> └─network-pre.<span class=\"keyword\">target</span> <span class=\"title\">@2</span>.<span class=\"number\">458</span>s</span><br><span class=\"line\"> └─firewalld.service <span class=\"title\">@1</span>.<span class=\"number\">934</span>s <span class=\"number\">+523</span>ms</span><br><span class=\"line\"> └─polkit.service <span class=\"title\">@1</span>.<span class=\"number\">724</span>s <span class=\"number\">+203</span>ms</span><br><span class=\"line\"> └─basic.<span class=\"keyword\">target</span> <span class=\"title\">@1</span>.<span class=\"number\">721</span>s</span><br><span class=\"line\"> └─sockets.<span class=\"keyword\">target</span> <span class=\"title\">@1</span>.<span class=\"number\">721</span>s</span><br><span class=\"line\"> └─iscsiuio.socket <span class=\"title\">@1</span>.<span class=\"number\">721</span>s</span><br><span class=\"line\"> └─sysinit.<span class=\"keyword\">target</span> <span class=\"title\">@1</span>.<span class=\"number\">709</span>s</span><br><span class=\"line\"> └─systemd-update-utmp.service <span class=\"title\">@1</span>.<span class=\"number\">700</span>s <span class=\"number\">+8</span>ms</span><br><span class=\"line\"> └─auditd.service <span class=\"title\">@1</span>.<span class=\"number\">426</span>s <span class=\"number\">+272</span>ms</span><br><span class=\"line\"> └─systemd-tmpfiles-setup.service <span class=\"title\">@1</span>.<span class=\"number\">358</span>s <span class=\"number\">+58</span>ms</span><br><span class=\"line\"> └─rhel-import-state.service <span class=\"title\">@1</span>.<span class=\"number\">303</span>s <span class=\"number\">+52</span>ms</span><br><span class=\"line\"> └─local-fs.<span class=\"keyword\">target</span> <span class=\"title\">@1</span>.<span class=\"number\">299</span>s</span><br><span class=\"line\"> └─home.mount <span class=\"title\">@1</span>.<span class=\"number\">283</span>s <span class=\"number\">+15</span>ms</span><br><span class=\"line\"> └─systemd-fsck<span class=\"title\">@dev-mapper-VolGroup</span>\\<span class=\"keyword\">x</span><span class=\"number\">2</span>dlv_home.service <span class=\"title\">@1</span>.<span class=\"number\">266</span>s <span class=\"number\">+14</span>ms</span><br><span class=\"line\"> └─dev-mapper-VolGroup\\<span class=\"keyword\">x</span><span class=\"number\">2</span>dlv_home.device <span class=\"title\">@1</span>.<span class=\"number\">265</span>s</span><br></pre></td></tr></table></figure>\n\n<p>生成启动瀑布图, 使用chrome浏览器打开 a.svg. 分析启动性能更加直观</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemd-analyze plot &gt;<span class=\"selector-tag\">a</span><span class=\"selector-class\">.svg</span></span><br></pre></td></tr></table></figure>\n\n<p>启动瀑布图<br><img src=\"https://xixiliguo.github.io/img/systemd_plot.svg\"></p>\n<p>journalctl 相关操作</p>\n<p>bash</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">journalctl <span class=\"comment\"># 查看所有日志（默认情况下 ，显示所有可以查看的日志）</span></span><br><span class=\"line\">journalctl -k <span class=\"comment\"># 查看内核日志（不显示应用日志）</span></span><br><span class=\"line\">journalctl -b <span class=\"comment\"># 查看系统本次启动的日志 </span></span><br><span class=\"line\">journalctl -b -1 <span class=\"comment\"># 查看上一次启动的日志（需更改设置）</span></span><br><span class=\"line\">journalctl -f <span class=\"comment\"># 实时滚动显示最新日志</span></span><br><span class=\"line\">journalctl <span class=\"string\">/usr/lib/systemd/systemd</span> <span class=\"comment\"># 查看指定可执行文件的日志, 必须指定绝对路径</span></span><br><span class=\"line\">journalctl _PID=1 <span class=\"comment\"># 查看指定进程的日志</span></span><br><span class=\"line\">journalctl -u sshd <span class=\"comment\"># 查看某个 Unit 的日志</span></span><br><span class=\"line\">journalctl <span class=\"params\">--disk-usage</span> <span class=\"comment\"># 显示日志占据的硬盘空间</span></span><br><span class=\"line\">journalctl <span class=\"params\">--list-boots</span> <span class=\"comment\"># 显示每次启动的id和时间</span></span><br></pre></td></tr></table></figure>\n\n<p>查看指定时间的日志</p>\n<p>bash</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">journalctl</span> <span class=\"built_in\">--since</span> <span class=\"string\">&quot;2012-10-30 18:17:16&quot;</span></span><br><span class=\"line\"><span class=\"string\">journalctl</span> <span class=\"built_in\">--since</span> <span class=\"string\">&quot;2020-10-01&quot;</span></span><br><span class=\"line\"><span class=\"string\">journalctl</span> <span class=\"built_in\">--since</span> <span class=\"string\">&quot;20 min ago&quot;</span></span><br><span class=\"line\"><span class=\"string\">journalctl</span> <span class=\"built_in\">--since</span> <span class=\"string\">&quot;-5m&quot;</span></span><br><span class=\"line\"><span class=\"string\">journalctl</span> <span class=\"built_in\">--since</span> <span class=\"string\">&quot;-5d&quot;</span></span><br><span class=\"line\"><span class=\"string\">journalctl</span> <span class=\"built_in\">--since</span> <span class=\"string\">yesterday</span></span><br><span class=\"line\"><span class=\"string\">journalctl</span> <span class=\"built_in\">--since</span> <span class=\"string\">&quot;2015-01-10&quot;</span> <span class=\"built_in\">--until</span> <span class=\"string\">&quot;2015-01-11 03:00&quot;</span></span><br><span class=\"line\"><span class=\"string\">journalctl</span> <span class=\"built_in\">--since</span> <span class=\"string\">09:00 </span><span class=\"built_in\">--until</span> <span class=\"string\">&quot;1 hour ago&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>时间格式可参考<code>man journalctl</code>或者<code>man 7 systemd.time</code></p>\n<h2 id=\"31-Ubuntu-x2F-Debian-检查已经安装好的软件包的更新日志-​\"><a href=\"#31-Ubuntu-x2F-Debian-检查已经安装好的软件包的更新日志-​\" class=\"headerlink\" title=\"31. Ubuntu&#x2F;Debian 检查已经安装好的软件包的更新日志 ​\"></a>31. Ubuntu&#x2F;Debian 检查已经安装好的软件包的更新日志 <a href=\"#_31-ubuntu-debian-%E6%A3%80%E6%9F%A5%E5%B7%B2%E7%BB%8F%E5%AE%89%E8%A3%85%E5%A5%BD%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%9A%84%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97\">​</a></h2><p>bash</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zless <span class=\"regexp\">/usr/</span>share<span class=\"regexp\">/doc/</span>&lt;<span class=\"keyword\">package</span> -name&gt;/changelog.Debian.gz</span><br><span class=\"line\">zless <span class=\"regexp\">/usr/</span>share<span class=\"regexp\">/doc/</span>&lt;<span class=\"keyword\">package</span> -name&gt;/changelog.gz</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"32-搜索含有指定字符的手册页-​\"><a href=\"#32-搜索含有指定字符的手册页-​\" class=\"headerlink\" title=\"32. 搜索含有指定字符的手册页 ​\"></a>32. 搜索含有指定字符的手册页 <a href=\"#_32-%E6%90%9C%E7%B4%A2%E5%90%AB%E6%9C%89%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E7%9A%84%E6%89%8B%E5%86%8C%E9%A1%B5\">​</a></h2><p>bash</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">$</span> man -k logrotate</span><br><span class=\"line\">dh_installlogrotate (<span class=\"number\">1</span>) - install logrotate config <span class=\"keyword\">files</span></span><br><span class=\"line\">logrotate (<span class=\"number\">8</span>) - rotates, compresses, <span class=\"keyword\">and</span> mails <span class=\"keyword\">system</span> logs</span><br><span class=\"line\">logrotate.conf (<span class=\"number\">5</span>) - rotates, compresses, <span class=\"keyword\">and</span> mails <span class=\"keyword\">system</span> logs</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"33-快速删除大量小文件-​\"><a href=\"#33-快速删除大量小文件-​\" class=\"headerlink\" title=\"33. 快速删除大量小文件 ​\"></a>33. 快速删除大量小文件 <a href=\"#_33-%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E5%A4%A7%E9%87%8F%E5%B0%8F%E6%96%87%E4%BB%B6\">​</a></h2><p>使用<code>rsync</code>, 速度快但占用大量IO, 业务量低时使用. 高危命令</p>\n<p>bash</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir empty_dir</span><br><span class=\"line\">rsync -a --<span class=\"keyword\">delete</span> empty_dir/ yourdirectory/</span><br></pre></td></tr></table></figure>\n\n<p>使用<code>find</code>, 速度慢但消耗IO少. <code>rm</code>会遇到<code>Argument list too long</code>报错</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /tmp -<span class=\"built_in\">type</span> f -<span class=\"built_in\">exec</span> <span class=\"built_in\">rm</span> &#123;&#125; \\; <span class=\"comment\">#删除/tmp目录下所有文件</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"34-sysctl-管理系统参数-​\"><a href=\"#34-sysctl-管理系统参数-​\" class=\"headerlink\" title=\"34. sysctl 管理系统参数 ​\"></a>34. sysctl 管理系统参数 <a href=\"#_34-sysctl-%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%8F%82%E6%95%B0\">​</a></h2><p>bash</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysctl -<span class=\"keyword\">a</span> <span class=\"comment\">#打印当前参数</span></span><br><span class=\"line\">sysctl -w net.ipv4.tcp_fin_timeout=<span class=\"number\">30</span> <span class=\"comment\">#实时更新一个系统参数, 高危. 要验证好</span></span><br><span class=\"line\">sysctl -p <span class=\"comment\">#读取/etc/sysctl.conf和 /etc/sysctl.d/下配置文件信息,使其生效</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"35-清空文件内容-​\"><a href=\"#35-清空文件内容-​\" class=\"headerlink\" title=\"35. 清空文件内容 ​\"></a>35. 清空文件内容 <a href=\"#_35-%E6%B8%85%E7%A9%BA%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9\">​</a></h2><p>假设文件名为 abc.txt, 以下方法都可以清空该文件的内容</p>\n<p>bash</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"keyword\">abc</span>.txt</span><br><span class=\"line\"><span class=\"keyword\">cp</span> /dev/null <span class=\"keyword\">abc</span>.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"36-查询系统调用-​\"><a href=\"#36-查询系统调用-​\" class=\"headerlink\" title=\"36. 查询系统调用 ​\"></a>36. 查询系统调用 <a href=\"#_36-%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8\">​</a></h2><p>跟踪命令<code>ls -rlt</code>的系统调用, 将信息输出到<code>a.txt</code></p>\n<p>bash</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strace -ftT -o <span class=\"selector-tag\">a</span><span class=\"selector-class\">.txt</span> ls -rlt</span><br></pre></td></tr></table></figure>\n\n<p>统计命令进行的系统调用信息</p>\n<p>跟踪具体的进程</p>\n<p>过滤系统调用</p>\n<p>bash</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strace -<span class=\"keyword\">e</span> trace=<span class=\"keyword\">open</span> <span class=\"keyword\">ls</span></span><br><span class=\"line\">strace -<span class=\"keyword\">e</span> trace=<span class=\"keyword\">open</span>,<span class=\"keyword\">write</span> <span class=\"keyword\">ls</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"37-查看磁盘uuid和文件系统类型-​\"><a href=\"#37-查看磁盘uuid和文件系统类型-​\" class=\"headerlink\" title=\"37. 查看磁盘uuid和文件系统类型 ​\"></a>37. 查看磁盘uuid和文件系统类型 <a href=\"#_37-%E6%9F%A5%E7%9C%8B%E7%A3%81%E7%9B%98uuid%E5%92%8C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%B1%BB%E5%9E%8B\">​</a></h2><p>bash</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lsblk -f</span><br><span class=\"line\">NAME FSTYPE LABEL UUID MOUNTPOINT</span><br><span class=\"line\">vda</span><br><span class=\"line\">└─vda1 ext3 <span class=\"number\">32236b41</span>-fcde-460e-8c34-ba50515b33f2 /</span><br><span class=\"line\">$ blkid</span><br><span class=\"line\">/dev/vda1: UUID=<span class=\"string\">&quot;32236b41-fcde-460e-8c34-ba50515b33f2&quot;</span> TYPE=<span class=\"string\">&quot;ext3&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"38-创建软连接-​\"><a href=\"#38-创建软连接-​\" class=\"headerlink\" title=\"38. 创建软连接 ​\"></a>38. 创建软连接 <a href=\"#_38-%E5%88%9B%E5%BB%BA%E8%BD%AF%E8%BF%9E%E6%8E%A5\">​</a></h2><p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span> -s regular_file softlink 创建软连接</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"39-history查看历史记录-​\"><a href=\"#39-history查看历史记录-​\" class=\"headerlink\" title=\"39. history查看历史记录 ​\"></a>39. history查看历史记录 <a href=\"#_39-history%E6%9F%A5%E7%9C%8B%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95\">​</a></h2><p>如果直接执行<code>history</code>没有显示时间戳,可以使用下面的命令</p>\n<p>bash</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HISTTIMEFORMAT=<span class=\"string\">&quot;%d/%m/%y %T&quot;</span></span><br><span class=\"line\">history</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"40-查看进程的父子调用关系-​\"><a href=\"#40-查看进程的父子调用关系-​\" class=\"headerlink\" title=\"40. 查看进程的父子调用关系 ​\"></a>40. 查看进程的父子调用关系 <a href=\"#_40-%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%88%B6%E5%AD%90%E8%B0%83%E7%94%A8%E5%85%B3%E7%B3%BB\">​</a></h2><p><code>-a</code> 显示命令行参数<br><code>-p</code> 显示pid信息. {}表示线程<br><code>-s</code> 显示特定进程的所有父进程，不加该参数显示特定进程的所有子进程</p>\n<p>bash</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pstree -<span class=\"selector-tag\">p</span></span><br><span class=\"line\"><span class=\"built_in\">systemd</span>(<span class=\"number\">1</span>)─┬─<span class=\"built_in\">agetty</span>(<span class=\"number\">1176</span>)</span><br><span class=\"line\"> ├─<span class=\"built_in\">auditd</span>(<span class=\"number\">669</span>)───&#123;auditd&#125;(<span class=\"number\">670</span>)</span><br><span class=\"line\"> ├─<span class=\"built_in\">avahi-daemon</span>(<span class=\"number\">701</span>)───<span class=\"built_in\">avahi-daemon</span>(<span class=\"number\">720</span>)</span><br><span class=\"line\"> ├─<span class=\"built_in\">chronyd</span>(<span class=\"number\">721</span>)</span><br><span class=\"line\"> ├─<span class=\"built_in\">crond</span>(<span class=\"number\">1169</span>)</span><br><span class=\"line\"> ├─<span class=\"built_in\">dbus-daemon</span>(<span class=\"number\">702</span>)───&#123;dbus-daemon&#125;(<span class=\"number\">730</span>)</span><br><span class=\"line\"> ├─<span class=\"built_in\">dhclient</span>(<span class=\"number\">4673</span>)</span><br><span class=\"line\"> ├─<span class=\"built_in\">dnsmasq</span>(<span class=\"number\">1344</span>)───<span class=\"built_in\">dnsmasq</span>(<span class=\"number\">1345</span>)</span><br><span class=\"line\"> ├─<span class=\"built_in\">firewalld</span>(<span class=\"number\">776</span>)───&#123;firewalld&#125;(<span class=\"number\">952</span>)</span><br><span class=\"line\"> ├─<span class=\"built_in\">gssproxy</span>(<span class=\"number\">714</span>)─┬─&#123;gssproxy&#125;(<span class=\"number\">724</span>)</span><br><span class=\"line\"> │ ├─&#123;gssproxy&#125;(<span class=\"number\">725</span>)</span><br><span class=\"line\"> │ ├─&#123;gssproxy&#125;(<span class=\"number\">726</span>)</span><br><span class=\"line\"> │ ├─&#123;gssproxy&#125;(<span class=\"number\">727</span>)</span><br><span class=\"line\"> │ └─&#123;gssproxy&#125;(<span class=\"number\">728</span>)</span><br></pre></td></tr></table></figure>\n\n<p>bash</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># pstree -ap 3598</span></span><br><span class=\"line\"><span class=\"string\">bash</span>,<span class=\"string\">3598</span></span><br><span class=\"line\"> └─<span class=\"string\">pstree</span>,<span class=\"string\">3941</span> -<span class=\"string\">ap</span> <span class=\"string\">3598</span></span><br><span class=\"line\"><span class=\"comment\"># pstree -aps 3598</span></span><br><span class=\"line\"><span class=\"string\">systemd</span>,<span class=\"string\">1</span> <span class=\"built_in\">--switched-root</span> <span class=\"built_in\">--system</span> <span class=\"built_in\">--deserialize</span> <span class=\"string\">30</span></span><br><span class=\"line\"> └─<span class=\"string\">sshd</span>,<span class=\"string\">869</span></span><br><span class=\"line\"> └─<span class=\"string\">sshd</span>,<span class=\"string\">3595</span></span><br><span class=\"line\"> └─<span class=\"string\">sshd</span>,<span class=\"string\">3597</span></span><br><span class=\"line\"> └─<span class=\"string\">bash</span>,<span class=\"string\">3598</span></span><br><span class=\"line\"> └─<span class=\"string\">pstree</span>,<span class=\"string\">3942</span> -<span class=\"string\">aps</span> <span class=\"string\">3598</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"41-rsync文件-​\"><a href=\"#41-rsync文件-​\" class=\"headerlink\" title=\"41. rsync文件 ​\"></a>41. rsync文件 <a href=\"#_41-rsync%E6%96%87%E4%BB%B6\">​</a></h2><p>rsync [OPTION]… SRC [SRC]… DEST<br>在指定复制源时，路径是否有最后的 “&#x2F;” 有不同的含义，例如：<br>&#x2F;data ：表示将整个 &#x2F;data 目录复制到目标目录<br>&#x2F;data&#x2F; ：表示将 &#x2F;data&#x2F; 目录中的所有内容复制到目标目录<br><code>--stats</code> : 输出文件传输的状态<br><code>--progress</code> : 输出文件传输的进度<br><code>-a</code>归档模式, 递归且保留符号链接，保留权限信息，时间戳，以及owner,group信息<br><code>-z</code> 打开压缩功能<br><code>-v</code> verbose更多打印信息<br>本地同步</p>\n<p>bash</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rsync -azv <span class=\"regexp\">/var/</span>opt<span class=\"regexp\">/installation/i</span>nventory<span class=\"regexp\">/ /</span>root<span class=\"regexp\">/temp/</span></span><br></pre></td></tr></table></figure>\n\n<p>从本地到远端</p>\n<p>bash</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rsync -avz /root/temp/ thegeekstuff<span class=\"variable\">@192</span>.<span class=\"number\">168.200</span>.<span class=\"number\">10</span><span class=\"symbol\">:/home/thegeekstuff/temp/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"42-查询的动态库链接信息-​\"><a href=\"#42-查询的动态库链接信息-​\" class=\"headerlink\" title=\"42. 查询的动态库链接信息 ​\"></a>42. 查询的动态库链接信息 <a href=\"#_42-%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%8A%A8%E6%80%81%E5%BA%93%E9%93%BE%E6%8E%A5%E4%BF%A1%E6%81%AF\">​</a></h2><p>查询python这个程序依赖的所有动态库</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ldd `<span class=\"built_in\">which</span> python`</span><br><span class=\"line\"> linux-vdso.so.1 =&gt; (0x00007fffb1fb4000)</span><br><span class=\"line\"> libpython2.7.so.1.0 =&gt; /lib64/libpython2.7.so.1.0 (0x00007f5dee201000)</span><br><span class=\"line\"> libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007f5dedfe5000)</span><br><span class=\"line\"> libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007f5dedde0000)</span><br><span class=\"line\"> libutil.so.1 =&gt; /lib64/libutil.so.1 (0x00007f5dedbdd000)</span><br><span class=\"line\"> libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f5ded8db000)</span><br><span class=\"line\"> libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f5ded517000)</span><br><span class=\"line\"> /lib64/ld-linux-x86-64.so.2 (0x0000561b940b0000)</span><br><span class=\"line\">[root@linux /tmp/new_folder]<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"43-查询ascii编码表-​\"><a href=\"#43-查询ascii编码表-​\" class=\"headerlink\" title=\"43. 查询ascii编码表 ​\"></a>43. 查询ascii编码表 <a href=\"#_43-%E6%9F%A5%E8%AF%A2ascii%E7%BC%96%E7%A0%81%E8%A1%A8\">​</a></h2><p>速查编码信息</p>\n<h2 id=\"44-iptable-内置防火墙-​\"><a href=\"#44-iptable-内置防火墙-​\" class=\"headerlink\" title=\"44. iptable 内置防火墙 ​\"></a>44. iptable 内置防火墙 <a href=\"#_44-iptable-%E5%86%85%E7%BD%AE%E9%98%B2%E7%81%AB%E5%A2%99\">​</a></h2><p>iptables内置了4个表，即raw表、filter表、nat表和mangle表，默认操作filter表.</p>\n<p>规则表之间的优先顺序如下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> Raw      <span class=\"comment\">--&gt;    mangle       -&gt;        nat    --&gt;      filter</span></span><br><span class=\"line\">prerouting          prerouting          prerouting        <span class=\"built_in\">input</span></span><br><span class=\"line\"><span class=\"built_in\">output</span>              postrouting         postrouting       <span class=\"built_in\">output</span></span><br><span class=\"line\"> <span class=\"built_in\">input</span>               <span class=\"built_in\">output</span>            forward</span><br><span class=\"line\"> <span class=\"built_in\">output</span></span><br><span class=\"line\"> forward</span><br></pre></td></tr></table></figure>\n\n<p>查询表中的规则,当时打印匹配该规则的包和字节数</p>\n<p><code>REJECT</code> 拦阻该数据包，并返回数据包通知对方，可以返回的数据包有几个选择：ICMP port-unreachable、ICMP echo-reply 或是tcp-reset（这个数据包包会要求对方关闭联机），进行完此处理动作后，将不再比对其它规则，直接中断过滤程序。 范例如下：</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -<span class=\"selector-tag\">A</span> <span class=\"selector-tag\">INPUT</span> -<span class=\"selector-tag\">p</span> TCP <span class=\"attr\">--dport</span> <span class=\"number\">22</span> -j REJECT <span class=\"attr\">--reject-with</span> ICMP echo-reply</span><br></pre></td></tr></table></figure>\n\n<p><code>DROP</code> 丢弃数据包不予处理，进行完此处理动作后，将不再比对其它规则，直接中断过滤程序。 <code>REDIRECT</code> 将封包重新导向到另一个端口（PNAT），进行完此处理动作后，将会继续比对其它规则。这个功能可以用来实作透明代理 或用来保护web 服务器。例如：</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -t nat -<span class=\"selector-tag\">A</span> PREROUTING -<span class=\"selector-tag\">p</span> tcp <span class=\"attr\">--dport</span> <span class=\"number\">80</span> -j REDIRECT<span class=\"attr\">--to-ports</span> <span class=\"number\">8081</span></span><br></pre></td></tr></table></figure>\n\n<p><code>MASQUERADE</code> 改写封包来源IP为防火墙的IP，可以指定port 对应的范围，进行完此处理动作后，直接跳往下一个规则链（mangle:postrouting）。这个功能与SNAT略有不同，当进行IP 伪装时，不需指定要伪装成哪个 IP，IP 会从网卡直接读取，当使用拨接连线时，IP 通常是由ISP公司的DHCP服务器指派的，这个时候MASQUERADE特别有用。范例如下：</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -t nat -<span class=\"selector-tag\">A</span> POSTROUTING -<span class=\"selector-tag\">p</span> TCP -j MASQUERADE <span class=\"attr\">--to-ports</span> <span class=\"number\">21000</span>-<span class=\"number\">31000</span></span><br></pre></td></tr></table></figure>\n\n<p><code>LOG</code> 将数据包相关信息纪录在 &#x2F;var&#x2F;log 中，详细位置请查阅 &#x2F;etc&#x2F;syslog.conf 配置文件，进行完此处理动作后，将会继续比对其它规则。例如：</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -<span class=\"selector-tag\">A</span> <span class=\"selector-tag\">INPUT</span> -<span class=\"selector-tag\">p</span> tcp -j LOG <span class=\"attr\">--log-prefix</span> &quot;<span class=\"selector-tag\">input</span> packet&quot;</span><br></pre></td></tr></table></figure>\n\n<p><code>SNAT</code> 改写封包来源IP为某特定IP或IP范围，可以指定port对应的范围，进行完此处理动作后，将直接跳往下一个规则炼（mangle:postrouting）.范例如下：</p>\n<p>bash</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -t nat -<span class=\"keyword\">A</span> POSTROUTING -p tcp -o eth0 -j SNAT --to-source <span class=\"number\">192.168.10.15</span>-<span class=\"number\">192.168.10.160</span>:<span class=\"number\">2100-3200</span></span><br></pre></td></tr></table></figure>\n\n<p><code>DNAT</code> 改写数据包包目的地 IP 为某特定 IP 或 IP 范围，可以指定 port 对应的范围，进行完此处理动作后，将会直接跳往下一个规则链（filter:input 或 filter:forward）。范例如下：</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">iptables</span> -t nat -A PREROUTING -p tcp -d <span class=\"number\">15.45.23.67</span> --dport <span class=\"number\">80</span> -j DNAT --to-destination <span class=\"number\">192.168.10.1</span>-<span class=\"number\">192.168.10.10:80</span>-<span class=\"number\">100</span></span><br></pre></td></tr></table></figure>\n\n<p><code>MIRROR</code> 镜像数据包，也就是将来源 IP与目的地IP对调后，将数据包返回，进行完此处理动作后，将会中断过滤程序。 <code>QUEUE</code> 中断过滤程序，将封包放入队列，交给其它程序处理。透过自行开发的处理程序，可以进行其它应用，例如：计算联机费用…….等。 <code>RETURN</code> 结束在目前规则链中的过滤程序，返回主规则链继续过滤，如果把自订规则炼看成是一个子程序，那么这个动作，就相当于提早结束子程序并返回到主程序中。 <code>MARK</code> 将封包标上某个代号，以便提供作为后续过滤的条件判断依据，进行完此处理动作后，将会继续比对其它规则。范例如下：</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -t mangle -<span class=\"selector-tag\">A</span> PREROUTING -<span class=\"selector-tag\">p</span> tcp <span class=\"attr\">--dport</span> <span class=\"number\">22</span> -j <span class=\"selector-tag\">MARK</span> <span class=\"attr\">--set-mark</span> <span class=\"number\">22</span></span><br></pre></td></tr></table></figure>\n\n<p>清空iptables规则</p>\n<p>bash</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"keyword\">set</span> ACCEPT <span class=\"comment\">for default action</span></span><br><span class=\"line\">iptables <span class=\"comment\">-P INPUT ACCEPT</span></span><br><span class=\"line\">iptables <span class=\"comment\">-P FORWARD ACCEPT</span></span><br><span class=\"line\">iptables <span class=\"comment\">-P OUTPUT ACCEPT</span></span><br><span class=\"line\"># flush <span class=\"comment\">all chains</span></span><br><span class=\"line\">iptables <span class=\"comment\">-F</span></span><br><span class=\"line\"># delete <span class=\"comment\">all  user-defined chains</span></span><br><span class=\"line\">iptables <span class=\"comment\">-X</span></span><br></pre></td></tr></table></figure>\n\n<p>丢弃TCP访问21端口的包</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -<span class=\"selector-tag\">A</span> <span class=\"selector-tag\">INPUT</span> -<span class=\"selector-tag\">p</span> tcp <span class=\"attr\">--dport</span> <span class=\"number\">21</span> -j DROP</span><br></pre></td></tr></table></figure>\n\n<p>加<code>--line-numbers</code>参数可以打印规则序号. 删除时用</p>\n<p>bash</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -nvL <span class=\"comment\">--line-numbers</span></span><br></pre></td></tr></table></figure>\n\n<p>删除INPUT链里的第三个规则</p>\n<p><a href=\"https://blog.csdn.net/htmlxx/article/details/51412750\">https://blog.csdn.net/htmlxx/article/details/51412750</a><br>这里记录了一些常用的iptables规则操作</p>\n<h2 id=\"45-tcpdump-抓包-​\"><a href=\"#45-tcpdump-抓包-​\" class=\"headerlink\" title=\"45. tcpdump 抓包 ​\"></a>45. tcpdump 抓包 <a href=\"#_45-tcpdump-%E6%8A%93%E5%8C%85\">​</a></h2><p>常用表达式:<br>非 : ! or “not” (去掉双引号)<br>且 : &amp;&amp; or “and”<br>或 : || or “or”<br><code>-nn</code> 不转换地址和端口号 <code>-v</code> 打印详情</p>\n<p>抓取所有经过eth1，地址是192.168.1.1且端口号为25的所有包</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">tcpdump</span> -i eth1 host <span class=\"number\">192.168.1.1</span> and port <span class=\"number\">25</span></span><br></pre></td></tr></table></figure>\n\n<p>-c count 抓取指定数目的包后退出</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">tcpdump</span> -i eth0 -c <span class=\"number\">1000</span></span><br></pre></td></tr></table></figure>\n\n<p>-C file_size 循环抓包,当文件达到指定的大小后,将包写入到新文件.举例如下:</p>\n<p>bash</p>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tcpdump -i eth0 -C<span class=\"number\"> 1 </span>-w abc</span><br><span class=\"line\">$ ls -rlt abc*</span><br><span class=\"line\">-rw-r--r--.<span class=\"number\"> 1 </span>tcpdump tcpdump<span class=\"number\"> 1001078 </span>Jan<span class=\"number\"> 14 </span>23:33 abc</span><br><span class=\"line\">-rw-r--r--.<span class=\"number\"> 1 </span>tcpdump tcpdump<span class=\"number\"> 647168 </span>Jan<span class=\"number\"> 14 </span>23:33 abc1</span><br></pre></td></tr></table></figure>\n\n<p>抓取本机eth0网卡发往公网ip的数据包</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">tcpdump</span> -n -i eth0 &#x27;not net <span class=\"number\">10.0.0.0</span>/<span class=\"number\">8</span> and not net <span class=\"number\">192.168.0.0</span>/<span class=\"number\">16</span> and not net <span class=\"number\">172.16.0.0</span>/<span class=\"number\">12</span>&#x27;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"46-DNS查询工具-​\"><a href=\"#46-DNS查询工具-​\" class=\"headerlink\" title=\"46. DNS查询工具 ​\"></a>46. DNS查询工具 <a href=\"#_46-dns%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7\">​</a></h2><p>指定DNS服务器递归查</p>\n<p>bash</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">dig</span> <span class=\"string\">www.baidu.com</span> <span class=\"string\">@8.8.8.8</span></span><br><span class=\"line\"><span class=\"string\">;</span> <span class=\"string\">&lt;&lt;&gt;&gt;</span> <span class=\"string\">DiG</span> <span class=\"number\">9.9</span><span class=\"number\">.4</span><span class=\"string\">-RedHat-9.9.4-51.el7</span> <span class=\"string\">&lt;&lt;&gt;&gt;</span> <span class=\"string\">www.baidu.com</span> <span class=\"string\">@8.8.8.8</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"attr\">global options:</span> <span class=\"string\">+cmd</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"attr\">Got answer:</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"string\">-&gt;&gt;HEADER&lt;&lt;-</span> <span class=\"attr\">opcode:</span> <span class=\"string\">QUERY,</span> <span class=\"attr\">status:</span> <span class=\"string\">NOERROR,</span> <span class=\"attr\">id:</span> <span class=\"number\">4712</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"attr\">flags:</span> <span class=\"string\">qr</span> <span class=\"string\">rd</span> <span class=\"string\">ra;</span> <span class=\"attr\">QUERY:</span> <span class=\"number\">1</span><span class=\"string\">,</span> <span class=\"attr\">ANSWER:</span> <span class=\"number\">3</span><span class=\"string\">,</span> <span class=\"attr\">AUTHORITY:</span> <span class=\"number\">0</span><span class=\"string\">,</span> <span class=\"attr\">ADDITIONAL:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"attr\">OPT PSEUDOSECTION:</span></span><br><span class=\"line\"><span class=\"string\">;</span> <span class=\"attr\">EDNS: version:</span> <span class=\"number\">0</span><span class=\"string\">,</span> <span class=\"string\">flags:;</span> <span class=\"attr\">udp:</span> <span class=\"number\">512</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"attr\">QUESTION SECTION:</span></span><br><span class=\"line\"><span class=\"string\">;www.baidu.com.</span>\t\t\t<span class=\"string\">IN</span>\t<span class=\"string\">A</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"attr\">ANSWER SECTION:</span></span><br><span class=\"line\"><span class=\"string\">www.baidu.com.</span>\t\t<span class=\"number\">1043\t</span><span class=\"string\">IN</span>\t<span class=\"string\">CNAME</span>\t<span class=\"string\">www.a.shifen.com.</span></span><br><span class=\"line\"><span class=\"string\">www.a.shifen.com.</span>\t<span class=\"number\">218</span>\t<span class=\"string\">IN</span>\t<span class=\"string\">A</span>\t<span class=\"number\">220.181</span><span class=\"number\">.112</span><span class=\"number\">.244</span></span><br><span class=\"line\"><span class=\"string\">www.a.shifen.com.</span>\t<span class=\"number\">218</span>\t<span class=\"string\">IN</span>\t<span class=\"string\">A</span>\t<span class=\"number\">220.181</span><span class=\"number\">.111</span><span class=\"number\">.188</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"attr\">Query time:</span> <span class=\"number\">78</span> <span class=\"string\">msec</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"attr\">SERVER:</span> <span class=\"number\">8.8</span><span class=\"number\">.8</span><span class=\"number\">.8</span><span class=\"comment\">#53(8.8.8.8)</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"attr\">WHEN:</span> <span class=\"string\">Mon</span> <span class=\"string\">Jan</span> <span class=\"number\">15</span> <span class=\"number\">00</span><span class=\"string\">:03:09</span> <span class=\"string\">HKT</span> <span class=\"number\">2018</span></span><br><span class=\"line\"><span class=\"string\">;;</span> <span class=\"attr\">MSG SIZE  rcvd:</span> <span class=\"number\">101</span></span><br></pre></td></tr></table></figure>\n\n<p>反解析</p>\n<p>bash</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ dig -x <span class=\"number\">74</span>.<span class=\"number\">125</span>.<span class=\"number\">135</span>.<span class=\"number\">105</span></span><br><span class=\"line\">;; QUESTION SECTION:</span><br><span class=\"line\">;<span class=\"number\">105</span>.<span class=\"number\">135</span>.<span class=\"number\">125</span>.<span class=\"number\">74</span>.in-addr.arpa. IN PTR</span><br><span class=\"line\">;; ANSWER SECTION:</span><br><span class=\"line\"><span class=\"number\">105.135.125.74</span>.in-addr.arpa. <span class=\"number\">83205</span> IN PTR ni-in-f105.1e100.net.</span><br></pre></td></tr></table></figure>\n\n<p>全过程迭代跟踪</p>\n<p>bash</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">dig</span> +trace www.baidu.<span class=\"keyword\">com</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"47-NTP时间同步-​\"><a href=\"#47-NTP时间同步-​\" class=\"headerlink\" title=\"47. NTP时间同步 ​\"></a>47. NTP时间同步 <a href=\"#_47-ntp%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5\">​</a></h2><p>ntpdate 手工校准时间, 加 <code>-q</code> 只查询, 不同步时间, 加 <code>-d</code> 打开Debug模式, 但不真正更新时间</p>\n<p>bash</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ntpdate ntp1<span class=\"selector-class\">.aliyun</span><span class=\"selector-class\">.com</span></span><br><span class=\"line\"><span class=\"number\">15</span> Jan <span class=\"number\">23</span>:<span class=\"number\">18</span>:<span class=\"number\">51</span> ntpdate<span class=\"selector-attr\">[18981]</span>: adjust <span class=\"selector-tag\">time</span> server <span class=\"number\">182.92</span>.<span class=\"number\">12.11</span> offset <span class=\"number\">0.000643</span> sec</span><br></pre></td></tr></table></figure>\n\n<p>安装<code>ntpd</code>时查询ntp同步状态的命令为<code>ntpq -p</code><br>如果使用<code>chronyd</code>(centos7默认)是命令为<code>chronyc sources -v</code></p>\n<p>bash</p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ chronyc sources -v</span><br><span class=\"line\"><span class=\"number\">210</span> <span class=\"symbol\">Number</span> of sources = <span class=\"number\">2</span></span><br><span class=\"line\"> .-- <span class=\"symbol\">Source</span> mode <span class=\"string\">&#x27;^&#x27;</span> = server, <span class=\"string\">&#x27;=&#x27;</span> = peer, <span class=\"string\">&#x27;#&#x27;</span> = local clock.</span><br><span class=\"line\"> / .- <span class=\"symbol\">Source</span> state <span class=\"string\">&#x27;*&#x27;</span> = current synced, <span class=\"string\">&#x27;+&#x27;</span> = combined , <span class=\"string\">&#x27;-&#x27;</span> = not combined,</span><br><span class=\"line\">| / <span class=\"string\">&#x27;?&#x27;</span> = unreachable, <span class=\"string\">&#x27;x&#x27;</span> = time may be in error, <span class=\"string\">&#x27;~&#x27;</span> = time too variable.</span><br><span class=\"line\">|| .- xxxx [ yyyy ] +/- zzzz</span><br><span class=\"line\">|| <span class=\"symbol\">Reachability</span> register (octal) -. | xxxx = adjusted offset,</span><br><span class=\"line\">|| <span class=\"symbol\">Log2</span>(<span class=\"symbol\">Polling</span> interval) --. | | yyyy = measured offset,</span><br><span class=\"line\">|| \\ | | zzzz = estimated error.</span><br><span class=\"line\">|| | | \\</span><br><span class=\"line\"><span class=\"symbol\">MS</span> <span class=\"symbol\">Name</span>/<span class=\"symbol\">IP</span> address <span class=\"symbol\">Stratum</span> <span class=\"symbol\">Poll</span> <span class=\"symbol\">Reach</span> <span class=\"symbol\">LastRx</span> <span class=\"symbol\">Last</span> sample</span><br><span class=\"line\">===============================================================================</span><br><span class=\"line\">^* time5.aliyun.com <span class=\"number\">2</span> <span class=\"number\">6</span> <span class=\"number\">37</span> <span class=\"number\">41</span> +<span class=\"number\">2394</span>ns[+<span class=\"number\">1057</span>us] +/- <span class=\"number\">15</span>ms</span><br><span class=\"line\">^- <span class=\"number\">120.25</span><span class=\"number\">.115</span><span class=\"number\">.19</span> <span class=\"number\">2</span> <span class=\"number\">6</span> <span class=\"number\">37</span> <span class=\"number\">40</span> <span class=\"number\">-2559</span>us[<span class=\"number\">-2559</span>us] +/- <span class=\"number\">67</span>ms</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"48-netstat查询网络连接信息-​\"><a href=\"#48-netstat查询网络连接信息-​\" class=\"headerlink\" title=\"48. netstat查询网络连接信息 ​\"></a>48. netstat查询网络连接信息 <a href=\"#_48-netstat%E6%9F%A5%E8%AF%A2%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E4%BF%A1%E6%81%AF\">​</a></h2><p>查看所有tcp下监听端口, p表示打印相应的进程</p>\n<p>查看所有已经建立的连接</p>\n<p>查看路由表</p>\n<p>查看网络统计信息进程</p>\n<p><code>-i</code> 查网卡驱动信息</p>\n<p>bash</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">ethtool</span> <span class=\"string\">-i</span> <span class=\"string\">eth0</span></span><br><span class=\"line\"><span class=\"attr\">driver:</span> <span class=\"string\">virtio_net</span></span><br><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"attr\">firmware-version:</span></span><br><span class=\"line\"><span class=\"attr\">expansion-rom-version:</span></span><br><span class=\"line\"><span class=\"attr\">bus-info:</span> <span class=\"number\">0000</span><span class=\"string\">:00:05.0</span></span><br><span class=\"line\"><span class=\"attr\">supports-statistics:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">supports-test:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">supports-eeprom-access:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">supports-register-dump:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">supports-priv-flags:</span> <span class=\"literal\">no</span></span><br></pre></td></tr></table></figure>\n\n<p>不跟参数,显示速率,全双工模式等信息(虚拟机下没有)<br>Link 为<code>yes</code>表示 网线连接正常</p>\n<p>bash</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">ethtool</span> <span class=\"string\">eth0</span></span><br><span class=\"line\"><span class=\"attr\">Settings for eth0:</span></span><br><span class=\"line\"> <span class=\"attr\">Link detected:</span> <span class=\"literal\">yes</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"50-ip-网络维护-​\"><a href=\"#50-ip-网络维护-​\" class=\"headerlink\" title=\"50. ip 网络维护 ​\"></a>50. ip 网络维护 <a href=\"#_50-ip-%E7%BD%91%E7%BB%9C%E7%BB%B4%E6%8A%A4\">​</a></h2><p>启用接口</p>\n<p>禁用接口</p>\n<p>设置接口MAC地址（设置前请先禁用接口）</p>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip link <span class=\"built_in\">set</span> <span class=\"variable\">&lt;接口名&gt;</span> address <span class=\"variable\">&lt;值&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>设置接口MTU（设置前请先禁用接口） 例：把ens33的MTU改成9000并检查。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ip link show dev ens33 #修改前</span></span><br><span class=\"line\"><span class=\"attribute\">2</span>: ens33: &lt;BROADCAST,MULTICAST&gt; mtu <span class=\"number\">1500</span> qdisc pfifo_fast state DOWN mode DEFAULT qlen <span class=\"number\">1000</span></span><br><span class=\"line\"> <span class=\"attribute\">link</span>/ether <span class=\"number\">88</span>:<span class=\"number\">32</span>:<span class=\"number\">9</span>b:ca:<span class=\"number\">3</span>f:<span class=\"number\">49</span> brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\"><span class=\"comment\"># ip link set ens33 mtu 9000</span></span><br><span class=\"line\"><span class=\"comment\"># ip link show dev ens33  #修改后</span></span><br><span class=\"line\"><span class=\"attribute\">2</span>: ens33: &lt;BROADCAST,MULTICAST&gt; mtu <span class=\"number\">9000</span> qdisc pfifo_fast state DOWN mode DEFAULT qlen <span class=\"number\">1000</span></span><br><span class=\"line\"> <span class=\"attribute\">link</span>/ether <span class=\"number\">88</span>:<span class=\"number\">32</span>:<span class=\"number\">9</span>b:ca:<span class=\"number\">3</span>f:<span class=\"number\">49</span> brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure>\n\n<p>查看网卡的详细信息, 比如是bridge还是veth等类型</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip --details <span class=\"built_in\">link</span></span><br><span class=\"line\">ip <span class=\"built_in\">link</span> show <span class=\"built_in\">type</span> bridge <span class=\"comment\">#显示所有的桥接设备</span></span><br></pre></td></tr></table></figure>\n\n<p>下面脚本可以显示每个链路的类型, 除了以太网</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!/bin/bash</span><br><span class=\"line\"><span class=\"comment\"># Arguments: $1: Interface (&#x27;grep&#x27;-regexp).</span></span><br><span class=\"line\"><span class=\"comment\"># Static list of types (from `ip link help`):</span></span><br><span class=\"line\">TYPES=(bond bond_slave bridge dummy gre gretap ifb ip6gre ip6gretap ip6tnl ipip ipoib ipvlan macvlan macvtap nlmon sit vcan veth vlan vti vxlan tun tap)</span><br><span class=\"line\">iface=<span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;TYPES[@]&#125;</span>&quot;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\"> ip <span class=\"built_in\">link</span> show <span class=\"built_in\">type</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;type&#125;</span>&quot;</span> | grep -E <span class=\"string\">&#x27;^[0-9]+:&#x27;</span> | <span class=\"built_in\">cut</span> -d <span class=\"string\">&#x27;:&#x27;</span> -f 2 | sed <span class=\"string\">&#x27;s|^[[:space:]]*||&#x27;</span> | <span class=\"keyword\">while</span> <span class=\"built_in\">read</span> _if; <span class=\"keyword\">do</span></span><br><span class=\"line\"> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;_if&#125;</span>:<span class=\"variable\">$&#123;type&#125;</span>&quot;</span></span><br><span class=\"line\"> <span class=\"keyword\">done</span> | grep <span class=\"string\">&quot;^<span class=\"variable\">$&#123;iface&#125;</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<p>查看网卡状态和对应的IP信息</p>\n<p>给接口eth0赋予地址10.211.55.10 掩码是255.255.255.0(24代表掩码中1的个数)，广播地址是10.211.55.255</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ip</span> addr add <span class=\"number\">10.211.55.10</span>/<span class=\"number\">24</span> dev eth0</span><br></pre></td></tr></table></figure>\n\n<p>删除eth0上的 10.211.55.10</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ip</span> addr del <span class=\"number\">10.211.55.10</span>/<span class=\"number\">24</span> dev eth0</span><br></pre></td></tr></table></figure>\n\n<p>查看路由表信息</p>\n<p>bash</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip route</span><br><span class=\"line\">default via <span class=\"number\">10</span>.<span class=\"number\">211</span>.<span class=\"number\">55</span>.<span class=\"number\">1</span> dev eth0</span><br><span class=\"line\"><span class=\"number\">10.211.55.0</span>/<span class=\"number\">24</span> dev eth0 proto kernel scope link src <span class=\"number\">10</span>.<span class=\"number\">211</span>.<span class=\"number\">55</span>.<span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"number\">192.168.122.0</span>/<span class=\"number\">24</span> dev virbr0 proto kernel scope link src <span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">122</span>.<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>查询目的地为<code>192.168.1.1</code>时选择的路由情况</p>\n<p>bash</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip route get <span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">1</span>.<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">192.168.1.1</span> via <span class=\"number\">10</span>.<span class=\"number\">211</span>.<span class=\"number\">55</span>.<span class=\"number\">1</span> dev eth0 src <span class=\"number\">10</span>.<span class=\"number\">211</span>.<span class=\"number\">55</span>.<span class=\"number\">9</span></span><br><span class=\"line\"> cache</span><br></pre></td></tr></table></figure>\n\n<p>增加默认路由</p>\n<p>bash</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip<span class=\"built_in\"> route </span><span class=\"built_in\">add</span><span class=\"built_in\"> default </span>via 20.0.0.1</span><br></pre></td></tr></table></figure>\n\n<p>策略性路由相对于传统的路由算法主要是引入了多路由表以及规则的概念。<br>例如一个子网通过一个路由器与外界相连，路由器与外界有两条线路相连，其中一条的速度比较快，一条的速度比较慢。对于子网内的大多数用户来说对速度并没有特殊的要求，所以可以让他们用比较慢的路由；但是子网内有一些特殊的用户却是对速度的要求比较苛刻，所以他们需要使用速度比较快的路由。如果使用一张路由表上述要求是无法实现的，而如果根据源地址或其它参数，对不同的用户使用不同的路由表，这样就可以大大提高路由器的性能。<br>优先级别越高的规则越先匹配（数值越小优先级别越高）。</p>\n<p>系统内置3张表:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表<span class=\"number\">255</span> 本地路由表（<span class=\"keyword\">Local</span> <span class=\"keyword\">table</span>）本地接口地址，广播地址，已及NAT地址都放在这个表。该路由表由系统自动维护，管理员不能直接修改。</span><br><span class=\"line\">表<span class=\"number\">254</span> 主路由表（Main <span class=\"keyword\">table</span>）如果没有指明路由所属的表，所有的路由都默认都放在这个表里，route）所添加的路由都会加到这个表。</span><br><span class=\"line\">表<span class=\"number\">253</span> 默认路由表（<span class=\"keyword\">Default</span> <span class=\"keyword\">table</span>）一般来说默认的路由都放在这张表，但是如果特别指明放的也可以是所有的网关路由。</span><br></pre></td></tr></table></figure>\n\n<p>查看路由规则, <code>32766</code>表示优先级, 越小优先级越高.</p>\n<p>bash</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip <span class=\"keyword\">rule</span> list</span><br><span class=\"line\"><span class=\"number\">0</span>: <span class=\"keyword\">from</span> <span class=\"keyword\">all</span> lookup <span class=\"keyword\">local</span></span><br><span class=\"line\"><span class=\"number\">32766</span>: <span class=\"keyword\">from</span> <span class=\"keyword\">all</span> lookup main</span><br><span class=\"line\"><span class=\"number\">32767</span>: <span class=\"keyword\">from</span> <span class=\"keyword\">all</span> lookup <span class=\"keyword\">default</span></span><br></pre></td></tr></table></figure>\n\n<p>创建一个新的路由表, 原地址为<code>192.168.2.0/24</code>的消息全部路由到这张表里</p>\n<p>bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;250 test&quot;</span> &gt;&gt; /etc/iproute2/rt_tables</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">ip rule add from 192.168.2.0/24 table <span class=\"built_in\">test</span></span></span><br></pre></td></tr></table></figure>\n\n<p>上面的配置如果要持久化, 可以将命令写入<code>/etc/rc.d/rc.local</code>, 并给该文件可执行权限. <code>chmod +x /etc/rc.d/rc.local</code></p>\n<p>查看某一张表里的路由信息</p>\n<p>bash</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">$</span> ip route list <span class=\"keyword\">table</span> main</span><br></pre></td></tr></table></figure>\n\n<p>规则匹配的对象是所有的数据包，动作是选用路由表1的路由，这条规则的优先级是32800</p>\n<p>bash</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ip <span class=\"keyword\">rule</span> <span class=\"keyword\">add</span> <span class=\"keyword\">from</span> <span class=\"number\">0</span>/<span class=\"number\">0</span> <span class=\"keyword\">table</span> <span class=\"number\">1</span> pref <span class=\"number\">32800</span></span><br></pre></td></tr></table></figure>\n\n<p>规则匹配的对象是IP为192.168.3.112，tos等于0x10的包，使用路由表2，这条规则的优先级是1500</p>\n<p>bash</p>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip <span class=\"keyword\">rule</span> add <span class=\"keyword\">from</span> <span class=\"number\">192.168</span>.<span class=\"number\">3.112</span>/<span class=\"number\">32</span> [<span class=\"keyword\">tos</span> <span class=\"number\">0</span>x10] <span class=\"built_in\">table</span> ２ pref <span class=\"number\">1500</span></span><br></pre></td></tr></table></figure>\n\n<p>在table test里添加一条默认路由</p>\n<p>bash</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip<span class=\"built_in\"> route </span><span class=\"built_in\">add</span><span class=\"built_in\"> default </span>via 182.169.1.1 table test</span><br></pre></td></tr></table></figure>\n\n<p>上面的规则是以源地址为关键字，作为是否匹配的依据的。除了源地址外，还可以用以下的信息：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> <span class=\"comment\">-- 源地址</span></span><br><span class=\"line\"><span class=\"keyword\">to</span> <span class=\"comment\">-- 目的地址（这里是选择规则时使用，查找路由表时也使用）</span></span><br><span class=\"line\">tos <span class=\"comment\">-- IP包头的TOS（type of sevice）域</span></span><br><span class=\"line\">dev <span class=\"comment\">-- 物理接口</span></span><br><span class=\"line\">fwmark <span class=\"comment\">-- 防火墙参数</span></span><br></pre></td></tr></table></figure>\n\n<p>采取的动作除了指定表，还可以指定下面的动作：</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Table</span> 指明所使用的表</span><br><span class=\"line\">Nat 透明网关</span><br><span class=\"line\">Action prohibit 丢弃该包，并发送 COMM.ADM.PROHIITED的ICMP信息</span><br><span class=\"line\">Reject 单纯丢弃该包</span><br><span class=\"line\">Unreachable丢弃该包，并发送 <span class=\"keyword\">NET</span> UNREACHABLE的ICMP信息</span><br></pre></td></tr></table></figure>\n\n<p>实际场景中尽量使用<code>ip rule to xxxx table xxx</code>针对目的IP指定路由表. 这样无论是收到请求后回复,或者主动发起请求都能匹配</p>\n<p>具体的语法可参考<code>man ip-rule</code>和<code>man ip-route</code><br><a href=\"https://www.redhat.com/sysadmin/beginners-guide-network-troubleshooting-linux\">https://www.redhat.com/sysadmin/beginners-guide-network-troubleshooting-linux</a><br><a href=\"http://www.microhowto.info/troubleshooting/troubleshooting_the_routing_table.html\">http://www.microhowto.info/troubleshooting/troubleshooting_the_routing_table.html</a></p>\n<p>ip netns操作<br><a href=\"https://www.cnblogs.com/sparkdev/p/9253409.html\">https://www.cnblogs.com/sparkdev/p/9253409.html</a></p>\n<h2 id=\"51-who-查看当前登录用户-​\"><a href=\"#51-who-查看当前登录用户-​\" class=\"headerlink\" title=\"51. who 查看当前登录用户 ​\"></a>51. who 查看当前登录用户 <a href=\"#_51-who-%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%99%BB%E5%BD%95%E7%94%A8%E6%88%B7\">​</a></h2><p>bash</p>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ who</span><br><span class=\"line\">root pts/<span class=\"number\">0 2018-01</span>-<span class=\"number\">17</span> <span class=\"number\">22</span>:<span class=\"number\">28</span> (<span class=\"number\">10.211.55.2</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"52-使用iftop查看主机实时网络流量-​\"><a href=\"#52-使用iftop查看主机实时网络流量-​\" class=\"headerlink\" title=\"52. 使用iftop查看主机实时网络流量 ​\"></a>52. 使用iftop查看主机实时网络流量 <a href=\"#_52-%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E4%B8%BB%E6%9C%BA%E5%AE%9E%E6%97%B6%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F\">​</a></h2><p>类似top这样的交互式界面<br>监控网卡的实时流量,反向解析IP,同时还显示具体每个连接接受和发送的流量<br>注意显示流量的单位为b. 例如 <code>8Mb = 1MB</code>. 所有流量值都是 per second<br>按<code>n</code>关闭主机名解析, 按<code>N</code>关闭端口号解析, 按<code>p</code>显示连接的端口号<br><code>iftop -f &quot;port 22&quot;</code>过滤只显示端口为22的连接的流量信息, 过滤语法跟<code>tcpdump</code>一样<br>直接运行<code>iftop</code>, 得到如下信息:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>第一行类似刻度尺的刻度，为显示流量图形的长条作标尺用的。<br>&lt;&#x3D; &#x3D;&gt;这两个左右箭头，表示的是流量的方向。<br>TX：发送流量<br>RX：接收流量<br>TOTAL：总流量<br>Cumm：运行iftop到目前时间的总流量<br>peak：流量峰值<br>rates：分别表示过去 2s 10s 40s 的平均流量</p></blockquote>\n<p><img src=\"https://xixiliguo.github.io/img/iftop.png\"></p>\n<h2 id=\"53-Bash相关环境变量-​\"><a href=\"#53-Bash相关环境变量-​\" class=\"headerlink\" title=\"53. Bash相关环境变量 ​\"></a>53. Bash相关环境变量 <a href=\"#_53-bash%E7%9B%B8%E5%85%B3%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\">​</a></h2><p>历史信息显示时间格式<br>如下设置后, 使用<code>history</code>就会显示具体命令的具体执行时间.<br>可以直接将其写在 .bashrc文件里</p>\n<p>bash</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HISTTIMEFORMAT=<span class=\"string\">&quot;%d/%m/%y %T &quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>PS1变量 设置登录提示符, 如下带颜色显示当前用户, 主机名和当前目录的绝对路径.</p>\n<p>bash</p>\n<figure class=\"highlight wren\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">PS1</span><span class=\"operator\">=</span><span class=\"string\">&quot;[<span class=\"char escape_\">\\e</span>[1;31m\\u@\\h <span class=\"char escape_\">\\e</span>[0;34m$&#123;PWD&#125;<span class=\"char escape_\">\\e</span>[0m]<span class=\"char escape_\">\\\\</span>$ &quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"54-查本机的公网IP-​\"><a href=\"#54-查本机的公网IP-​\" class=\"headerlink\" title=\"54. 查本机的公网IP ​\"></a>54. 查本机的公网IP <a href=\"#_54-%E6%9F%A5%E6%9C%AC%E6%9C%BA%E7%9A%84%E5%85%AC%E7%BD%91ip\">​</a></h2><p>通常我们的主机都在内网, 访问互联网是都是换成公网IP后去连接的<br>如下是查询我们主机的公网IP</p>\n<ol>\n<li>打开百度 <a href=\"http://www.baidu.com/\">www.baidu.com</a></li>\n<li>输出两个字符 <code>ip</code>, 敲回车</li>\n<li>新页面显示的本机IP就是公网IP</li>\n</ol>\n<h2 id=\"55-查询linux系统的一些限制信息-​\"><a href=\"#55-查询linux系统的一些限制信息-​\" class=\"headerlink\" title=\"55. 查询linux系统的一些限制信息 ​\"></a>55. 查询linux系统的一些限制信息 <a href=\"#_55-%E6%9F%A5%E8%AF%A2linux%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%B8%80%E4%BA%9B%E9%99%90%E5%88%B6%E4%BF%A1%E6%81%AF\">​</a></h2><p>如下文章详细列举了redhat&#x2F;centos各版本操作系统的重要限制信息.<br>比如ext4限制, 最大cpu, 最大Memory<br><a href=\"https://access.redhat.com/articles/rhel-limits\">https://access.redhat.com/articles/rhel-limits</a></p>\n<h2 id=\"56-判断虚拟化类型的N种方法-​\"><a href=\"#56-判断虚拟化类型的N种方法-​\" class=\"headerlink\" title=\"56. 判断虚拟化类型的N种方法 ​\"></a>56. 判断虚拟化类型的N种方法 <a href=\"#_56-%E5%88%A4%E6%96%AD%E8%99%9A%E6%8B%9F%E5%8C%96%E7%B1%BB%E5%9E%8B%E7%9A%84n%E7%A7%8D%E6%96%B9%E6%B3%95\">​</a></h2><p>bash</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">$</span> dmidecode -s <span class=\"keyword\">system</span>-manufacturer</span><br><span class=\"line\">OpenStack Foundation</span><br></pre></td></tr></table></figure>\n\n<p>bash</p>\n<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$ </span>systemd-detect-virt</span><br><span class=\"line\">kvm</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"57-cpu信息解读-​\"><a href=\"#57-cpu信息解读-​\" class=\"headerlink\" title=\"57. cpu信息解读 ​\"></a>57. cpu信息解读 <a href=\"#_57-cpu%E4%BF%A1%E6%81%AF%E8%A7%A3%E8%AF%BB\">​</a></h2><p>bash</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lscpu</span><br><span class=\"line\">Architecture: x86_64 <span class=\"comment\">// 架构 </span></span><br><span class=\"line\">CPU <span class=\"built_in\">op-mode</span>(s): <span class=\"number\">32</span>-bit, <span class=\"number\">64</span>-bit <span class=\"comment\">// 位数</span></span><br><span class=\"line\">Byte Order: Little Endian <span class=\"comment\">// 小端</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">CPU</span><span class=\"params\">(s)</span></span>:                <span class=\"number\">2</span>                   <span class=\"comment\">// 逻辑cpu数</span></span><br><span class=\"line\">On-line <span class=\"built_in\">CPU</span>(s) list: <span class=\"number\">0</span>,<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Thread</span><span class=\"params\">(s)</span></span> per core:    <span class=\"number\">1</span>                   <span class=\"comment\">// 一个核有一个线程. </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Core</span><span class=\"params\">(s)</span></span> per socket:    <span class=\"number\">2</span>                   <span class=\"comment\">// 一个插槽有两个核</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Socket</span><span class=\"params\">(s)</span></span>:             <span class=\"number\">1</span>                   <span class=\"comment\">// 总共一个插槽</span></span><br><span class=\"line\">NUMA <span class=\"built_in\">node</span>(s): <span class=\"number\">1</span></span><br><span class=\"line\">Vendor ID: GenuineIntel</span><br><span class=\"line\">CPU family: <span class=\"number\">6</span></span><br><span class=\"line\">Model: <span class=\"number\">69</span></span><br><span class=\"line\">Model name: <span class=\"built_in\">Intel</span>(R) <span class=\"built_in\">Core</span>(TM) i5-<span class=\"number\">4260</span>U CPU @ <span class=\"number\">1.40</span>GHz</span><br><span class=\"line\">Stepping: <span class=\"number\">1</span></span><br><span class=\"line\">CPU MHz: <span class=\"number\">2000.000</span></span><br><span class=\"line\">BogoMIPS: <span class=\"number\">4000.00</span></span><br><span class=\"line\">Hypervisor vendor: KVM <span class=\"comment\">// 虚拟化类型</span></span><br><span class=\"line\">Virtualization type: full <span class=\"comment\">// 全虚拟化</span></span><br><span class=\"line\">L1d cache: <span class=\"number\">32</span>K</span><br><span class=\"line\">L1i cache: <span class=\"number\">32</span>K</span><br><span class=\"line\">L2 cache: <span class=\"number\">256</span>K</span><br><span class=\"line\">L3 cache: <span class=\"number\">3072</span>K</span><br><span class=\"line\">NUMA node0 <span class=\"built_in\">CPU</span>(s): <span class=\"number\">0</span>,<span class=\"number\">1</span></span><br><span class=\"line\">............</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"58-taskset指定进程的CPU亲和性-​\"><a href=\"#58-taskset指定进程的CPU亲和性-​\" class=\"headerlink\" title=\"58. taskset指定进程的CPU亲和性 ​\"></a>58. taskset指定进程的CPU亲和性 <a href=\"#_58-taskset%E6%8C%87%E5%AE%9A%E8%BF%9B%E7%A8%8B%E7%9A%84cpu%E4%BA%B2%E5%92%8C%E6%80%A7\">​</a></h2><p>返回的mask为十六进制, 3 代表 0x11 即绑定在cpu 0 和 1 上面. 最低位代表第一个cpu<br>taskset -p pid 返回pid对应进程当前的亲和性</p>\n<p>bash</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ taskset -p <span class=\"number\">691</span></span><br><span class=\"line\">pid <span class=\"number\">691</span><span class=\"symbol\">&#x27;s</span> current affinity mask: <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<p><code>taskset -p mask pid</code>设置进程的cpu亲和性<br>也可以使用数字代替mask, 比如 <code>taskset -c 0,1 -p 1</code> 表示为pid为1的进程绑定cpu0和1</p>\n<p><code>taskset 1 ls</code> 执行ls命令是直接绑定到cpu0上.</p>\n<p><code>/proc/[pid]/status</code>也可以查询, 举例:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Cpus_allowed: 3<br>Cpus_allowed_list: 0-1<br>解释:<br>Cpus_allowed:3指出该进程可以使用CPU的亲和性掩码,因为我们指定为两块CPU,所以这里就是3,如果该进程指定为4个CPU(如果有话),这里就是F(1111).<br>Cpus_allowed_list:0-1指出该进程可以使用CPU的列表,这里是0-1.</p></blockquote>\n<p>进程运行时设置的亲和性并不影响其他线程, 如果要对java这样的多线程设置, 需要ps -efL 找到所有线程, 然后逐一设置<br><code>taskset 1 java</code>启动java命令时的绑定, 会应用到所有线程, 因为cpu的亲和性具有继承性</p>\n<h2 id=\"59-Linux系统最大文件数量-​\"><a href=\"#59-Linux系统最大文件数量-​\" class=\"headerlink\" title=\"59. Linux系统最大文件数量 ​\"></a>59. Linux系统最大文件数量 <a href=\"#_59-linux%E7%B3%BB%E7%BB%9F%E6%9C%80%E5%A4%A7%E6%96%87%E4%BB%B6%E6%95%B0%E9%87%8F\">​</a></h2><p><code>ulimit -n</code>返回当前user单进程可打开的最大进程数<br><code>/proc/[pid]/limits</code> 查询该进程的资源限制数据<br><code>ls -rlt /proc/[pid]/fd | wc -l</code> 查询该进程当前已打开的文件数<br><code>lsof -p [pid] | wc -l</code> 也可查询, 但要过滤掉cwd, 动态库等<br><code>ulimit -n unlimited</code>是无效的, 进程级的文件句柄不支持<code>unlimited</code>, 最大值为 <code>/proc/sys/fs/nr_open</code>, 该值默认为1048576.</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ulimit -n 1048577</span></span><br><span class=\"line\">-bash: <span class=\"built_in\">ulimit</span>: op]en files: cannot modify <span class=\"built_in\">limit</span>: Operation not permitted</span><br><span class=\"line\"><span class=\"comment\"># ulimit -n unlimited</span></span><br><span class=\"line\">-bash: <span class=\"built_in\">ulimit</span>: open files: cannot modify <span class=\"built_in\">limit</span>: Operation not permitted</span><br><span class=\"line\"><span class=\"comment\"># cat /proc/sys/fs/nr_open</span></span><br><span class=\"line\">1048576</span><br></pre></td></tr></table></figure>\n\n<p>在centos7上<code>nr_open</code>的最大值可调整为2147483584</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># sysctl -w fs.nr_open=2147483585</span></span><br><span class=\"line\"><span class=\"attribute\">sysctl</span>: setting key <span class=\"string\">&quot;fs.nr_open&quot;</span>: Invalid argument</span><br><span class=\"line\"><span class=\"attribute\">fs</span>.nr_open = <span class=\"number\">2147483585</span></span><br><span class=\"line\"><span class=\"comment\"># sysctl -w fs.nr_open=2147483584</span></span><br><span class=\"line\"><span class=\"attribute\">fs</span>.nr_open = <span class=\"number\">2147483584</span></span><br></pre></td></tr></table></figure>\n\n<p>查询整个OS当前的文件数使用情况:<br>file-max显示所有进程的最大文件数, 可通过<code>echo 100000 &gt; /proc/sys/fs/file-max</code>提高</p>\n<p>bash</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">$</span> cat /proc/sys/fs/<span class=\"keyword\">file</span>-<span class=\"built_in\">max</span></span><br><span class=\"line\"><span class=\"number\">97703</span></span><br></pre></td></tr></table></figure>\n\n<p>file-nr是只读的, 第一个字段代表已分配(即已打开)文件数, 第二个字段从2.6开始一直为0, 第三个字段等于file-max</p>\n<p>bash</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat <span class=\"regexp\">/proc/</span>sys<span class=\"regexp\">/fs/</span><span class=\"keyword\">file</span>-nr</span><br><span class=\"line\"><span class=\"number\">1344</span> <span class=\"number\">0</span> <span class=\"number\">97703</span></span><br></pre></td></tr></table></figure>\n\n<p>列出每个进程的已打开的文件数, 用于找到当前哪个进程占用最多文件数<br><code>-d</code> 用于排除cwd, 动态库之类的信息<br><code>-n</code> 不用协议解析, 加快命令运行速度<br><code>lsof -n -d0-999999 | awk &#39;&#123;print $2&#125;&#39; | sort | uniq -c | sort -k1 -n</code></p>\n<h2 id=\"60-ss-查询socket连接信息-​\"><a href=\"#60-ss-查询socket连接信息-​\" class=\"headerlink\" title=\"60. ss 查询socket连接信息 ​\"></a>60. ss 查询socket连接信息 <a href=\"#_60-ss-%E6%9F%A5%E8%AF%A2socket%E8%BF%9E%E6%8E%A5%E4%BF%A1%E6%81%AF\">​</a></h2><p>类似于<code>netstat</code>, 使用了netlink, 性能更好</p>\n<p>bash</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ss -s <span class=\"comment\">#显示各socket的统计信息</span></span><br><span class=\"line\">ss -ntlp <span class=\"comment\">#-n 不解析, -t 显示tcp连接  -l 显示监听socket, -p 显示使用的进程名</span></span><br><span class=\"line\">ss -t -<span class=\"keyword\">a</span> <span class=\"comment\">#查看所有tcp连接, 不带-a则指显示 Established 连接</span></span><br><span class=\"line\">ss -<span class=\"built_in\">to</span> <span class=\"comment\">#查看tcp的keepalive信息</span></span><br><span class=\"line\">ss -ti <span class=\"comment\">#查看tcp的内部信息,比如拥塞算法,rto,rtt,cwnd,ssthresh等</span></span><br><span class=\"line\">ss -tm <span class=\"comment\">#查看tcp的内存使用信息, 比如收发缓冲区的大小</span></span><br></pre></td></tr></table></figure>\n\n<p>还有一些高级的过滤用法</p>\n<p>bash</p>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ss -A raw,packet_raw -a -p <span class=\"comment\">#查看raw socket的信息</span></span><br><span class=\"line\">ss -tn <span class=\"keyword\">state</span> listening <span class=\"comment\">#显示处于listening状态的连接</span></span><br><span class=\"line\">ss -tn <span class=\"keyword\">state</span> established <span class=\"comment\">#显示处于established状态的连接</span></span><br><span class=\"line\">ss -tn <span class=\"keyword\">state</span> listening &#x27;( sport == <span class=\"number\">22</span> )&#x27; <span class=\"comment\">#显示处于listening状态且源端口为22的连接</span></span><br><span class=\"line\">ss -tn &#x27;( sport == <span class=\"number\">22</span> )&#x27; <span class=\"comment\">#显示源端口为22的连接</span></span><br><span class=\"line\">ss -tn &#x27;( sport != <span class=\"number\">22</span> )&#x27; <span class=\"comment\">#显示源端口不为22的连接</span></span><br><span class=\"line\">ss -tn &#x27;( sport == <span class=\"number\">22</span> || dport == <span class=\"number\">22</span> )&#x27; <span class=\"comment\">#显示源端口为22或者目标端口为22的连接</span></span><br><span class=\"line\">ss -tn &#x27;( dst <span class=\"number\">10.211</span>.<span class=\"number\">55.2</span> &amp;&amp; dport == <span class=\"number\">58181</span> )&#x27; <span class=\"comment\">#显示目标ip为10.211.55.2且目标端口为58181的连接</span></span><br><span class=\"line\">ss -tn &#x27;( src <span class=\"number\">127.0</span>.<span class=\"number\">0.1</span> )&#x27; <span class=\"comment\">#显示源ip为 127.0.0.1的连接</span></span><br><span class=\"line\">ss -tn &#x27;( ! dst <span class=\"number\">10.211</span>.<span class=\"number\">55.2</span> &amp;&amp; dport != <span class=\"number\">58181</span> )&#x27; <span class=\"comment\">#显示目标ip不是10.211.55.2且目标端口不是58181的连接</span></span><br></pre></td></tr></table></figure>\n\n<p>state后面支持的TCP状态如下:</p>\n<p>c</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"built_in\">char</span> * <span class=\"keyword\">const</span> sstate_namel[] = &#123;</span><br><span class=\"line\"><span class=\"string\">&quot;UNKNOWN&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_ESTABLISHED</span>] = <span class=\"string\">&quot;established&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_SYN_SENT</span>] = <span class=\"string\">&quot;syn-sent&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_SYN_RECV</span>] = <span class=\"string\">&quot;syn-recv&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_FIN_WAIT1</span>] = <span class=\"string\">&quot;fin-wait-1&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_FIN_WAIT2</span>] = <span class=\"string\">&quot;fin-wait-2&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_TIME_WAIT</span>] = <span class=\"string\">&quot;time-wait&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_CLOSE</span>] = <span class=\"string\">&quot;unconnected&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_CLOSE_WAIT</span>] = <span class=\"string\">&quot;close-wait&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_LAST_ACK</span>] = <span class=\"string\">&quot;last-ack&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_LISTEN</span>] = <span class=\"string\">&quot;listening&quot;</span>,</span><br><span class=\"line\">[<span class=\"meta\">SS_CLOSING</span>] = <span class=\"string\">&quot;closing&quot;</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>更多使用介绍请参考:<br><a href=\"https://www.cyberciti.biz/tips/linux-investigate-sockets-network-connections.html\">https://www.cyberciti.biz/tips/linux-investigate-sockets-network-connections.html</a><br><a href=\"https://man7.org/linux/man-pages/man8/ss.8.html\">https://man7.org/linux/man-pages/man8/ss.8.html</a><br><a href=\"https://github.com/shemminger/iproute2/blob/main/misc/ssfilter.y\">https://github.com/shemminger/iproute2/blob/main/misc/ssfilter.y</a></p>\n<h2 id=\"61-消除用户被锁的错误登录记录-​\"><a href=\"#61-消除用户被锁的错误登录记录-​\" class=\"headerlink\" title=\"61. 消除用户被锁的错误登录记录 ​\"></a>61. 消除用户被锁的错误登录记录 <a href=\"#_61-%E6%B6%88%E9%99%A4%E7%94%A8%E6%88%B7%E8%A2%AB%E9%94%81%E7%9A%84%E9%94%99%E8%AF%AF%E7%99%BB%E5%BD%95%E8%AE%B0%E5%BD%95\">​</a></h2><p>通常管理员会配置pam_faillock或者pam_tally2, 当用户使用错误密码满足一定条件, 就将用户锁定一段时间. 如下是即时清除错误记录的命令</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">faillock <span class=\"attr\">--reset</span></span><br><span class=\"line\">pam_tally2 -r -u <span class=\"selector-attr\">[username]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"62-估计RSS总和的大小-​\"><a href=\"#62-估计RSS总和的大小-​\" class=\"headerlink\" title=\"62. 估计RSS总和的大小 ​\"></a>62. 估计RSS总和的大小 <a href=\"#_62-%E4%BC%B0%E8%AE%A1rss%E6%80%BB%E5%92%8C%E7%9A%84%E5%A4%A7%E5%B0%8F\">​</a></h2><p>bash</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux | <span class=\"type\">awk</span> &#x27;&#123;<span class=\"built_in\">sum</span>+=$<span class=\"number\">6</span>&#125; END &#123;print <span class=\"built_in\">sum</span> / <span class=\"number\">1024</span>&#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>如下脚本也可以:</p>\n<p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> rss.sh</span><br><span class=\"line\"><span class=\"comment\">#/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> PROC <span class=\"keyword\">in</span> `<span class=\"built_in\">ls</span> /proc/|grep <span class=\"string\">&quot;^[0-9]&quot;</span>`</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\"> <span class=\"keyword\">if</span> [ -f /proc/<span class=\"variable\">$PROC</span>/statm ]; <span class=\"keyword\">then</span></span><br><span class=\"line\"> TEP=`<span class=\"built_in\">cat</span> /proc/<span class=\"variable\">$PROC</span>/statm | awk <span class=\"string\">&#x27;&#123;print ($2)&#125;&#x27;</span>`</span><br><span class=\"line\"> RSS=`<span class=\"built_in\">expr</span> <span class=\"variable\">$RSS</span> + <span class=\"variable\">$TEP</span>`</span><br><span class=\"line\"> <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">RSS=`<span class=\"built_in\">expr</span> <span class=\"variable\">$RSS</span> \\* 4`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$RSS</span><span class=\"string\">&quot;KB&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"63-文件系统修复-​\"><a href=\"#63-文件系统修复-​\" class=\"headerlink\" title=\"63. 文件系统修复 ​\"></a>63. 文件系统修复 <a href=\"#_63-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BF%AE%E5%A4%8D\">​</a></h2><p>针对xfs, 使用<code>xfs_repair</code>命令:<br><code>-n</code> 表示不修复, 只扫描并显示错误</p>\n<p>bash</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xfs_repair -n -v /dev/mapper/vg-home</span><br></pre></td></tr></table></figure>\n\n<p>不带<code>-n</code>, 执行修复. <code>-v</code>表示显示详情</p>\n<p>bash</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xfs_repair -v /dev/mapper/vg-home</span><br></pre></td></tr></table></figure>\n\n<p>最后方法：损失部分数据的修复方法<br>根据打印消息，修复失败时：<br>先执行xfs_repair -L &#x2F;dev&#x2F;sdd(清空日志，会丢失文件)，再执行xfs_repair &#x2F;dev&#x2F;sdd，再执行xfs_check &#x2F;dev&#x2F;sdd 检查文件系统是否修复成功。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>-L是修复xfs文件系统的最后手段，慎重选择，它会清空日志，会丢失用户数据和文件。</p></blockquote>\n<h2 id=\"64-非交互式修改密码-​\"><a href=\"#64-非交互式修改密码-​\" class=\"headerlink\" title=\"64. 非交互式修改密码 ​\"></a>64. 非交互式修改密码 <a href=\"#_64-%E9%9D%9E%E4%BA%A4%E4%BA%92%E5%BC%8F%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81\">​</a></h2><p>bash</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;Linux@123&quot;</span> |passwd <span class=\"params\">--stdin</span> root</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"66-udev管理-​\"><a href=\"#66-udev管理-​\" class=\"headerlink\" title=\"66. udev管理 ​\"></a>66. udev管理 <a href=\"#_66-udev%E7%AE%A1%E7%90%86\">​</a></h2><p>查询设备的信息, 主要是环境变量</p>\n<p>bash</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">udevadm info /dev/sda1</span><br><span class=\"line\">P: /devices/pci0000:<span class=\"number\">00</span>/<span class=\"number\">0000</span>:<span class=\"number\">00</span>:1f<span class=\"number\">.2</span>/ata1/host0/target0:<span class=\"number\">0</span>:<span class=\"number\">0</span>/<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>/<span class=\"built_in\">block</span>/sda/sda1</span><br><span class=\"line\">N: sda1</span><br><span class=\"line\">S: disk/by-id/ata-CentOS_Linux-0_SSD_FFACPKN8NC9MK3EX3N4R-part1</span><br><span class=\"line\">S: disk/by-uuid/5de1c8df-<span class=\"number\">9b03</span>-<span class=\"number\">4830</span>-<span class=\"number\">9b56</span>-b96a2290b78f</span><br><span class=\"line\">E: DEVLINKS=/dev/disk/by-id/ata-CentOS_Linux-0_SSD_FFACPKN8NC9MK3EX3N4R-part1 /dev/disk/by-uuid/5de1c8df-<span class=\"number\">9b03</span>-<span class=\"number\">4830</span>-<span class=\"number\">9b56</span>-b96a2290b78f</span><br><span class=\"line\">E: DEVNAME=/dev/sda1</span><br><span class=\"line\">E: DEVPATH=/devices/pci0000:<span class=\"number\">00</span>/<span class=\"number\">0000</span>:<span class=\"number\">00</span>:1f<span class=\"number\">.2</span>/ata1/host0/target0:<span class=\"number\">0</span>:<span class=\"number\">0</span>/<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>/<span class=\"built_in\">block</span>/sda/sda1</span><br><span class=\"line\">E: DEVTYPE=<span class=\"built_in\">partition</span></span><br><span class=\"line\">E: ID_ATA=<span class=\"number\">1</span></span><br><span class=\"line\">E: ID_ATA_ROTATION_RATE_RPM=<span class=\"number\">0</span></span><br><span class=\"line\">E: ID_ATA_SATA=<span class=\"number\">1</span></span><br><span class=\"line\">E: ID_ATA_SATA_SIGNAL_RATE_GEN1=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>加参数<code>-a</code>, 主要是设备的属性.</p>\n<p>bash</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">udevadm info -a /dev/sda1</span><br><span class=\"line\">P: /devices/pci0000:<span class=\"number\">00</span>/<span class=\"number\">0000</span>:<span class=\"number\">00</span>:1f<span class=\"number\">.2</span>/ata1/host0/target0:<span class=\"number\">0</span>:<span class=\"number\">0</span>/<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>/<span class=\"built_in\">block</span>/sda/sda1</span><br><span class=\"line\">N: sda1</span><br><span class=\"line\">S: disk/by-id/ata-CentOS_Linux-0_SSD_FFACPKN8NC9MK3EX3N4R-part1</span><br><span class=\"line\">S: disk/by-uuid/5de1c8df-<span class=\"number\">9b03</span>-<span class=\"number\">4830</span>-<span class=\"number\">9b56</span>-b96a2290b78f</span><br><span class=\"line\">E: DEVLINKS=/dev/disk/by-id/ata-CentOS_Linux-0_SSD_FFACPKN8NC9MK3EX3N4R-part1 /dev/disk/by-uuid/5de1c8df-<span class=\"number\">9b03</span>-<span class=\"number\">4830</span>-<span class=\"number\">9b56</span>-b96a2290b78f</span><br><span class=\"line\">E: DEVNAME=/dev/sda1</span><br><span class=\"line\">E: DEVPATH=/devices/pci0000:<span class=\"number\">00</span>/<span class=\"number\">0000</span>:<span class=\"number\">00</span>:1f<span class=\"number\">.2</span>/ata1/host0/target0:<span class=\"number\">0</span>:<span class=\"number\">0</span>/<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>:<span class=\"number\">0</span>/<span class=\"built_in\">block</span>/sda/sda1</span><br><span class=\"line\">E: DEVTYPE=<span class=\"built_in\">partition</span></span><br><span class=\"line\">E: ID_ATA=<span class=\"number\">1</span></span><br><span class=\"line\">E: ID_ATA_ROTATION_RATE_RPM=<span class=\"number\">0</span></span><br><span class=\"line\">E: ID_ATA_SATA=<span class=\"number\">1</span></span><br><span class=\"line\">E: ID_ATA_SATA_SIGNAL_RATE_GEN1=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p><code>udevadmin monitor</code>用于实时监控udev实践,定位热插拔设备时特别有用.<br><code>udevadmin test xxxx</code>用于测试匹配设备的规则执行动作.<br>xxx可以是<code>/sys/class/block/sda</code>,<code>/sys/class/net/eth0</code>, 也可以是<code>/sys/devices</code>下面的设备</p>\n<p>修改<code>/etc/udev/udev.conf</code>里的<code>udev_log=&quot;debug&quot;</code>可以打开更详细的日志<br>使用<code>journalctl -u systemd-udevd</code>查看</p>\n<h2 id=\"67-一条命令启动web服务器-​\"><a href=\"#67-一条命令启动web服务器-​\" class=\"headerlink\" title=\"67. 一条命令启动web服务器 ​\"></a>67. 一条命令启动web服务器 <a href=\"#_67-%E4%B8%80%E6%9D%A1%E5%91%BD%E4%BB%A4%E5%90%AF%E5%8A%A8web%E6%9C%8D%E5%8A%A1%E5%99%A8\">​</a></h2><p>查询设备的信息, 主要是环境变量</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">python</span> -m SimpleHTTPServer <span class=\"number\">8000</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"68-dpkg-apt-get包管理命令-​\"><a href=\"#68-dpkg-apt-get包管理命令-​\" class=\"headerlink\" title=\"68. dpkg,apt-get包管理命令 ​\"></a>68. dpkg,apt-get包管理命令 <a href=\"#_68-dpkg-apt-get%E5%8C%85%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4\">​</a></h2><p>查询所有包</p>\n<p>查询某个文件属于哪个包</p>\n<p>bash</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ dpkg -S <span class=\"regexp\">/usr/</span>bin/growpart</span><br><span class=\"line\">cloud-guest-utils: <span class=\"regexp\">/usr/</span>bin/growpart</span><br></pre></td></tr></table></figure>\n\n<p>查询使用apt-get安装的历史记录</p>\n<p>bash</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"keyword\">cat</span> /<span class=\"keyword\">var</span>/<span class=\"keyword\">log</span>/apt/history.<span class=\"keyword\">log</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"69-主机安全入侵盘查-​\"><a href=\"#69-主机安全入侵盘查-​\" class=\"headerlink\" title=\"69. 主机安全入侵盘查 ​\"></a>69. 主机安全入侵盘查 <a href=\"#_69-%E4%B8%BB%E6%9C%BA%E5%AE%89%E5%85%A8%E5%85%A5%E4%BE%B5%E7%9B%98%E6%9F%A5\">​</a></h2><p>检查<code>LD_PRELOAD</code>环境变量<br>使用<code>vi</code>打开<code>/etc/ld.so.preload</code>这个文件是否有内容<br>使用<code>cat /proc/$$/mountinfo</code> 或者<code>cat /proc/mounts</code> 看<code>proc</code> 是否被挂载到其他目录<br>使用<code>strace</code>检查普通命令的系统调用<br>如下个三个安全相关的分析案例:<br><a href=\"https://www.anquanke.com/post/id/160843\">https://www.anquanke.com/post/id/160843</a><br><a href=\"https://superuser.com/questions/1183037/what-is-does-ld-so-preload-do\">https://superuser.com/questions/1183037/what-is-does-ld-so-preload-do</a><br><a href=\"https://www.jianshu.com/p/31e487daa79d\">https://www.jianshu.com/p/31e487daa79d</a></p>\n<h2 id=\"70-top命令-​\"><a href=\"#70-top命令-​\" class=\"headerlink\" title=\"70. top命令 ​\"></a>70. top命令 <a href=\"#_70-top%E5%91%BD%E4%BB%A4\">​</a></h2><p>top默认3秒刷新一次信息, 导致一些即时启动并结束的进程无法观察到, 可以用如下参数指定间隔:</p>\n<p>上面是以100ms为间隔, 也可进入交互模式后按<code>d</code>进行动态调整<br>交互模式下按<code>1</code>显示每个cpu的使用率信息, 按<code>M</code> 进程按内存排序, 按<code>H</code>显示线程信息</p>\n<p>top进程级的默认字段如果不够, 可以按<code>f</code>选择要显示的字段,比如<code>last cpu used</code>, 然后按<code>q</code>返回显示<br><code>f</code>后不仅可以增加,删除,调整字段顺序, 还可以按<code>s</code>将当前选中的字段作为排序的字段. 比如按内存排序<br>如果要过滤进程, 比如只显示cmdline 包含字符abc的进程, 按<code>o</code>后输入<code>COMMAND=abc</code>, 碰到java这种进程, 可以按<code>c</code>显示完整的命令行</p>\n<p>查看单个进程的所有线程信息, 对java程序特别有用</p>\n<p>bash</p>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ top -Hp 4592</span><br><span class=\"line\">Threads:<span class=\"number\"> 11 </span>total,<span class=\"number\"> 0 </span>running,<span class=\"number\"> 11 </span>sleeping,<span class=\"number\"> 0 </span>stopped,<span class=\"number\"> 0 </span>zombie</span><br><span class=\"line\">%Cpu(s):  0.0 us,  0.0 sy,  0.0 ni, 98.4 id,  0.0 wa,  1.6 hi,  0.0 si,  0.0 st</span><br><span class=\"line\">MiB Mem : 7809.8 total, 5711.5 free, 910.8 used, 1187.6 buff/cache</span><br><span class=\"line\">MiB Swap: 0.0 total, 0.0 free, 0.0 used. 6748.4 avail Mem</span><br><span class=\"line\"> PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND</span><br><span class=\"line\"><span class=\"number\"> 4592 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:06.87 gopls</span><br><span class=\"line\"><span class=\"number\"> 4593 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:06.01 gopls</span><br><span class=\"line\"><span class=\"number\"> 4594 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:00.68 gopls</span><br><span class=\"line\"><span class=\"number\"> 4595 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:07.53 gopls</span><br><span class=\"line\"><span class=\"number\"> 4596 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:00.58 gopls</span><br><span class=\"line\"><span class=\"number\"> 4597 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:00.00 gopls</span><br><span class=\"line\"><span class=\"number\"> 4598 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:06.96 gopls</span><br><span class=\"line\"><span class=\"number\"> 4605 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:06.64 gopls</span><br><span class=\"line\"><span class=\"number\"> 4644 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:06.70 gopls</span><br><span class=\"line\"><span class=\"number\"> 4647 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:00.01 gopls</span><br><span class=\"line\"><span class=\"number\"> 4818 </span>root<span class=\"number\"> 20 </span>0<span class=\"number\"> 1810424 </span>372332<span class=\"number\"> 14820 </span>S 0.0 4.7 0:00.27 gopls</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"71-ping命令-​\"><a href=\"#71-ping命令-​\" class=\"headerlink\" title=\"71. ping命令 ​\"></a>71. ping命令 <a href=\"#_71-ping%E5%91%BD%E4%BB%A4\">​</a></h2><p><code>-i</code>指定两次ping之前的间隔, 默认是1s</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ping</span> -i <span class=\"number\">0</span>.<span class=\"number\">1</span> www.<span class=\"number\">163</span>.com</span><br></pre></td></tr></table></figure>\n\n<p><code>-s</code>指定ping包的大小, 默认是64bytes</p>\n<p>bash</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$<span class=\"built_in\"> ping </span>-s 1024 www.163.com<span class=\"built_in\"></span></span><br><span class=\"line\"><span class=\"built_in\">PING </span>z163ipv6.v.bsgslb.cn (117.23.1.15) 1024(1052) bytes of data.</span><br><span class=\"line\">1032 bytes <span class=\"keyword\">from</span> 117.23.1.15: <span class=\"attribute\">icmp_seq</span>=1 <span class=\"attribute\">ttl</span>=128 <span class=\"attribute\">time</span>=7.03 ms</span><br><span class=\"line\">1032 bytes <span class=\"keyword\">from</span> 117.23.1.15: <span class=\"attribute\">icmp_seq</span>=2 <span class=\"attribute\">ttl</span>=128 <span class=\"attribute\">time</span>=7.77 ms</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"72-ping和curl常见的网络报错-​\"><a href=\"#72-ping和curl常见的网络报错-​\" class=\"headerlink\" title=\"72. ping和curl常见的网络报错 ​\"></a>72. ping和curl常见的网络报错 <a href=\"#_72-ping%E5%92%8Ccurl%E5%B8%B8%E8%A7%81%E7%9A%84%E7%BD%91%E7%BB%9C%E6%8A%A5%E9%94%99\">​</a></h2><p>ping ip 报错：<br><code>connect: Network is unreachable</code> 原因是OS里没有相关路由导致<br><code>From 192.168.100.1 icmp_seq=1 Destination Port Unreachable</code> 原因是收到icmp reponse, 端口不可达， 中间设备或者iptable reject</p>\n<p>cur ip 一些报错:<br><code>curl: (7) Failed to connect to 114.114.114.114: Network is unreachable</code> 原因是OS里没有相关路由导致 很快返回<code>curl: (7) Failed connect to 114.114.114.114:80; Connection refused</code> 因为Curl收到icmp 应答消息 80端口不可达， 可能是中间设备iptable发送或者收到服务端rst消息， 80端口没有处于监听状态</p>\n<h2 id=\"73-一些常用的内存统计命令-​\"><a href=\"#73-一些常用的内存统计命令-​\" class=\"headerlink\" title=\"73. 一些常用的内存统计命令 ​\"></a>73. 一些常用的内存统计命令 <a href=\"#_73-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%86%85%E5%AD%98%E7%BB%9F%E8%AE%A1%E5%91%BD%E4%BB%A4\">​</a></h2><p>统计所有进程占用的物理内存</p>\n<p>bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使用 grep 查找 Pss 指标后，再用 awk 计算累加值</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">grep Pss /proc/[1-9]*/smaps | awk <span class=\"string\">&#x27;&#123;total+=$2&#125;; END &#123;printf &quot;%d kB\\n&quot;, total &#125;&#x27;</span></span></span><br><span class=\"line\">391266 kB</span><br></pre></td></tr></table></figure>\n\n<p>有时smaps文件会看到没有读写权限的内存段,但有p这个权限,即是内存,往往发生在libc这样的共享库和java程序.<br>如下文章解释了具体的目的, java程序的情况下经常占用了很大的内存, 只要是为了预留一段连续的内存快<br>这些内存是不会计算到<code>Rss</code>或者<code>Pss</code>里面, 但却实实在在占用了内存.<br><a href=\"https://unix.stackexchange.com/questions/226283/shared-library-mappings-in-proc-pid-maps\">https://unix.stackexchange.com/questions/226283/shared-library-mappings-in-proc-pid-maps</a><br><a href=\"https://unix.stackexchange.com/questions/353676/what-is-the-purpose-of-seemingly-unusable-memory-mappings-in-linux/353685#353685\">https://unix.stackexchange.com/questions/353676/what-is-the-purpose-of-seemingly-unusable-memory-mappings-in-linux/353685#353685</a></p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">7fae7db9f000</span>-<span class=\"number\">7</span>fae7dc8f000 r-xp <span class=\"number\">00000000</span> <span class=\"number\">08</span>:<span class=\"number\">05</span> <span class=\"number\">536861</span> /usr/lib/x86_64-linux-gnu/libstdc++.so.<span class=\"number\">6</span>.<span class=\"number\">0</span>.<span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"attribute\">7fae7dc8f000</span>-<span class=\"number\">7</span>fae7de8f000 ---p <span class=\"number\">000</span>f0000 <span class=\"number\">08</span>:<span class=\"number\">05</span> <span class=\"number\">536861</span> /usr/lib/x86_64-linux-gnu/libstdc++.so.<span class=\"number\">6</span>.<span class=\"number\">0</span>.<span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"attribute\">7fae7de8f000</span>-<span class=\"number\">7</span>fae7de97000 r--p <span class=\"number\">000</span>f0000 <span class=\"number\">08</span>:<span class=\"number\">05</span> <span class=\"number\">536861</span> /usr/lib/x86_64-linux-gnu/libstdc++.so.<span class=\"number\">6</span>.<span class=\"number\">0</span>.<span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"attribute\">7fae7de97000</span>-<span class=\"number\">7</span>fae7de99000 rw-p <span class=\"number\">000</span>f8000 <span class=\"number\">08</span>:<span class=\"number\">05</span> <span class=\"number\">536861</span> /usr/lib/x86_64-linux-gnu/libstdc++.so.<span class=\"number\">6</span>.<span class=\"number\">0</span>.<span class=\"number\">20</span></span><br></pre></td></tr></table></figure>\n\n<p>这篇文章详细地介绍了<code>/proc/meminfo</code>里的每一个字段的含义和一些有用的公式.<br><a href=\"http://linuxperf.com/?p=142\">http://linuxperf.com/?p=142</a></p>\n<h2 id=\"74-不同OS的文件编码-​\"><a href=\"#74-不同OS的文件编码-​\" class=\"headerlink\" title=\"74. 不同OS的文件编码 ​\"></a>74. 不同OS的文件编码 <a href=\"#_74-%E4%B8%8D%E5%90%8Cos%E7%9A%84%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81\">​</a></h2><p>linux显示文件内容的编码方式</p>\n<p>bash</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ file -i <span class=\"built_in\">old</span>.txt</span><br><span class=\"line\"><span class=\"built_in\">old</span>.txt: <span class=\"type\">text</span>/plain; charset=us-ascii</span><br></pre></td></tr></table></figure>\n\n<p>将文件abc.txt 编����方式从iso8859-1改为utf-8</p>\n<p>bash</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">iconv</span> -<span class=\"keyword\">f</span> iso8859-<span class=\"number\">1</span> -t utf-<span class=\"number\">8</span> <span class=\"keyword\">abc</span>.txt &gt; <span class=\"keyword\">abc</span>.txt.utf8</span><br></pre></td></tr></table></figure>\n\n<p>讲当前文件夹所有文件的文件名编码从GBK改为UTF-8, <code>-r</code>表示递归所有子文件夹</p>\n<p>bash</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">convmv -f GBk -t UTF-<span class=\"number\">8</span> <span class=\"comment\">--notest -r *，这</span></span><br></pre></td></tr></table></figure>\n\n<p>参考: <a href=\"http://kuring.me/post/windows_linux_code/\">http://kuring.me/post/windows_linux_code&#x2F;</a></p>\n<h2 id=\"75-一些shell循环命令-​\"><a href=\"#75-一些shell循环命令-​\" class=\"headerlink\" title=\"75. 一些shell循环命令 ​\"></a>75. 一些shell循环命令 <a href=\"#_75-%E4%B8%80%E4%BA%9Bshell%E5%BE%AA%E7%8E%AF%E5%91%BD%E4%BB%A4\">​</a></h2><p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">true</span>; <span class=\"keyword\">do</span> <span class=\"built_in\">cat</span> /proc/stat | grep <span class=\"string\">&quot;cpu &quot;</span> ; <span class=\"built_in\">sleep</span> 30; <span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> &#123;1..1000&#125;; <span class=\"keyword\">do</span> <span class=\"built_in\">touch</span> a<span class=\"variable\">$n</span>; <span class=\"built_in\">rm</span> -rf a<span class=\"variable\">$n</span>; <span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> $(<span class=\"built_in\">ls</span> -1 /proc/[1-9]*/status); <span class=\"keyword\">do</span> grep Name <span class=\"variable\">$file</span>; <span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"76-dhcp持续请求配置-​\"><a href=\"#76-dhcp持续请求配置-​\" class=\"headerlink\" title=\"76. dhcp持续请求配置 ​\"></a>76. dhcp持续请求配置 <a href=\"#_76-dhcp%E6%8C%81%E7%BB%AD%E8%AF%B7%E6%B1%82%E9%85%8D%E7%BD%AE\">​</a></h2><p>Network管理时, 如果要在dhcp获取ip失败后不断重试,则在<code>ifcfg-ethX</code>文件里增加<code>PERSISTENT_DHCLIENT=yes</code><br>默认是1分钟后超时, 不重试,日志打印<code>no dhcpoffers received</code><br>如果加参数, 1分钟超时, 然后一个随机的时间间隔后再次重试. 一直重试到成功获取ip,日志打印如下:</p>\n<p>bash</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">no</span> dhcpoffers received</span><br><span class=\"line\"><span class=\"keyword\">no</span> working leases <span class=\"keyword\">in</span> persistent <span class=\"keyword\">database</span> - sleeping</span><br></pre></td></tr></table></figure>\n\n<p>如果底层网卡有down, up动作, dhcp进程还在, 只显示一条报错信息<code>receive_packet failed on eth0: Network is down</code><br>当通过dhcp获取ip失败后, 如果配置了持续获取, 那么下次发起请求的时间间隔是个随机值,大致为150s~450s之间.<br>具体的代码如下, <code>retry_interval</code>默认是300s,且不可调整<br><a href=\"https://github.com/42wim/isc-dhcp/blob/f54a146c7fe88889d60f0c1aa8e6f04707f95223/client/dhclient.c\">https://github.com/42wim/isc-dhcp/blob/f54a146c7fe88889d60f0c1aa8e6f04707f95223/client/dhclient.c</a></p>\n<p>c</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log_info (<span class=\"string\">&quot;No working leases in persistent database - sleeping.&quot;</span>);</span><br><span class=\"line\">script_init(client, <span class=\"string\">&quot;FAIL&quot;</span>, (struct string_list *)<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">if</span> (client -&gt;</span> alias)</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">script_write_params</span>(client, &quot;alias_&quot;, client -&gt;</span> alias);</span><br><span class=\"line\">script_go(client);</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">client</span> -&gt;</span> state = S_INIT;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">tv</span>.tv_sec = cur_tv.tv_sec + ((client-&gt;</span><span class=\"function\"><span class=\"title\">config</span>-&gt;</span>retry_interval + <span class=\"number\">1</span>) / <span class=\"number\">2</span> +</span><br><span class=\"line\">(<span class=\"function\"><span class=\"title\">random</span>() % client-&gt;</span><span class=\"function\"><span class=\"title\">config</span>-&gt;</span>retry_interval));</span><br><span class=\"line\">tv.tv_usec = ((tv.tv_sec - cur_tv.tv_sec) &gt; <span class=\"number\">1</span>) ?</span><br><span class=\"line\">random() % <span class=\"number\">1000000</span> : cur_tv.tv_usec;</span><br><span class=\"line\">add_timeout(&amp;tv, state_init, client, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">detach ();</span><br></pre></td></tr></table></figure>\n\n<p>NetworkManager管理时, 两个方法配置持久化:<br>使用类似命令修改<code>nmcli connection modify enps1s0 ipv4.dhcp-timeout infinity</code><br>在<code>ifcfg-ethX</code>里增加<code>IPV4_DHCP_TIMEOUT=2147483647</code><br>参考 <a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/configuring_the_dhcp_client_behavior\">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux&#x2F;7&#x2F;html&#x2F;networking_guide&#x2F;configuring_the_dhcp_client_behavior</a></p>\n<h2 id=\"77-解析-x2F-proc-x2F-pid-x2F-status里关于信号的字段-​\"><a href=\"#77-解析-x2F-proc-x2F-pid-x2F-status里关于信号的字段-​\" class=\"headerlink\" title=\"77. 解析&#x2F;proc&#x2F;[pid]&#x2F;status里关于信号的字段 ​\"></a>77. 解析&#x2F;proc&#x2F;[pid]&#x2F;status里关于信号的字段 <a href=\"#_77-%E8%A7%A3%E6%9E%90-proc-pid-status%E9%87%8C%E5%85%B3%E4%BA%8E%E4%BF%A1%E5%8F%B7%E7%9A%84%E5%AD%97%E6%AE%B5\">​</a></h2><p>bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#read -p &quot;PID=&quot; pid</span></span><br><span class=\"line\">pid=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /proc/<span class=\"variable\">$pid</span>/status|egrep <span class=\"string\">&#x27;(Sig|Shd)(Pnd|Blk|Ign|Cgt)&#x27;</span>|<span class=\"keyword\">while</span> <span class=\"built_in\">read</span> name mask;<span class=\"keyword\">do</span></span><br><span class=\"line\"> bin=$(<span class=\"built_in\">echo</span> <span class=\"string\">&quot;ibase=16; obase=2; <span class=\"variable\">$&#123;mask^^*&#125;</span>&quot;</span>|bc)</span><br><span class=\"line\"> <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot;<span class=\"variable\">$name</span> <span class=\"variable\">$mask</span> <span class=\"variable\">$bin</span> &quot;</span></span><br><span class=\"line\"> i=1</span><br><span class=\"line\"> <span class=\"keyword\">while</span> [[ <span class=\"variable\">$bin</span> -ne 0 ]];<span class=\"keyword\">do</span></span><br><span class=\"line\"> <span class=\"keyword\">if</span> [[ <span class=\"variable\">$&#123;bin:(-1)&#125;</span> -eq 1 ]];<span class=\"keyword\">then</span></span><br><span class=\"line\"> <span class=\"built_in\">kill</span> -l <span class=\"variable\">$i</span> | <span class=\"built_in\">tr</span> <span class=\"string\">&#x27;\\n&#x27;</span> <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\"> <span class=\"keyword\">fi</span></span><br><span class=\"line\"> bin=<span class=\"variable\">$&#123;bin::-1&#125;</span></span><br><span class=\"line\"> <span class=\"built_in\">set</span> $((i++))</span><br><span class=\"line\"> <span class=\"keyword\">done</span></span><br><span class=\"line\"> <span class=\"built_in\">echo</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"comment\"># vim:et:sw=4:ts=4:sts=4:</span></span><br></pre></td></tr></table></figure>\n\n<p>参考链接: <a href=\"https://stackoverflow.com/questions/4155483/proc-pidstatus-sigign-field\">https://stackoverflow.com/questions/4155483/proc-pidstatus-sigign-field</a></p>\n<h2 id=\"78-审计谁杀了进程-​\"><a href=\"#78-审计谁杀了进程-​\" class=\"headerlink\" title=\"78. 审计谁杀了进程 ​\"></a>78. 审计谁杀了进程 <a href=\"#_78-%E5%AE%A1%E8%AE%A1%E8%B0%81%E6%9D%80%E4%BA%86%E8%BF%9B%E7%A8%8B\">​</a></h2><p>bash</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auditctl -a always,<span class=\"keyword\">exit</span> -F arch=b64 -F a1=<span class=\"number\">15</span> -S kill -k log_kill</span><br><span class=\"line\">auditctl -a always,<span class=\"keyword\">exit</span> -F arch=b64 -F a1=<span class=\"number\">9</span> -S kill -k log_kill</span><br></pre></td></tr></table></figure>\n\n<p>参考: <a href=\"https://jotdownux.wordpress.com/2016/01/23/whos-killing-that-process-whos-dumping-prelink-files-in-tmp-linux-auditd-to-the-rescue/\">https://jotdownux.wordpress.com/2016/01/23/whos-killing-that-process-whos-dumping-prelink-files-in-tmp-linux-auditd-to-the-rescue/</a></p>\n<h2 id=\"79-修改字符集的命令-​\"><a href=\"#79-修改字符集的命令-​\" class=\"headerlink\" title=\"79. 修改字符集的命令 ​\"></a>79. 修改字符集的命令 <a href=\"#_79-%E4%BF%AE%E6%94%B9%E5%AD%97%E7%AC%A6%E9%9B%86%E7%9A%84%E5%91%BD%E4%BB%A4\">​</a></h2><p>bash</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">localectl</span> <span class=\"built_in\">set-locale</span> <span class=\"string\">LANG</span>=<span class=\"string\">en_US</span>.<span class=\"string\">UTF-8</span></span><br><span class=\"line\"><span class=\"string\">localectl</span> <span class=\"built_in\">set-locale</span> <span class=\"string\">LANG</span>=<span class=\"string\">zh_CN</span>.<span class=\"string\">UTF-8</span></span><br><span class=\"line\"><span class=\"string\">localectl</span> <span class=\"built_in\">list-locales</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"80-bash脚本的退出码-​\"><a href=\"#80-bash脚本的退出码-​\" class=\"headerlink\" title=\"80. bash脚本的退出码 ​\"></a>80. bash脚本的退出码 <a href=\"#_80-bash%E8%84%9A%E6%9C%AC%E7%9A%84%E9%80%80%E5%87%BA%E7%A0%81\">​</a></h2><p>脚本退出码是有特殊含义的,比如常见的<code>127</code>代表脚本里的命令没找到,<code>130</code>代表用户按了<code>ctrl+c</code>导致脚本停止</p>\n<p>bash</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">$</span> abc</span><br><span class=\"line\">-bash: abc: command <span class=\"keyword\">not</span> found</span><br><span class=\"line\"><span class=\"symbol\">$</span> echo <span class=\"symbol\">$</span>?</span><br><span class=\"line\"><span class=\"number\">127</span></span><br><span class=\"line\"><span class=\"symbol\">$</span> <span class=\"built_in\">sleep</span> <span class=\"number\">1000</span></span><br><span class=\"line\">^C</span><br><span class=\"line\"><span class=\"symbol\">$</span> echo <span class=\"symbol\">$</span>?</span><br><span class=\"line\"><span class=\"number\">130</span></span><br></pre></td></tr></table></figure>\n\n<p>更详细的退出码含义请参见 <a href=\"https://tldp.org/LDP/abs/html/exitcodes.html\">https://tldp.org/LDP/abs/html/exitcodes.html</a></p>\n<h2 id=\"81-模拟不断增加内存致使触发oom的程序-​\"><a href=\"#81-模拟不断增加内存致使触发oom的程序-​\" class=\"headerlink\" title=\"81. 模拟不断增加内存致使触发oom的程序 ​\"></a>81. 模拟不断增加内存致使触发oom的程序 <a href=\"#_81-%E6%A8%A1%E6%8B%9F%E4%B8%8D%E6%96%AD%E5%A2%9E%E5%8A%A0%E5%86%85%E5%AD%98%E8%87%B4%E4%BD%BF%E8%A7%A6%E5%8F%91oom%E7%9A%84%E7%A8%8B%E5%BA%8F\">​</a></h2><p>c</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span> <span class=\"params\">(<span class=\"type\">void</span>)</span> </span>&#123; </span><br><span class=\"line\"><span class=\"type\">int</span> n = <span class=\"number\">0</span>; </span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123; </span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">malloc</span>(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">20</span>) == <span class=\"literal\">NULL</span>) &#123; </span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;malloc failure after %d MiB\\n&quot;</span>, n); </span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"built_in\">printf</span> (<span class=\"string\">&quot;got %d MiB\\n&quot;</span>, ++n); </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">$ gcc memtest1.c </span><br><span class=\"line\">$ ./a.out </span><br><span class=\"line\">got <span class=\"number\">570528</span> MiB </span><br><span class=\"line\">got <span class=\"number\">570529</span> MiB </span><br><span class=\"line\">got <span class=\"number\">570530</span> MiB </span><br><span class=\"line\">got <span class=\"number\">570531</span> MiBKilled</span><br></pre></td></tr></table></figure>\n\n<p>具体的详细测试步骤: <a href=\"https://access.redhat.com/solutions/47692\">https://access.redhat.com/solutions/47692</a></p>\n<h2 id=\"82-vi实现十六进制编辑功能-​\"><a href=\"#82-vi实现十六进制编辑功能-​\" class=\"headerlink\" title=\"82. vi实现十六进制编辑功能 ​\"></a>82. vi实现十六进制编辑功能 <a href=\"#_82-vi%E5%AE%9E%E7%8E%B0%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E7%BC%96%E8%BE%91%E5%8A%9F%E8%83%BD\">​</a></h2><p>vim配合xxd对文件进行十六进制的编辑,达到类似UltraEdit的效果</p>\n<p>bash</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi abc.txt</span><br><span class=\"line\"><span class=\"symbol\">:%</span>!xxd</span><br><span class=\"line\">修改完后,运行下面的命令. 注意左边改动会生效,右边的文本改动不生效</span><br><span class=\"line\"><span class=\"symbol\">:%</span>!xxd -r</span><br></pre></td></tr></table></figure>\n\n<p>更详细的请看 <a href=\"https://www.cnblogs.com/meibenjin/archive/2012/12/06/2806396.html\">https://www.cnblogs.com/meibenjin/archive/2012/12/06/2806396.html</a></p>\n<h2 id=\"83-iproute软件包里的一些常用命令-​\"><a href=\"#83-iproute软件包里的一些常用命令-​\" class=\"headerlink\" title=\"83. iproute软件包里的一些常用命令 ​\"></a>83. iproute软件包里的一些常用命令 <a href=\"#_83-iproute%E8%BD%AF%E4%BB%B6%E5%8C%85%E9%87%8C%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\">​</a></h2><p><code>ifstat</code>打印网卡的一些统计信息,类似<code>ifconfig</code>里的输出,但每次运行时输出从上次运行之后这段时间的统计,而<code>ifconfig</code>是打印的从网卡up以来的累积值<br><code>-a</code>则忽略历史文件,打印从网卡up后的累积值,<code>-j</code>表示输出格式是json.方便二次处理</p>\n<p>bash</p>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ifstat</span><br><span class=\"line\"><span class=\"comment\">#kernel</span></span><br><span class=\"line\">Interface RX Pkts/Rate TX Pkts/Rate RX Data/Rate TX Data/Rate</span><br><span class=\"line\"> RX Errs/Drop TX Errs/Drop RX Over/Rate TX Coll/Rate</span><br><span class=\"line\">lo<span class=\"number\"> 14 </span>0<span class=\"number\"> 14 </span>0<span class=\"number\"> 819 </span>0<span class=\"number\"> 819 </span>0</span><br><span class=\"line\"><span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0</span><br><span class=\"line\">eth0<span class=\"number\"> 25 </span>0<span class=\"number\"> 18 </span>0<span class=\"number\"> 2058 </span>0<span class=\"number\"> 2784 </span>0</span><br><span class=\"line\"><span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0</span><br><span class=\"line\">virbr0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0</span><br><span class=\"line\"><span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0</span><br><span class=\"line\">docker0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0</span><br><span class=\"line\"><span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0<span class=\"number\"> 0 </span>0</span><br></pre></td></tr></table></figure>\n\n<p><code>nstat</code>打印协议栈里的一些统计计数,类似<code>netstat -s</code>的输出,与内核代码里的相关变量名更贴近,容易分析比较<br><code>-r</code>则忽略历史文件,打印从网卡up后的累积值,<code>-z</code>表示非0值的字段也输出</p>\n<p>bash</p>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nstat</span><br><span class=\"line\"><span class=\"comment\">#kernel</span></span><br><span class=\"line\">IpInReceives<span class=\"number\"> 8297 </span>0.0</span><br><span class=\"line\">IpInDelivers<span class=\"number\"> 8297 </span>0.0</span><br><span class=\"line\">IpOutRequests<span class=\"number\"> 7789 </span>0.0</span><br><span class=\"line\">IcmpInMsgs<span class=\"number\"> 6 </span>0.0</span><br><span class=\"line\">IcmpInErrors<span class=\"number\"> 3 </span>0.0</span><br><span class=\"line\">IcmpInDestUnreachs<span class=\"number\"> 6 </span>0.0</span><br><span class=\"line\">IcmpOutMsgs<span class=\"number\"> 6 </span>0.0</span><br><span class=\"line\">IcmpOutDestUnreachs<span class=\"number\"> 6 </span>0.0</span><br></pre></td></tr></table></figure>\n\n<p><code>TcpExtListenOverflows</code>和<code>TcpExtListenDrops</code> 代表全队列或者半队列满了<br><code>TcpInCsumErrors</code>代表接受的包在tcp层的checksum校验不通过,被丢弃</p>\n<p>所有的计数项解释 <a href=\"https://www.kernel.org/doc/html/latest/networking/snmp_counter.html\">https://www.kernel.org/doc/html/latest/networking/snmp_counter.html</a></p>\n<p><code>lnstat</code>周期性输入一些内核统计数据, <code>-d</code>显示支持的具体文件和项</p>\n<p>bash</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">$ lnstat -d</span></span><br><span class=\"line\"><span class=\"attribute\">/proc/net/stat/nf_conntrack</span><span class=\"punctuation\">:</span></span><br><span class=\"line\"> <span class=\"attribute\">1</span><span class=\"punctuation\">:</span> <span class=\"string\">entries</span></span><br><span class=\"line\"> <span class=\"attribute\">2</span><span class=\"punctuation\">:</span> <span class=\"string\">searched</span></span><br><span class=\"line\"> <span class=\"attribute\">3</span><span class=\"punctuation\">:</span> <span class=\"string\">found</span></span><br><span class=\"line\"> <span class=\"attribute\">4</span><span class=\"punctuation\">:</span> <span class=\"string\">new</span></span><br><span class=\"line\"> <span class=\"attribute\">5</span><span class=\"punctuation\">:</span> <span class=\"string\">invalid</span></span><br><span class=\"line\"> <span class=\"attribute\">6</span><span class=\"punctuation\">:</span> <span class=\"string\">ignore</span></span><br><span class=\"line\"> <span class=\"attribute\">7</span><span class=\"punctuation\">:</span> <span class=\"string\">delete</span></span><br><span class=\"line\"> <span class=\"attribute\">8</span><span class=\"punctuation\">:</span> <span class=\"string\">delete_list</span></span><br><span class=\"line\"> <span class=\"attribute\">9</span><span class=\"punctuation\">:</span> <span class=\"string\">insert</span></span><br><span class=\"line\"> <span class=\"attribute\">10</span><span class=\"punctuation\">:</span> <span class=\"string\">insert_failed</span></span><br><span class=\"line\"> <span class=\"attribute\">11</span><span class=\"punctuation\">:</span> <span class=\"string\">drop</span></span><br><span class=\"line\"> <span class=\"attribute\">12</span><span class=\"punctuation\">:</span> <span class=\"string\">early_drop</span></span><br><span class=\"line\"> <span class=\"attribute\">13</span><span class=\"punctuation\">:</span> <span class=\"string\">icmp_error</span></span><br><span class=\"line\"> <span class=\"attribute\">14</span><span class=\"punctuation\">:</span> <span class=\"string\">expect_new</span></span><br><span class=\"line\"> <span class=\"attribute\">15</span><span class=\"punctuation\">:</span> <span class=\"string\">expect_create</span></span><br><span class=\"line\"> <span class=\"attribute\">16</span><span class=\"punctuation\">:</span> <span class=\"string\">expect_delete</span></span><br><span class=\"line\"> <span class=\"attribute\">17</span><span class=\"punctuation\">:</span> <span class=\"string\">search_restart</span></span><br><span class=\"line\"><span class=\"attribute\">/proc/net/stat/ndisc_cache</span><span class=\"punctuation\">:</span></span><br><span class=\"line\"> <span class=\"attribute\">1</span><span class=\"punctuation\">:</span> <span class=\"string\">entries</span></span><br><span class=\"line\"> <span class=\"attribute\">2</span><span class=\"punctuation\">:</span> <span class=\"string\">allocs</span></span><br><span class=\"line\"> <span class=\"attribute\">3</span><span class=\"punctuation\">:</span> <span class=\"string\">destroys</span></span><br><span class=\"line\"> <span class=\"attribute\">4</span><span class=\"punctuation\">:</span> <span class=\"string\">hash_grows</span></span><br><span class=\"line\"> <span class=\"attribute\">5</span><span class=\"punctuation\">:</span> <span class=\"string\">lookups</span></span><br><span class=\"line\"> <span class=\"attribute\">6</span><span class=\"punctuation\">:</span> <span class=\"string\">hits</span></span><br><span class=\"line\"> <span class=\"attribute\">7</span><span class=\"punctuation\">:</span> <span class=\"string\">res_failed</span></span><br><span class=\"line\"> <span class=\"attribute\">8</span><span class=\"punctuation\">:</span> <span class=\"string\">rcv_probes_mcast</span></span><br><span class=\"line\"> <span class=\"attribute\">9</span><span class=\"punctuation\">:</span> <span class=\"string\">rcv_probes_ucast</span></span><br><span class=\"line\"> <span class=\"attribute\">10</span><span class=\"punctuation\">:</span> <span class=\"string\">periodic_gc_runs</span></span><br><span class=\"line\"> <span class=\"attribute\">11</span><span class=\"punctuation\">:</span> <span class=\"string\">forced_gc_runs</span></span><br><span class=\"line\"> <span class=\"attribute\">12</span><span class=\"punctuation\">:</span> <span class=\"string\">unresolved_discards</span></span><br></pre></td></tr></table></figure>\n\n<p><code>-k</code>可输出特定项的信息</p>\n<p>bash</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lnstat -k <span class=\"string\">&quot;entries,insert_failed&quot;</span></span><br><span class=\"line\">nf_connt|<span class=\"string\">nf_connt</span>|</span><br><span class=\"line\"> entries|<span class=\"string\">insert_f</span>|</span><br><span class=\"line\"> |<span class=\"string\"> ailed</span>|</span><br><span class=\"line\"> 7|<span class=\"string\"> 0</span>|</span><br><span class=\"line\"> 7|<span class=\"string\"> 0</span>|</span><br><span class=\"line\"> 7|<span class=\"string\"> 0</span>|</span><br></pre></td></tr></table></figure>\n\n<p>这里的entris和<code>conntrack -L</code>的信息是一样的</p>\n<p><code>tc</code>可以模拟网络延迟,限速等功能, 下面是查看当前策略的命令</p>\n<p>bash</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$</span> tc <span class=\"literal\">-s</span> qdisc</span><br><span class=\"line\"><span class=\"variable\">$</span> tc <span class=\"literal\">-s</span> qdisc <span class=\"built_in\">ls</span> dev eth0</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"84-链接跟踪-​\"><a href=\"#84-链接跟踪-​\" class=\"headerlink\" title=\"84. 链接跟踪 ​\"></a>84. 链接跟踪 <a href=\"#_84-%E9%93%BE%E6%8E%A5%E8%B7%9F%E8%B8%AA\">​</a></h2><p><code>conntrack -L</code>可显示当前的所有链接信息, 需要安装<code>conntrack-tools</code>后才可以使用</p>\n<p>bash</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conntrack -L</span><br><span class=\"line\">tcp 6 430950 ESTABLISHED <span class=\"attribute\">src</span>=10.211.55.22 <span class=\"attribute\">dst</span>=10.211.55.2 <span class=\"attribute\">sport</span>=22 <span class=\"attribute\">dport</span>=51568 <span class=\"attribute\">src</span>=10.211.55.2 <span class=\"attribute\">dst</span>=10.211.55.22 <span class=\"attribute\">sport</span>=51568 <span class=\"attribute\">dport</span>=22 [ASSURED] <span class=\"attribute\">mark</span>=0 <span class=\"attribute\">use</span>=1</span><br><span class=\"line\">tcp 6 5 TIME_WAIT <span class=\"attribute\">src</span>=10.211.55.22 <span class=\"attribute\">dst</span>=113.142.161.250 <span class=\"attribute\">sport</span>=48530 <span class=\"attribute\">dport</span>=80 <span class=\"attribute\">src</span>=113.142.161.250 <span class=\"attribute\">dst</span>=10.211.55.22</span><br></pre></td></tr></table></figure>\n\n<p>查看当前链接跟踪表里的数目</p>\n<p>bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"built_in\">cat</span> /proc/sys/net/netfilter/nf_conntrack_count</span></span><br><span class=\"line\">4</span><br></pre></td></tr></table></figure>\n\n<p>查看当前生效的最大值</p>\n<p>bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"built_in\">cat</span> /proc/sys/net/netfilter/nf_conntrack_max</span></span><br><span class=\"line\">65536</span><br></pre></td></tr></table></figure>\n\n<p>如果内核出现<code>nf_conntrack: table full, dropping packet.</code>, 则需要增加链接跟踪表的最大连接数</p>\n<p>bash</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysctl -w net.<span class=\"attribute\">nf_conntrack_max</span>=xxxxx</span><br></pre></td></tr></table></figure>\n\n<p>还可以通过在加载模块时指定hashsize解决</p>\n<p><a href=\"https://access.redhat.com/solutions/972673\">https://access.redhat.com/solutions/972673</a> 介绍了针对匹配的包不进行连接跟踪的方法<br>更详细的一些文章:<br><a href=\"https://blog.csdn.net/u010472499/article/details/78292811\">https://blog.csdn.net/u010472499/article/details/78292811</a><br><a href=\"https://access.redhat.com/solutions/8721\">https://access.redhat.com/solutions/8721</a><br><a href=\"https://access.redhat.com/solutions/974723\">https://access.redhat.com/solutions/974723</a><br><a href=\"https://access.redhat.com/solutions/8721\">https://access.redhat.com/solutions/8721</a></p>\n<p><code>sysctl -a | grep nf_</code> 查看和链接跟踪所有的内核参数<br>具体解释: <a href=\"https://www.kernel.org/doc/Documentation/networking/nf_conntrack-sysctl.txt\">https://www.kernel.org/doc/Documentation/networking/nf_conntrack-sysctl.txt</a></p>\n<p>下面的规则是用于跟踪对应连接的TCP状态, 每次连接都有自己的超时时间, 如果配置不当会导致丢包.<br>比如<code>ESTABLISHED</code>的超时时间时5天, 如果改为5分钟, 且这5分钟该TCP没有任何报文交互, 则 iptables会将该连接置为invalid.<br>这样即使用<code>ss</code>或者<code>netstat</code>查看该连接仍是<code>ESTABLISHED</code>, 任何发到该连接的报文全部会被丢弃.</p>\n<p>bash</p>\n<figure class=\"highlight basic\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">0 </span><span class=\"number\">0</span> ACCEPT all -- * virbr0 <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>/<span class=\"number\">0</span> <span class=\"number\">192.168</span>.<span class=\"number\">122.0</span>/<span class=\"number\">24</span> ctstate RELATED,ESTABLISHED</span><br></pre></td></tr></table></figure>\n\n<p>具体的信息见`man iptables-extensions</p>\n<p>一些介绍链接跟踪,iptables的文章<br><a href=\"https://www.cnblogs.com/liushaodong/archive/2013/02/26/2933593.html\">https://www.cnblogs.com/liushaodong/archive/2013/02/26/2933593.html</a><br><a href=\"http://arthurchiao.art/blog/conntrack-design-and-implementation/\">http://arthurchiao.art/blog/conntrack-design-and-implementation/</a></p>\n<h2 id=\"85-一些汇编语法-​\"><a href=\"#85-一些汇编语法-​\" class=\"headerlink\" title=\"85. 一些汇编语法 ​\"></a>85. 一些汇编语法 <a href=\"#_85-%E4%B8%80%E4%BA%9B%E6%B1%87%E7%BC%96%E8%AF%AD%E6%B3%95\">​</a></h2><p>如下文章介绍了x86_64下许多寄存器的用途<br><a href=\"http://abcdxyzk.github.io/blog/2012/11/23/assembly-args/\">http://abcdxyzk.github.io/blog/2012/11/23/assembly-args/</a></p>\n<h2 id=\"86-使用crash分析内核coredump的一些文章-​\"><a href=\"#86-使用crash分析内核coredump的一些文章-​\" class=\"headerlink\" title=\"86. 使用crash分析内核coredump的一些文章 ​\"></a>86. 使用crash分析内核coredump的一些文章 <a href=\"#_86-%E4%BD%BF%E7%94%A8crash%E5%88%86%E6%9E%90%E5%86%85%E6%A0%B8coredump%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%87%E7%AB%A0\">​</a></h2><p><a href=\"https://irmbor.co.rs/~dspalovic/assets/docsOracle/E41138/html/ch10s02.html\">https://irmbor.co.rs/~dspalovic&#x2F;assets&#x2F;docsOracle&#x2F;E41138&#x2F;html&#x2F;ch10s02.html</a><br><a href=\"https://www.slideshare.net/PaulVNovarese/linux-crash-dump-capture-and-analysis\">https://www.slideshare.net/PaulVNovarese/linux-crash-dump-capture-and-analysis</a><br><a href=\"https://serverfault.com/questions/475721/how-to-use-kdump-crash-to-investigate-an-oom-issue\">https://serverfault.com/questions/475721/how-to-use-kdump-crash-to-investigate-an-oom-issue</a><br><a href=\"https://www.redhat.com/archives/crash-utility/2012-December/msg00029.html\">https://www.redhat.com/archives/crash-utility/2012-December/msg00029.html</a></p>\n<p>最主要还是看crash的官方主页: <a href=\"https://crash-utility.github.io/\">https://crash-utility.github.io/</a></p>\n<h2 id=\"87-Linux内核模块相关-​\"><a href=\"#87-Linux内核模块相关-​\" class=\"headerlink\" title=\"87. Linux内核模块相关 ​\"></a>87. Linux内核模块相关 <a href=\"#_87-linux%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E7%9B%B8%E5%85%B3\">​</a></h2><p>使用weak-modules实现外部开发的内核模块在多个内核(KABI兼容的情况下)都可以使用, 这篇文章介绍了具体的方法<br><a href=\"https://www.cnblogs.com/xingmuxin/p/9092344.html\">https://www.cnblogs.com/xingmuxin/p/9092344.html</a></p>\n<h2 id=\"88-ssh连接保活配置-​\"><a href=\"#88-ssh连接保活配置-​\" class=\"headerlink\" title=\"88. ssh连接保活配置 ​\"></a>88. ssh连接保活配置 <a href=\"#_88-ssh%E8%BF%9E%E6%8E%A5%E4%BF%9D%E6%B4%BB%E9%85%8D%E7%BD%AE\">​</a></h2><p>编辑 &#x2F;etc&#x2F;ssh&#x2F;sshd_config, 添加如下两行, 重启sshd服务生效</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ClientAliveInterval</span> <span class=\"number\">60</span> </span><br><span class=\"line\"><span class=\"attribute\">ClientAliveCountMax</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"89-使用auditd审计功能-​\"><a href=\"#89-使用auditd审计功能-​\" class=\"headerlink\" title=\"89. 使用auditd审计功能 ​\"></a>89. 使用auditd审计功能 <a href=\"#_89-%E4%BD%BF%E7%94%A8auditd%E5%AE%A1%E8%AE%A1%E5%8A%9F%E8%83%BD\">​</a></h2><p>直接使用<code>systemctl restart auditd</code>重启auditd是失败.</p>\n<p>bash</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl <span class=\"keyword\">restart</span> auditd</span><br><span class=\"line\">Failed <span class=\"keyword\">to</span> <span class=\"keyword\">restart</span> auditd.service: Operation refused, unit auditd.service may be requested <span class=\"keyword\">by</span> dependency <span class=\"keyword\">only</span> (it <span class=\"keyword\">is</span> configured <span class=\"keyword\">to</span> refuse manual <span class=\"keyword\">start</span>/stop).</span><br><span class=\"line\">See <span class=\"keyword\">system</span> logs <span class=\"keyword\">and</span> <span class=\"string\">&#x27;systemctl status auditd.service&#x27;</span> <span class=\"keyword\">for</span> details.</span><br></pre></td></tr></table></figure>\n\n<p>可以使用<code>service auditd status/start/stop/restart</code><br>参见: <a href=\"https://access.redhat.com/solutions/2664811\">https://access.redhat.com/solutions/2664811</a></p>\n<p>启动&#x2F;重启auditd 报错”Not able to start Auditd service with pid file exists error”<br>原因是有其他程序占用了kernel的audit功能, 可以使用<code>auditctl -s</code>查看其他程序的pid<br><a href=\"https://access.redhat.com/solutions/5431221\">https://access.redhat.com/solutions/5431221</a></p>\n<p><code>/var/log/audit/audit.log</code>里的日志格式, 默认不够人性化, 具体字段含义参见:<br><a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/sec-understanding_audit_log_files\">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux&#x2F;7&#x2F;html&#x2F;security_guide&#x2F;sec-understanding_audit_log_files</a></p>\n<p>打印今天的审计摘要</p>\n<p>bash</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ aureport --start 01/10/2020 07:00:00 --end 01/10/2020 19:00:00</span><br><span class=\"line\"><span class=\"attribute\">Summary Report</span></span><br><span class=\"line\"><span class=\"attribute\">======================</span></span><br><span class=\"line\"><span class=\"attribute\">Range of time in logs</span><span class=\"punctuation\">:</span> <span class=\"string\">04/27/2019 20:30:36.683 - 01/01/1970 08:00:00.000</span></span><br><span class=\"line\"><span class=\"attribute\">Selected time for report</span><span class=\"punctuation\">:</span> <span class=\"string\">01/10/2020 07:00:00 - 01/10/2020 19:00:00</span></span><br><span class=\"line\"><span class=\"attribute\">Number of changes in configuration</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of changes to accounts, groups, or roles</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of logins</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of failed logins</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of authentications</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of failed authentications</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of users</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of terminals</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of host names</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of executables</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of commands</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of files</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>昨天到今天这个时间段里的审计摘要</p>\n<p>bash</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">$ aureport --start yesterday --end today</span></span><br><span class=\"line\"><span class=\"attribute\">Summary Report</span></span><br><span class=\"line\"><span class=\"attribute\">======================</span></span><br><span class=\"line\"><span class=\"attribute\">Range of time in logs</span><span class=\"punctuation\">:</span> <span class=\"string\">04/27/2019 20:30:36.683 - 10/01/2020 13:10:43.415</span></span><br><span class=\"line\"><span class=\"attribute\">Selected time for report</span><span class=\"punctuation\">:</span> <span class=\"string\">09/30/2020 00:00:00 - 10/01/2020 13:12:35</span></span><br><span class=\"line\"><span class=\"attribute\">Number of changes in configuration</span><span class=\"punctuation\">:</span> <span class=\"string\">46</span></span><br><span class=\"line\"><span class=\"attribute\">Number of changes to accounts, groups, or roles</span><span class=\"punctuation\">:</span> <span class=\"string\">0</span></span><br><span class=\"line\"><span class=\"attribute\">Number of logins</span><span class=\"punctuation\">:</span> <span class=\"string\">25</span></span><br><span class=\"line\"><span class=\"attribute\">Number of failed logins</span><span class=\"punctuation\">:</span> <span class=\"string\">2</span></span><br><span class=\"line\"><span class=\"attribute\">Number of authentications</span><span class=\"punctuation\">:</span> <span class=\"string\">80</span></span><br><span class=\"line\"><span class=\"attribute\">Number of failed authentications</span><span class=\"punctuation\">:</span> <span class=\"string\">1</span></span><br><span class=\"line\"><span class=\"attribute\">Number of users</span><span class=\"punctuation\">:</span> <span class=\"string\">2</span></span><br><span class=\"line\"><span class=\"attribute\">Number of terminals</span><span class=\"punctuation\">:</span> <span class=\"string\">16</span></span><br><span class=\"line\"><span class=\"attribute\">Number of host names</span><span class=\"punctuation\">:</span> <span class=\"string\">3</span></span><br><span class=\"line\"><span class=\"attribute\">Number of executables</span><span class=\"punctuation\">:</span> <span class=\"string\">14</span></span><br><span class=\"line\"><span class=\"attribute\">Number of commands</span><span class=\"punctuation\">:</span> <span class=\"string\">11</span></span><br><span class=\"line\"><span class=\"attribute\">Number of files</span><span class=\"punctuation\">:</span> <span class=\"string\">2</span></span><br></pre></td></tr></table></figure>\n\n<p>从昨天开始事件统计摘要, <code>-i</code>让输出更人性化.</p>\n<p>bash</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ aureport --start yesterday -e -i --summary</span><br><span class=\"line\"><span class=\"section\">Event Summary Report</span></span><br><span class=\"line\"><span class=\"section\">======================</span></span><br><span class=\"line\"><span class=\"section\">total type</span></span><br><span class=\"line\"><span class=\"section\">======================</span></span><br><span class=\"line\">14485 CRYPTO<span class=\"emphasis\">_KEY_USER</span></span><br><span class=\"line\"><span class=\"emphasis\">8076 USER_START</span></span><br><span class=\"line\"><span class=\"emphasis\">7639 USER_END</span></span><br><span class=\"line\"><span class=\"emphasis\">6762 CRED_ACQ</span></span><br><span class=\"line\"><span class=\"emphasis\">6761 USER_ACCT</span></span><br><span class=\"line\"><span class=\"emphasis\">6753 LOGIN</span></span><br><span class=\"line\"><span class=\"emphasis\">6704 CRED_REFR</span></span><br><span class=\"line\"><span class=\"emphasis\">6527 CRED_DISP</span></span><br><span class=\"line\"><span class=\"emphasis\">4966 NETFILTER_</span>CFG</span><br></pre></td></tr></table></figure>\n\n<p>统计可执行文件的摘要</p>\n<p>bash</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ aureport -x -i --summary</span><br><span class=\"line\"><span class=\"section\">Executable Summary Report</span></span><br><span class=\"line\"><span class=\"section\">=================================</span></span><br><span class=\"line\"><span class=\"section\">total file</span></span><br><span class=\"line\"><span class=\"section\">=================================</span></span><br><span class=\"line\">33791 /usr/sbin/sshd</span><br><span class=\"line\">31880 /usr/sbin/crond</span><br><span class=\"line\">7432 /usr/lib/systemd/systemd</span><br><span class=\"line\">4370 /usr/sbin/xtables-multi</span><br><span class=\"line\">651 ?</span><br><span class=\"line\">627 /usr/bin/python2.7</span><br><span class=\"line\">608 /usr/bin/login</span><br><span class=\"line\">309 /usr/bin/kmod</span><br><span class=\"line\">232 /usr/lib/systemd/systemd-update-utmp</span><br><span class=\"line\">204 /</span><br><span class=\"line\">102 /usr/sbin/libvirtd</span><br><span class=\"line\">94 /usr/sbin/tcpdump</span><br><span class=\"line\">60 /usr/bin/su</span><br><span class=\"line\">50 /usr/bin/dockerd-current</span><br><span class=\"line\">42 /usr/sbin/groupadd</span><br></pre></td></tr></table></figure>\n\n<p>显示每个audit日志记录的对应时间段</p>\n<p>bash</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ aureport -t</span><br><span class=\"line\">Log Time Range Report</span><br><span class=\"line\">=====================</span><br><span class=\"line\"><span class=\"regexp\">/var/</span>log<span class=\"regexp\">/audit/</span>audit.log.<span class=\"number\">2</span>: <span class=\"number\">04</span><span class=\"regexp\">/27/</span><span class=\"number\">2019</span> <span class=\"number\">20</span>:<span class=\"number\">30</span>:<span class=\"number\">36.683</span> - <span class=\"number\">12</span><span class=\"regexp\">/01/</span><span class=\"number\">2019</span> <span class=\"number\">10</span>:<span class=\"number\">40</span>:<span class=\"number\">01.857</span></span><br><span class=\"line\"><span class=\"regexp\">/var/</span>log<span class=\"regexp\">/audit/</span>audit.log.<span class=\"number\">1</span>: <span class=\"number\">12</span><span class=\"regexp\">/01/</span><span class=\"number\">2019</span> <span class=\"number\">10</span>:<span class=\"number\">40</span>:<span class=\"number\">01.858</span> - <span class=\"number\">06</span><span class=\"regexp\">/08/</span><span class=\"number\">2020</span> <span class=\"number\">12</span>:<span class=\"number\">20</span>:<span class=\"number\">01.343</span></span><br><span class=\"line\"><span class=\"regexp\">/var/</span>log<span class=\"regexp\">/audit/</span>audit.log: <span class=\"number\">06</span><span class=\"regexp\">/08/</span><span class=\"number\">2020</span> <span class=\"number\">12</span>:<span class=\"number\">20</span>:<span class=\"number\">01.358</span> - <span class=\"number\">10</span><span class=\"regexp\">/01/</span><span class=\"number\">2020</span> <span class=\"number\">13</span>:<span class=\"number\">42</span>:<span class=\"number\">52.455</span></span><br></pre></td></tr></table></figure>\n\n<p>搜索今天所有的日志</p>\n<p>bash</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ausearch <span class=\"comment\">--start today -i</span></span><br></pre></td></tr></table></figure>\n\n<p>搜索今天所有的事件为系统调用的日志<br>所有的事件列表参见: <a href=\"https://access.redhat.com/articles/4409591\">https://access.redhat.com/articles/4409591</a></p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ausearch <span class=\"attr\">--start</span> today -<span class=\"selector-tag\">i</span> -m syscall</span><br></pre></td></tr></table></figure>\n\n<p>搜索今天所有的关键字为xxxx的日志</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ausearch <span class=\"attr\">--start</span> today -<span class=\"selector-tag\">i</span> -k xxxx</span><br></pre></td></tr></table></figure>\n\n<p>搜索今天所有的涉及文件&#x2F;etc&#x2F;passwd的日志</p>\n<p>bash</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ausearch <span class=\"attr\">--start</span> today -<span class=\"selector-tag\">i</span> -f /etc/passwd</span><br></pre></td></tr></table></figure>\n\n<p>其他一些参考资料:<br><a href=\"https://cloud.tencent.com/developer/article/1359606\">https://cloud.tencent.com/developer/article/1359606</a></p>\n<h2 id=\"90-分析磁盘性能-​\"><a href=\"#90-分析磁盘性能-​\" class=\"headerlink\" title=\"90. 分析磁盘性能 ​\"></a>90. 分析磁盘性能 <a href=\"#_90-%E5%88%86%E6%9E%90%E7%A3%81%E7%9B%98%E6%80%A7%E8%83%BD\">​</a></h2><p>blktrace -d &#x2F;dev&#x2F;vda blkparse -i vda -d vda.blktrace.bin btt -i vda.blktrace.bin -l vda.d2c_latency</p>\n<p>参考:<br><a href=\"https://developer.aliyun.com/article/698568\">https://developer.aliyun.com/article/698568</a><br><a href=\"https://tunnelix.com/debugging-disk-issues-with-blktrace-blkparse-btrace-and-btt-in-linux-environment/\">https://tunnelix.com/debugging-disk-issues-with-blktrace-blkparse-btrace-and-btt-in-linux-environment/</a></p>\n<p><code>iostat</code>里<code>await</code>和<code>svctm</code>相关解释<br><a href=\"https://access.redhat.com/solutions/2039133\">https://access.redhat.com/solutions/2039133</a><br><a href=\"https://access.redhat.com/articles/524353\">https://access.redhat.com/articles/524353</a><br><a href=\"https://access.redhat.com/solutions/112613\">https://access.redhat.com/solutions/112613</a></p>\n<h2 id=\"91-Grub相关问题-​\"><a href=\"#91-Grub相关问题-​\" class=\"headerlink\" title=\"91. Grub相关问题 ​\"></a>91. Grub相关问题 <a href=\"#_91-grub%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98\">​</a></h2><p>CentOS 6 和7 如何重装grub<br><a href=\"https://access.redhat.com/solutions/1521\">https://access.redhat.com/solutions/1521</a></p>\n<h2 id=\"92-SLAB相关的知识-​\"><a href=\"#92-SLAB相关的知识-​\" class=\"headerlink\" title=\"92. SLAB相关的知识 ​\"></a>92. SLAB相关的知识 <a href=\"#_92-slab%E7%9B%B8%E5%85%B3%E7%9A%84%E7%9F%A5%E8%AF%86\">​</a></h2><p>统计slab内各项的内存占用并降序排列TOP 10</p>\n<p>bash</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">awk</span> &#x27;&#123;printf <span class=\"string\">&quot;  %6i MB %s \\n&quot;</span>,$<span class=\"number\">6</span>*$<span class=\"number\">15</span>/<span class=\"number\">256</span>,$<span class=\"number\">1</span>&#125;&#x27; /proc/slabinfo | sort -nrk1 | head -<span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"93-nfs相关的知识-​\"><a href=\"#93-nfs相关的知识-​\" class=\"headerlink\" title=\"93. nfs相关的知识 ​\"></a>93. nfs相关的知识 <a href=\"#_93-nfs%E7%9B%B8%E5%85%B3%E7%9A%84%E7%9F%A5%E8%AF%86\">​</a></h2><p>nfs Debug<br><a href=\"https://access.redhat.com/solutions/262213\">https://access.redhat.com/solutions/262213</a><br><a href=\"https://access.redhat.com/solutions/1460313\">https://access.redhat.com/solutions/1460313</a><br><a href=\"https://access.redhat.com/solutions/4253191\">https://access.redhat.com/solutions/4253191</a><br><a href=\"https://access.redhat.com/solutions/2948091\">https://access.redhat.com/solutions/2948091</a><br><a href=\"https://access.redhat.com/solutions/3765711\">https://access.redhat.com/solutions/3765711</a><br><a href=\"https://access.redhat.com/solutions/28211\">https://access.redhat.com/solutions/28211</a></p>\n<p>nfs, rpc相关的Debug开关<br><a href=\"https://wiki.archlinux.org/index.php/NFS/Troubleshooting#RPC_debug_flags\">https://wiki.archlinux.org/index.php/NFS/Troubleshooting#RPC_debug_flags</a></p>\n<h2 id=\"94-fork创建进程时的几个报错说明-​\"><a href=\"#94-fork创建进程时的几个报错说明-​\" class=\"headerlink\" title=\"94. fork创建进程时的几个报错说明 ​\"></a>94. fork创建进程时的几个报错说明 <a href=\"#_94-fork%E5%88%9B%E5%BB%BA%E8%BF%9B%E7%A8%8B%E6%97%B6%E7%9A%84%E5%87%A0%E4%B8%AA%E6%8A%A5%E9%94%99%E8%AF%B4%E6%98%8E\">​</a></h2><p>有两个常见的报错:</p>\n<p>bash</p>\n<figure class=\"highlight ldif\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">11</span>: Resource temporarily unavailable</span><br><span class=\"line\"><span class=\"attribute\">12</span>: Cannot allocate memory</span><br></pre></td></tr></table></figure>\n\n<p>在fork等创建进程的操作里, 当达到<code>nproc</code>的限制， 即用户的最大进程数， 报错<code>Resource temporarily unavailable</code> （这条规则对root用户无效） 如果在文件里对<code>nproc</code>配置为<code>ulimited</code> 这个值是根据内存算出来的， 公式可参考<br><a href=\"https://thelinuxcluster.com/2020/05/14/how-is-the-nproc-hard-limit-calculated-and-how-do-we-change-the-value-on-centos-7/\">https://thelinuxcluster.com/2020/05/14/how-is-the-nproc-hard-limit-calculated-and-how-do-we-change-the-value-on-centos-7/</a></p>\n<p>当达到系统级参数pid_max限制，无法分配出pid时， 报错为<code>Cannot allocate memory</code></p>\n<p><code>sysctl kernel.pid_max</code>查询当前的最大值, pid_max默认是32768， 64位系统， 最大可配置为4百万左右<br><code>kernel.threads-max</code> 也控制系统能创建的最大进程&#x2F;线程数, 因为它的默认值非常大. 一般都没关注过. 总是<code>kernel.pid_max</code>先超出限制.<br>如下是相关代码: linux-3.10.0-957.21.3.el7\\include\\linux\\threads.h</p>\n<p>c</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * This controls the default maximum pid allocated to a process</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PID_MAX_DEFAULT (CONFIG_BASE_SMALL ? 0x1000 : 0x8000)</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * A maximum of 4 million PIDs should be enough for a while.</span></span><br><span class=\"line\"><span class=\"comment\"> * [<span class=\"doctag\">NOTE:</span> PID/TIDs are limited to 2^29 ~= 500+ million, see futex.h.]</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PID_MAX_LIMIT (CONFIG_BASE_SMALL ? PAGE_SIZE * 8 : \\</span></span><br><span class=\"line\"> (<span class=\"keyword\">sizeof</span>(<span class=\"built_in\">long</span>) &gt; <span class=\"number\">4</span> ? <span class=\"number\">4</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span> : PID_MAX_DEFAULT))</span><br></pre></td></tr></table></figure>\n","text":"Linux 下常用命令与技巧汇总收集自己常用到的linux命令与技巧,方便后续查找.不定期更新. 1. 查询系统准确的启动时间 ​bash 12date -d ...","permalink":"/post/LINUX/Linux 下常用命令与技巧汇总","photos":[],"count_time":{"symbolsCount":"58k","symbolsTime":"52 mins."},"categories":[{"name":"bash","slug":"bash","count":2,"path":"api/categories/bash.json"},{"name":"LINUX","slug":"bash/LINUX","count":2,"path":"api/categories/bash/LINUX.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"redhat","slug":"redhat","count":1,"path":"api/tags/redhat.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Linux-%E4%B8%8B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E4%B8%8E%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB\"><span class=\"toc-text\">Linux 下常用命令与技巧汇总</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F%E5%87%86%E7%A1%AE%E7%9A%84%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4-%E2%80%8B\"><span class=\"toc-text\">1. 查询系统准确的启动时间 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%87%86%E7%A1%AE%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4%E5%92%8C%E8%BF%90%E8%A1%8C%E6%97%B6%E9%95%BF-%E2%80%8B\"><span class=\"toc-text\">2. 查询所有进程的准确启动时间和运行时长 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E8%AE%BE%E7%BD%AE%E6%97%B6%E9%97%B4-%E2%80%8B\"><span class=\"toc-text\">3. 设置时间 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%90%8C%E6%AD%A5OS%E4%B8%8E%E7%A1%AC%E4%BB%B6%E6%97%B6%E9%97%B4-%E2%80%8B\"><span class=\"toc-text\">4. 同步OS与硬件时间 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E6%9F%A5%E7%9C%8B%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF-%E2%80%8B\"><span class=\"toc-text\">5. 查看硬件信息 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E9%94%81%E5%AE%9A%E6%96%87%E4%BB%B6-%E4%B8%8D%E8%A2%AB%E4%BB%BB%E4%BD%95%E7%A8%8B%E5%BA%8F%E4%BF%AE%E6%94%B9-%E2%80%8B\"><span class=\"toc-text\">6 锁定文件,不被任何程序修改 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-stat-%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E8%AF%A6%E7%BB%86%E5%85%83%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF-%E7%89%B9%E5%88%AB%E6%98%AFinode-%E2%80%8B\"><span class=\"toc-text\">7. stat 查看文件详细元数据信息, 特别是inode </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-xxd%E6%9F%A5%E7%9C%8B%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6-%E2%80%8B\"><span class=\"toc-text\">8. xxd查看二进制文件 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D-%E2%80%8B\"><span class=\"toc-text\">9. 批量修改文件名 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10-df-%E6%9F%A5%E8%AF%A2%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%8C%82%E8%BD%BD%E7%82%B9%E4%BF%A1%E6%81%AF-%E2%80%8B\"><span class=\"toc-text\">10. df 查询文件系统挂载点信息 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-du-%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">11. du 命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#12-find%E5%88%A0%E9%99%A4%E6%9F%A5%E6%89%BE%E5%88%B0%E7%9A%84%E6%96%87%E4%BB%B6-%E2%80%8B\"><span class=\"toc-text\">12. find删除查找到的文件 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13-xargs-%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">13. xargs 命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#14-grep%E6%9F%A5%E8%AF%A2%E6%96%87%E6%9C%AC-%E2%80%8B\"><span class=\"toc-text\">14. grep查询文本 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#15-tail-%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E6%8C%87%E5%AE%9A%E8%A1%8C%E4%BF%A1%E6%81%AF-%E2%80%8B\"><span class=\"toc-text\">15. tail 查看文件指定行信息 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#16-%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95-%E2%80%8B\"><span class=\"toc-text\">16. 批量创建目录 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#17-echo-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">17. echo 相关命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#18-nohup%E4%B8%8E%E6%A0%87%E5%87%86%E8%BE%93%E5%87%BA-%E6%A0%87%E5%87%86%E9%94%99%E8%AF%AF%E8%BE%93%E5%87%BA-%E2%80%8B\"><span class=\"toc-text\">18. nohup与标准输出,标准错误输出 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#19-Linux%E6%A8%A1%E5%9D%97%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%8D%B8%E8%BD%BD-%E2%80%8B\"><span class=\"toc-text\">19. Linux模块的安装和卸载 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#20-column%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA-%E2%80%8B\"><span class=\"toc-text\">20. column格式化输出 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#21-%E9%80%9A%E8%BF%87pid%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%BF%A1%E6%81%AF-%E2%80%8B\"><span class=\"toc-text\">21. 通过pid查看进程的环境变量信息 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#22-%E9%80%9A%E8%BF%87pid%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E5%AF%B9%E5%BA%94%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E7%9A%84%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84-%E2%80%8B\"><span class=\"toc-text\">22. 通过pid查看进程对应可执行文件的绝对路径 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#23-%E9%80%9A%E8%BF%87pid%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%BD%93%E5%89%8D%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95-%E2%80%8B\"><span class=\"toc-text\">23. 通过pid查看进程的当前工作目录 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#24-lsof-%E4%B8%80%E5%88%87%E7%9A%86%E6%96%87%E4%BB%B6-%E2%80%8B\"><span class=\"toc-text\">24. lsof 一切皆文件 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#25-fuser-%E6%9F%A5%E6%89%BE%E8%AE%BF%E9%97%AE%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%9B%E7%A8%8B-%E2%80%8B\"><span class=\"toc-text\">25. fuser 查找访问文件系统的进程 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#26-dd-%E6%B5%8B%E8%AF%95%E7%A3%81%E7%9B%98%E6%88%96%E8%80%85%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99-%E2%80%8B\"><span class=\"toc-text\">26. dd 测试磁盘或者文件读写 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#27-rpm-%E5%AE%89%E8%A3%85-x2F-%E6%9B%B4%E6%96%B0-x2F-%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%E5%8C%85-%E2%80%8B\"><span class=\"toc-text\">27. rpm 安装&#x2F;更新&#x2F;卸载软件包 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#28-yum-%E5%AE%89%E8%A3%85-x2F-%E6%9B%B4%E6%96%B0-x2F-%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%E5%8C%85-%E2%80%8B\"><span class=\"toc-text\">28. yum 安装&#x2F;更新&#x2F;卸载软件包 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#29-%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">29. 解压缩命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#30-systemd-%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">30. systemd 管理命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#31-Ubuntu-x2F-Debian-%E6%A3%80%E6%9F%A5%E5%B7%B2%E7%BB%8F%E5%AE%89%E8%A3%85%E5%A5%BD%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%9A%84%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97-%E2%80%8B\"><span class=\"toc-text\">31. Ubuntu&#x2F;Debian 检查已经安装好的软件包的更新日志 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#32-%E6%90%9C%E7%B4%A2%E5%90%AB%E6%9C%89%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E7%9A%84%E6%89%8B%E5%86%8C%E9%A1%B5-%E2%80%8B\"><span class=\"toc-text\">32. 搜索含有指定字符的手册页 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#33-%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4%E5%A4%A7%E9%87%8F%E5%B0%8F%E6%96%87%E4%BB%B6-%E2%80%8B\"><span class=\"toc-text\">33. 快速删除大量小文件 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#34-sysctl-%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%8F%82%E6%95%B0-%E2%80%8B\"><span class=\"toc-text\">34. sysctl 管理系统参数 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#35-%E6%B8%85%E7%A9%BA%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9-%E2%80%8B\"><span class=\"toc-text\">35. 清空文件内容 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#36-%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8-%E2%80%8B\"><span class=\"toc-text\">36. 查询系统调用 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#37-%E6%9F%A5%E7%9C%8B%E7%A3%81%E7%9B%98uuid%E5%92%8C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%B1%BB%E5%9E%8B-%E2%80%8B\"><span class=\"toc-text\">37. 查看磁盘uuid和文件系统类型 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#38-%E5%88%9B%E5%BB%BA%E8%BD%AF%E8%BF%9E%E6%8E%A5-%E2%80%8B\"><span class=\"toc-text\">38. 创建软连接 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#39-history%E6%9F%A5%E7%9C%8B%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95-%E2%80%8B\"><span class=\"toc-text\">39. history查看历史记录 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#40-%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%88%B6%E5%AD%90%E8%B0%83%E7%94%A8%E5%85%B3%E7%B3%BB-%E2%80%8B\"><span class=\"toc-text\">40. 查看进程的父子调用关系 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#41-rsync%E6%96%87%E4%BB%B6-%E2%80%8B\"><span class=\"toc-text\">41. rsync文件 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#42-%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%8A%A8%E6%80%81%E5%BA%93%E9%93%BE%E6%8E%A5%E4%BF%A1%E6%81%AF-%E2%80%8B\"><span class=\"toc-text\">42. 查询的动态库链接信息 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#43-%E6%9F%A5%E8%AF%A2ascii%E7%BC%96%E7%A0%81%E8%A1%A8-%E2%80%8B\"><span class=\"toc-text\">43. 查询ascii编码表 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#44-iptable-%E5%86%85%E7%BD%AE%E9%98%B2%E7%81%AB%E5%A2%99-%E2%80%8B\"><span class=\"toc-text\">44. iptable 内置防火墙 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#45-tcpdump-%E6%8A%93%E5%8C%85-%E2%80%8B\"><span class=\"toc-text\">45. tcpdump 抓包 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#46-DNS%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7-%E2%80%8B\"><span class=\"toc-text\">46. DNS查询工具 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#47-NTP%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5-%E2%80%8B\"><span class=\"toc-text\">47. NTP时间同步 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#48-netstat%E6%9F%A5%E8%AF%A2%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E4%BF%A1%E6%81%AF-%E2%80%8B\"><span class=\"toc-text\">48. netstat查询网络连接信息 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#50-ip-%E7%BD%91%E7%BB%9C%E7%BB%B4%E6%8A%A4-%E2%80%8B\"><span class=\"toc-text\">50. ip 网络维护 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#51-who-%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%99%BB%E5%BD%95%E7%94%A8%E6%88%B7-%E2%80%8B\"><span class=\"toc-text\">51. who 查看当前登录用户 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#52-%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E4%B8%BB%E6%9C%BA%E5%AE%9E%E6%97%B6%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F-%E2%80%8B\"><span class=\"toc-text\">52. 使用iftop查看主机实时网络流量 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#53-Bash%E7%9B%B8%E5%85%B3%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F-%E2%80%8B\"><span class=\"toc-text\">53. Bash相关环境变量 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#54-%E6%9F%A5%E6%9C%AC%E6%9C%BA%E7%9A%84%E5%85%AC%E7%BD%91IP-%E2%80%8B\"><span class=\"toc-text\">54. 查本机的公网IP </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#55-%E6%9F%A5%E8%AF%A2linux%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%B8%80%E4%BA%9B%E9%99%90%E5%88%B6%E4%BF%A1%E6%81%AF-%E2%80%8B\"><span class=\"toc-text\">55. 查询linux系统的一些限制信息 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#56-%E5%88%A4%E6%96%AD%E8%99%9A%E6%8B%9F%E5%8C%96%E7%B1%BB%E5%9E%8B%E7%9A%84N%E7%A7%8D%E6%96%B9%E6%B3%95-%E2%80%8B\"><span class=\"toc-text\">56. 判断虚拟化类型的N种方法 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#57-cpu%E4%BF%A1%E6%81%AF%E8%A7%A3%E8%AF%BB-%E2%80%8B\"><span class=\"toc-text\">57. cpu信息解读 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#58-taskset%E6%8C%87%E5%AE%9A%E8%BF%9B%E7%A8%8B%E7%9A%84CPU%E4%BA%B2%E5%92%8C%E6%80%A7-%E2%80%8B\"><span class=\"toc-text\">58. taskset指定进程的CPU亲和性 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#59-Linux%E7%B3%BB%E7%BB%9F%E6%9C%80%E5%A4%A7%E6%96%87%E4%BB%B6%E6%95%B0%E9%87%8F-%E2%80%8B\"><span class=\"toc-text\">59. Linux系统最大文件数量 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#60-ss-%E6%9F%A5%E8%AF%A2socket%E8%BF%9E%E6%8E%A5%E4%BF%A1%E6%81%AF-%E2%80%8B\"><span class=\"toc-text\">60. ss 查询socket连接信息 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#61-%E6%B6%88%E9%99%A4%E7%94%A8%E6%88%B7%E8%A2%AB%E9%94%81%E7%9A%84%E9%94%99%E8%AF%AF%E7%99%BB%E5%BD%95%E8%AE%B0%E5%BD%95-%E2%80%8B\"><span class=\"toc-text\">61. 消除用户被锁的错误登录记录 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#62-%E4%BC%B0%E8%AE%A1RSS%E6%80%BB%E5%92%8C%E7%9A%84%E5%A4%A7%E5%B0%8F-%E2%80%8B\"><span class=\"toc-text\">62. 估计RSS总和的大小 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#63-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BF%AE%E5%A4%8D-%E2%80%8B\"><span class=\"toc-text\">63. 文件系统修复 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#64-%E9%9D%9E%E4%BA%A4%E4%BA%92%E5%BC%8F%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81-%E2%80%8B\"><span class=\"toc-text\">64. 非交互式修改密码 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#66-udev%E7%AE%A1%E7%90%86-%E2%80%8B\"><span class=\"toc-text\">66. udev管理 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#67-%E4%B8%80%E6%9D%A1%E5%91%BD%E4%BB%A4%E5%90%AF%E5%8A%A8web%E6%9C%8D%E5%8A%A1%E5%99%A8-%E2%80%8B\"><span class=\"toc-text\">67. 一条命令启动web服务器 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#68-dpkg-apt-get%E5%8C%85%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">68. dpkg,apt-get包管理命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#69-%E4%B8%BB%E6%9C%BA%E5%AE%89%E5%85%A8%E5%85%A5%E4%BE%B5%E7%9B%98%E6%9F%A5-%E2%80%8B\"><span class=\"toc-text\">69. 主机安全入侵盘查 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#70-top%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">70. top命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#71-ping%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">71. ping命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#72-ping%E5%92%8Ccurl%E5%B8%B8%E8%A7%81%E7%9A%84%E7%BD%91%E7%BB%9C%E6%8A%A5%E9%94%99-%E2%80%8B\"><span class=\"toc-text\">72. ping和curl常见的网络报错 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#73-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%86%85%E5%AD%98%E7%BB%9F%E8%AE%A1%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">73. 一些常用的内存统计命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#74-%E4%B8%8D%E5%90%8COS%E7%9A%84%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81-%E2%80%8B\"><span class=\"toc-text\">74. 不同OS的文件编码 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#75-%E4%B8%80%E4%BA%9Bshell%E5%BE%AA%E7%8E%AF%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">75. 一些shell循环命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#76-dhcp%E6%8C%81%E7%BB%AD%E8%AF%B7%E6%B1%82%E9%85%8D%E7%BD%AE-%E2%80%8B\"><span class=\"toc-text\">76. dhcp持续请求配置 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#77-%E8%A7%A3%E6%9E%90-x2F-proc-x2F-pid-x2F-status%E9%87%8C%E5%85%B3%E4%BA%8E%E4%BF%A1%E5%8F%B7%E7%9A%84%E5%AD%97%E6%AE%B5-%E2%80%8B\"><span class=\"toc-text\">77. 解析&#x2F;proc&#x2F;[pid]&#x2F;status里关于信号的字段 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#78-%E5%AE%A1%E8%AE%A1%E8%B0%81%E6%9D%80%E4%BA%86%E8%BF%9B%E7%A8%8B-%E2%80%8B\"><span class=\"toc-text\">78. 审计谁杀了进程 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#79-%E4%BF%AE%E6%94%B9%E5%AD%97%E7%AC%A6%E9%9B%86%E7%9A%84%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">79. 修改字符集的命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#80-bash%E8%84%9A%E6%9C%AC%E7%9A%84%E9%80%80%E5%87%BA%E7%A0%81-%E2%80%8B\"><span class=\"toc-text\">80. bash脚本的退出码 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#81-%E6%A8%A1%E6%8B%9F%E4%B8%8D%E6%96%AD%E5%A2%9E%E5%8A%A0%E5%86%85%E5%AD%98%E8%87%B4%E4%BD%BF%E8%A7%A6%E5%8F%91oom%E7%9A%84%E7%A8%8B%E5%BA%8F-%E2%80%8B\"><span class=\"toc-text\">81. 模拟不断增加内存致使触发oom的程序 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#82-vi%E5%AE%9E%E7%8E%B0%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E7%BC%96%E8%BE%91%E5%8A%9F%E8%83%BD-%E2%80%8B\"><span class=\"toc-text\">82. vi实现十六进制编辑功能 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#83-iproute%E8%BD%AF%E4%BB%B6%E5%8C%85%E9%87%8C%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-%E2%80%8B\"><span class=\"toc-text\">83. iproute软件包里的一些常用命令 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#84-%E9%93%BE%E6%8E%A5%E8%B7%9F%E8%B8%AA-%E2%80%8B\"><span class=\"toc-text\">84. 链接跟踪 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#85-%E4%B8%80%E4%BA%9B%E6%B1%87%E7%BC%96%E8%AF%AD%E6%B3%95-%E2%80%8B\"><span class=\"toc-text\">85. 一些汇编语法 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#86-%E4%BD%BF%E7%94%A8crash%E5%88%86%E6%9E%90%E5%86%85%E6%A0%B8coredump%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%87%E7%AB%A0-%E2%80%8B\"><span class=\"toc-text\">86. 使用crash分析内核coredump的一些文章 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#87-Linux%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E7%9B%B8%E5%85%B3-%E2%80%8B\"><span class=\"toc-text\">87. Linux内核模块相关 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#88-ssh%E8%BF%9E%E6%8E%A5%E4%BF%9D%E6%B4%BB%E9%85%8D%E7%BD%AE-%E2%80%8B\"><span class=\"toc-text\">88. ssh连接保活配置 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#89-%E4%BD%BF%E7%94%A8auditd%E5%AE%A1%E8%AE%A1%E5%8A%9F%E8%83%BD-%E2%80%8B\"><span class=\"toc-text\">89. 使用auditd审计功能 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#90-%E5%88%86%E6%9E%90%E7%A3%81%E7%9B%98%E6%80%A7%E8%83%BD-%E2%80%8B\"><span class=\"toc-text\">90. 分析磁盘性能 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#91-Grub%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98-%E2%80%8B\"><span class=\"toc-text\">91. Grub相关问题 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#92-SLAB%E7%9B%B8%E5%85%B3%E7%9A%84%E7%9F%A5%E8%AF%86-%E2%80%8B\"><span class=\"toc-text\">92. SLAB相关的知识 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#93-nfs%E7%9B%B8%E5%85%B3%E7%9A%84%E7%9F%A5%E8%AF%86-%E2%80%8B\"><span class=\"toc-text\">93. nfs相关的知识 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#94-fork%E5%88%9B%E5%BB%BA%E8%BF%9B%E7%A8%8B%E6%97%B6%E7%9A%84%E5%87%A0%E4%B8%AA%E6%8A%A5%E9%94%99%E8%AF%B4%E6%98%8E-%E2%80%8B\"><span class=\"toc-text\">94. fork创建进程时的几个报错说明 </span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Linux etc shadow 文件学习笔记","uid":"7c083edc735a96bb85e82e86710ce6ee","slug":"LINUX/Linux etc shadow 文件学习笔记","date":"2025-08-05T17:33:14.000Z","updated":"2025-09-30T03:26:31.741Z","comments":true,"path":"api/articles/LINUX/Linux etc shadow 文件学习笔记.json","keywords":"XuGuangSheng","cover":"/covers/linux-etc-shadow.jpg","text":"Linux /etc/shadow 文件学习笔记Linux系统下，创建的用户信息如ID，家目录，默认shell保存在/etc/passwd下，该文件每行的第二位...","permalink":"/post/LINUX/Linux etc shadow 文件学习笔记","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"etc","slug":"etc","count":2,"path":"api/categories/etc.json"},{"name":"LINUX","slug":"etc/LINUX","count":2,"path":"api/categories/etc/LINUX.json"}],"tags":[{"name":"通过","slug":"通过","count":2,"path":"api/tags/通过.json"},{"name":"chage","slug":"chage","count":1,"path":"api/tags/chage.json"},{"name":"user","slug":"user","count":1,"path":"api/tags/user.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"ATOP工作原理总结","uid":"f25de4e9e0b08e6b09a0adc003a6760d","slug":"LINUX/ATOP工作原理总结","date":"2025-08-05T17:32:37.000Z","updated":"2025-09-30T03:26:30.057Z","comments":true,"path":"api/articles/LINUX/ATOP工作原理总结.json","keywords":"XuGuangSheng","cover":"/covers/atop.jpg","text":"ATOP工作原理总结ATOP是一款用于观察Linux性能的ASCII全屏交互式工具。类似于top,每隔一段时间报告 CPU，Memory，Disk，Networ...","permalink":"/post/LINUX/ATOP工作原理总结","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"proc","slug":"proc","count":2,"path":"api/categories/proc.json"},{"name":"LINUX","slug":"proc/LINUX","count":2,"path":"api/categories/proc/LINUX.json"}],"tags":[{"name":"CPU","slug":"CPU","count":3,"path":"api/tags/CPU.json"},{"name":"atop","slug":"atop","count":2,"path":"api/tags/atop.json"},{"name":"AAA","slug":"AAA","count":1,"path":"api/tags/AAA.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}