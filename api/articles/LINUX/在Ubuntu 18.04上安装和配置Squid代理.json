{"title":"在Ubuntu 18.04上安装和配置Squid代理","uid":"52d188bef2ce89a10077bd22ef3e8593","slug":"LINUX/在Ubuntu 18.04上安装和配置Squid代理","date":"2022-09-14T18:00:06.000Z","updated":"2025-09-30T03:26:41.719Z","comments":true,"path":"api/articles/LINUX/在Ubuntu 18.04上安装和配置Squid代理.json","keywords":"XuGuangSheng","cover":"/covers/ubuntu-18-04squid.jpg","content":"<h1 id=\"在Ubuntu-18-04上安装和配置Squid代理\"><a href=\"#在Ubuntu-18-04上安装和配置Squid代理\" class=\"headerlink\" title=\"在Ubuntu 18.04上安装和配置Squid代理\"></a>在Ubuntu 18.04上安装和配置Squid代理</h1><p>Squid是功能齐全的缓存代理，支持流行的网络协议，例如HTTP，HTTPS，FTP等。 Squid主要用于通过缓存重复的请求，过滤Web流量和访问受地理限制的内容来提高Web服务器的性能。</p>\n<p>本教程将说明如何在Ubuntu 18.04上设置Squid代理以及配置Firefox和Google Chrome浏览器以使用Squid的步骤。包括使用<a href=\"https://www.myfreax.com/how-to-use-apt-command/\">apt命令安装Squid</a>，配置Squid默认监听端口和ACL访问控制列表，Squid的身份认证，配置UFW防火墙以允许来自远程的连接，配置Chrome&#x2F;Firefox浏览器以使用Squid代理。</p>\n<h2 id=\"在Ubuntu上安装Squid\"><a href=\"#在Ubuntu上安装Squid\" class=\"headerlink\" title=\"在Ubuntu上安装Squid\"></a>在Ubuntu上安装Squid</h2><p>Squid包含在默认的Ubuntu 18.04存储库中。可使用<a href=\"https://www.myfreax.com/how-to-use-apt-command/\">apt命令安装Squid</a>，请使用<a href=\"https://www.myfreax.com/how-to-create-a-sudo-user-on-ubuntu/\">具有sudo权限的用户</a>运行以下命令：</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt <span class=\"keyword\">install</span> squid</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后，Squid服务将自动启动。要验证安装并检查Squid服务是否正在运行，请键入以下命令，以显示服务状态：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo systemctl status squid</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">●</span> <span class=\"attr\">squid.service - LSB:</span> <span class=\"string\">Squid</span> <span class=\"string\">HTTP</span> <span class=\"string\">Proxy</span> <span class=\"string\">version</span> <span class=\"number\">3.</span><span class=\"string\">x</span></span><br><span class=\"line\">   <span class=\"attr\">Loaded:</span> <span class=\"string\">loaded</span> <span class=\"string\">(/etc/init.d/squid;</span> <span class=\"string\">generated)</span></span><br><span class=\"line\">   <span class=\"attr\">Active:</span> <span class=\"string\">active</span> <span class=\"string\">(running)</span> <span class=\"string\">since</span> <span class=\"string\">Thu</span> <span class=\"number\">2019-06-27 11:45:17 </span><span class=\"string\">UTC</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置Squid\"><a href=\"#配置Squid\" class=\"headerlink\" title=\"配置Squid\"></a>配置Squid</h2><p>可以通过编辑<code>/etc/squid/squid.conf</code>文件来配置Squid。您还可以使用独立配置选项的文件，然后通过<code>include</code>指令将其包含在内。配置文件包含了描述每个配置选项注释。进行任何更改之前，最好<a href=\"https://www.myfreax.com/cp-command-in-linux/\">使用cp命令备份原始配置文件</a>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">cp</span> /etc/squid/squid.conf&#123;,.orginal&#125;</span><br></pre></td></tr></table></figure>\n\n<p>要编辑<code>/etc/squid/squid.conf</code>文件，请在<a href=\"https://www.myfreax.com/tag/vim/\">文本编辑器</a>中<a href=\"https://www.myfreax.com/the-basis-of-the-linux-vim-command/\">打开文件</a>：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"keyword\">vim</span> /etc/squid/squid.<span class=\"keyword\">conf</span></span><br></pre></td></tr></table></figure>\n\n<p>默认情况下，Squid在所有网络接口上监听端口<code>3128</code>。如果要更改端口并设置监听的接口&#x2F;网卡，请找到以<code>http_port</code>开头的行，并指定接口IP地址和新端口。如果未指定接口，Squid将在所有接口上侦听。</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Squid normally listens to port 3128</span></span><br><span class=\"line\">http_port <span class=\"variable constant_\">IP_ADDR</span><span class=\"symbol\">:PORT</span></span><br></pre></td></tr></table></figure>\n\n<p>&#x2F;etc&#x2F;squid&#x2F;squid.conf</p>\n<p>对于大多数用户来说，在所有接口和默认端口上运行Squid就可以。在Squid中，您可以使用访问控制列表ACL控制客户端如何访问Web资源。</p>\n<p>默认情况下，Squid仅允许从本地主机访问。如果所有将使用代理的客户端都具有静态IP地址，则可以创建一个ACL，其中将包含允许的IP。我们将创建一个新的专用文件来保存IP，而不是在主配置文件中添加IP地址：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">192.168.33.1</span> </span><br></pre></td></tr></table></figure>\n\n<p>&#x2F;etc&#x2F;squid&#x2F;allowed_ips.txt</p>\n<p>完成后，打开主配置文件并创建一个名为<code>allowed_ips</code>的新ACL，并允许使用<code>http_access</code>指令允许访问该ACL：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"attribute\">acl</span> allowed_ips  src <span class=\"string\">&quot;/etc/squid/allowed_ips.txt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">http_access</span> <span class=\"literal\">allow</span> localhost</span><br><span class=\"line\"><span class=\"attribute\">http_access</span> <span class=\"literal\">allow</span> allowed_ips</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">http_access</span> <span class=\"literal\">deny</span> <span class=\"literal\">all</span></span><br></pre></td></tr></table></figure>\n\n<p>&#x2F;etc&#x2F;squid&#x2F;squid.conf</p>\n<p><code>http_access</code>规则的顺序很重要。确保在<code>http_access deny all</code>之前添加行<code>http_access</code>。</p>\n<p><code>http_access</code>指令的工作方式与防火墙规则类似。 Squid从上到下读取规则，当一个规则匹配时，下面的规则将不进行处理。无论何时对配置文件进行更改，都需要重新启动Squid服务以使更改生效：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo systemctl restart squid</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Squid认证\"><a href=\"#Squid认证\" class=\"headerlink\" title=\"Squid认证\"></a>Squid认证</h2><p>Squid可以使用不同的后端，包括对已认证的<a href=\"https://www.myfreax.com/how-to-install-and-configure-samba-on-ubuntu-18-04/\">Samba</a>，LDAP和HTTP基本身份验证。在本教程中，我们将配置Squid以使用基本身份验证。这是HTTP协议中内置的一种简单的身份验证方法。</p>\n<p>我们将使用<code>openssl</code>生成密码，并使用<code>[tee](https://www.myfreax.com/linux-tee-command/)</code>命令将<code>username:password</code>对追加到<code>/etc/squid/htpasswd</code>文件，如下所示：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">&quot;USERNAME:<span class=\"subst\">$(openssl passwd -crypt PASSWORD)</span>\\n&quot;</span> | sudo <span class=\"built_in\">tee</span> -a /etc/squid/htpasswd</span><br></pre></td></tr></table></figure>\n\n<p>让我们创建一个名为josh的用户，其密码设置为<code>Sz$Zdg69</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span> <span class=\"string\">&quot;josh:<span class=\"subst\">$(openssl passwd -crypt &#x27;Sz$Zdg69&#x27;)</span>\\n&quot;</span> | sudo <span class=\"built_in\">tee</span> -a /etc/squid/htpasswd</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">josh:Rrvg<span class=\"meta\">O7</span><span class=\"symbol\">NxY86</span>VM</span><br></pre></td></tr></table></figure>\n\n<p>现在已创建用户，下一步是启用HTTP基本身份验证并包含<code>htpasswd</code>文件。<a href=\"https://www.myfreax.com/the-basis-of-the-linux-vim-command/\">使用vim打开文件</a><code>/etc/squid/squid.conf</code>并添加以下内容：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"attribute\">auth_param</span> basic program /usr/lib/squid3/basic_ncsa_auth /etc/squid/htpasswd</span><br><span class=\"line\"><span class=\"attribute\">auth_param</span> basic realm proxy</span><br><span class=\"line\"><span class=\"attribute\">acl</span> authenticated proxy_auth REQUIRED</span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\">#http_access allow localnet</span></span><br><span class=\"line\"><span class=\"attribute\">http_access</span> <span class=\"literal\">allow</span> localhost</span><br><span class=\"line\"><span class=\"attribute\">http_access</span> <span class=\"literal\">allow</span> authenticated</span><br><span class=\"line\"><span class=\"comment\"># And finally deny all other access to this proxy</span></span><br><span class=\"line\"><span class=\"attribute\">http_access</span> <span class=\"literal\">deny</span> <span class=\"literal\">all</span></span><br></pre></td></tr></table></figure>\n\n<p>这将创建一个名为<code>authenticated</code>的新ACL，允许访问经过身份验证的用户。重新启动Squid服务：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo systemctl restart squid</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置防火墙\"><a href=\"#配置防火墙\" class=\"headerlink\" title=\"配置防火墙\"></a>配置防火墙</h2><p>假设您正在使用<a href=\"https://www.myfreax.com/how-to-setup-a-firewall-with-ufw-on-ubuntu-18-04/\"><code>UFW</code></a>防火墙管理工具，则需要打开Squid端口。为此，请启用Squid配置文件，其中包含了默认Squid端口的规则。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo</span> ufw allow <span class=\"string\">&#x27;Squid&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>要验证状态类型：</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo ufw status</span></span><br></pre></td></tr></table></figure>\n\n<p>输出将类似于以下内容：</p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Status:</span> active</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">To</span>                         Action      From</span><br><span class=\"line\">--                         ------      ----</span><br><span class=\"line\"><span class=\"number\">22</span>/tcp                     ALLOW       Anywhere</span><br><span class=\"line\"><span class=\"symbol\">Squid</span>                      ALLOW       Anywhere            </span><br><span class=\"line\"><span class=\"number\">22</span>/tcp (<span class=\"built_in\">v6</span>)                ALLOW       Anywhere (<span class=\"built_in\">v6</span>)             </span><br><span class=\"line\"><span class=\"symbol\">Squid</span> (<span class=\"built_in\">v6</span>)                 ALLOW       Anywhere (<span class=\"built_in\">v6</span>)  </span><br></pre></td></tr></table></figure>\n\n<p>如果Squid正在另一个非默认端口上运行，例如<code>8888</code>，则可以使用以下命令允许该端口上的流量：<code>sudo ufw allow 8888/tcp</code>。</p>\n<h2 id=\"配置浏览器以使用Squid代理\"><a href=\"#配置浏览器以使用Squid代理\" class=\"headerlink\" title=\"配置浏览器以使用Squid代理\"></a>配置浏览器以使用Squid代理</h2><p>现在您已经设置了Squid，最后一步是配置您喜欢的浏览器以使用Squid代理。</p>\n<h3 id=\"Firefox\"><a href=\"#Firefox\" class=\"headerlink\" title=\"Firefox\"></a>Firefox</h3><p>在右上角，单击汉堡包图标<code>☰</code>以打开Firefox的菜单，单击<code>⚙ Preferences</code>链接。向下滚动到<code>Network Settings</code>部分，然后单击<code>Settings...</code>按钮。</p>\n<p>将打开一个新窗口。选择<code>Manual proxy configuration</code>单选按钮，在<code>HTTP Host</code>字段中输入您的Squid服务器IP地址，在<code>Port</code>字段中输入<code>3128</code>。选中<code>Use this proxy server for all protocols</code>复选框。单击<code>OK</code>按钮保存设置。</p>\n<p>至此，您的Firefox已配置完毕，您可以通过Squid代理浏览Internet。要验证它，请打开<code>google.com</code>，键入what is my ip，您应该会看到自己的Squid服务器IP地址。</p>\n<p>要恢复为默认设置，请转到<code>Network Settings</code>，选择<code>Use system proxy settings</code>单选按钮并保存设置。有几个插件也可以帮助您配置Firefox的代理设置，例如 <a href=\"https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/\">FoxyProxy</a>。</p>\n<h3 id=\"Google-Chrome浏览器\"><a href=\"#Google-Chrome浏览器\" class=\"headerlink\" title=\"Google Chrome浏览器\"></a>Google Chrome浏览器</h3><p>Google Chrome默认使用系统代理设置。您也可以使用<a href=\"https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif\">SwitchyOmega</a>之类的插件，也可以从命令行启动Chrome网络浏览器。无需更改操作系统代理设置。要使用新的配置文件启动Chrome并连接到Squid服务器，请使用以下命令：</p>\n<p><strong>Linux</strong></p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">/usr/bin/google-chrome</span> \\</span><br><span class=\"line\">    <span class=\"params\">--user-data-dir=</span><span class=\"string\">&quot;$HOME/proxy-profile&quot;</span> \\</span><br><span class=\"line\">    <span class=\"params\">--proxy-server=</span><span class=\"string\">&quot;http://SQUID_IP:3128&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>macOS</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;/Applications/Google Chrome.app/Contents/MacOS/Google Chrome&quot;</span> \\</span><br><span class=\"line\">    <span class=\"attribute\">--user-data-dir</span>=<span class=\"string\">&quot;<span class=\"variable\">$HOME</span>/proxy-profile&quot;</span> \\</span><br><span class=\"line\">    <span class=\"attribute\">--proxy-server</span>=<span class=\"string\">&quot;http://SQUID_IP:3128&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Windows</strong></p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&quot;</span> ^</span><br><span class=\"line\">    <span class=\"params\">--user-data-dir=</span><span class=\"string\">&quot;%USERPROFILE%\\proxy-profile&quot;</span> ^</span><br><span class=\"line\">    <span class=\"params\">--proxy-server=</span><span class=\"string\">&quot;http://SQUID_IP:3128&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果配置文件不存在，则会自动创建。要确认代理服务器正常工作，请打开<code>google.com</code>，然后键入what is my ip。浏览器中显示的IP应该是Squid服务器的IP地址。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>您已了解如何在Ubuntu 18.04上安装Squid并配置浏览器以使用它。Squid是最流行的代理缓存服务器之一。它提高了Web服务器的速度，可以帮助您限制用户访问Internet。如果您遇到问题或有反馈，请在下面发表评论。</p>\n","text":"在Ubuntu 18.04上安装和配置Squid代理Squid是功能齐全的缓存代理，支持流行的网络协议，例如HTTP，HTTPS，FTP等。 Squid主要用于...","permalink":"/post/LINUX/在Ubuntu 18.04上安装和配置Squid代理","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Squid","slug":"Squid","count":1,"path":"api/categories/Squid.json"},{"name":"LINUX","slug":"Squid/LINUX","count":1,"path":"api/categories/Squid/LINUX.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"squid","slug":"squid","count":1,"path":"api/tags/squid.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9C%A8Ubuntu-18-04%E4%B8%8A%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AESquid%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">在Ubuntu 18.04上安装和配置Squid代理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8Ubuntu%E4%B8%8A%E5%AE%89%E8%A3%85Squid\"><span class=\"toc-text\">在Ubuntu上安装Squid</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AESquid\"><span class=\"toc-text\">配置Squid</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Squid%E8%AE%A4%E8%AF%81\"><span class=\"toc-text\">Squid认证</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E9%98%B2%E7%81%AB%E5%A2%99\"><span class=\"toc-text\">配置防火墙</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%A5%E4%BD%BF%E7%94%A8Squid%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">配置浏览器以使用Squid代理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Firefox\"><span class=\"toc-text\">Firefox</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Google-Chrome%E6%B5%8F%E8%A7%88%E5%99%A8\"><span class=\"toc-text\">Google Chrome浏览器</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">结论</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"nginx--❤️图解及代码实现正向代理、反向代理及负载均衡","uid":"7c8ff8b55627526d1305ad59c430dd58","slug":"MIDDLEWARE/nginx--❤️图解及代码实现正向代理、反向代理及负载均衡","date":"2022-09-15T10:07:03.000Z","updated":"2025-09-30T03:26:53.541Z","comments":true,"path":"api/articles/MIDDLEWARE/nginx--❤️图解及代码实现正向代理、反向代理及负载均衡.json","keywords":"XuGuangSheng","cover":"/covers/nginx.jpg","text":"nginx–❤️图解及代码实现正向代理、反向代理及负载均衡什么是nginx？ 【百度百科】Nginx (engine x) 是一个高性能的HTTP和反向代理web...","permalink":"/post/MIDDLEWARE/nginx--❤️图解及代码实现正向代理、反向代理及负载均衡","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"nginx","slug":"nginx","count":3,"path":"api/categories/nginx.json"},{"name":"MIDDLEWARE","slug":"nginx/MIDDLEWARE","count":2,"path":"api/categories/nginx/MIDDLEWARE.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"http","slug":"http","count":6,"path":"api/tags/http.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Linux配置http代理","uid":"629c251c0c483276f62c67636b6a5d8b","slug":"LINUX/Linux配置http代理","date":"2022-09-14T17:44:07.000Z","updated":"2025-09-30T03:26:34.555Z","comments":true,"path":"api/articles/LINUX/Linux配置http代理.json","keywords":"XuGuangSheng","cover":"/covers/linuxhttp.jpg","text":"Linux配置http代理我们可以在很多地方设置Proxy，生产环境中最常见的还是在应用中直接调用一些库来为应用设置Proxy，但在测试Proxy的时候，就需要...","permalink":"/post/LINUX/Linux配置http代理","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"proxy","slug":"proxy","count":1,"path":"api/categories/proxy.json"},{"name":"LINUX","slug":"proxy/LINUX","count":1,"path":"api/categories/proxy/LINUX.json"}],"tags":[{"name":"HTTP","slug":"HTTP","count":2,"path":"api/tags/HTTP.json"},{"name":"Socks","slug":"Socks","count":1,"path":"api/tags/Socks.json"},{"name":"http","slug":"http","count":6,"path":"api/tags/http.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}