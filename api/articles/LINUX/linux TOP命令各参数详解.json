{"title":"linux TOP命令各参数详解","uid":"c4719cbd659f86d7d7d8c9fcfcd72c3e","slug":"LINUX/linux TOP命令各参数详解","date":"2024-01-18T11:57:19.000Z","updated":"2025-09-30T03:26:37.658Z","comments":true,"path":"api/articles/LINUX/linux TOP命令各参数详解.json","keywords":"XuGuangSheng","cover":"/covers/linux-top.jpg","content":"<h1 id=\"linux-TOP命令各参数详解\"><a href=\"#linux-TOP命令各参数详解\" class=\"headerlink\" title=\"linux TOP命令各参数详解\"></a>linux TOP命令各参数详解</h1><p>[toc]</p>\n<p>TOP是一个动态显示过程,即可以通过用户按键来不断刷新当前状态.如果在前台执行该命令,它将独占前台,直到用户终止该程序为止.比较准确的说,top命令提供了实时的对系统处理器的状态监视.</p>\n<p>下面是使用top命令来进行性能检测的截图：</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/1/9/16f88a105429976f~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.png\"></p>\n<h3 id=\"各参数含义\"><a href=\"#各参数含义\" class=\"headerlink\" title=\"各参数含义\"></a><a href=\"https://link.juejin.cn/?target=\"></a>各参数含义</h3><h2 id=\"一、top前5行统计信息\"><a href=\"#一、top前5行统计信息\" class=\"headerlink\" title=\"一、top前5行统计信息\"></a>一、top前5行统计信息</h2><p><strong>第1行：</strong>  <em>top - 05:43:27 up 4:52, 2 users, load average: 0.58, 0.41, 0.30</em> 第1行是任务队列信息，其参数如下：</p>\n<table>\n<thead>\n<tr>\n<th>内容</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>05:43:27</td>\n<td>表示当前时间</td>\n</tr>\n<tr>\n<td>up 4:52</td>\n<td>系统运行时间 格式为时：分</td>\n</tr>\n<tr>\n<td>2 users</td>\n<td>当前登录用户数</td>\n</tr>\n<tr>\n<td>load average: 0.58, 0.41, 0.30</td>\n<td>系统负载，即任务队列的平均长度。 三个数值分别为 1分钟、5分钟、15分钟前到现在的平均值。</td>\n</tr>\n</tbody></table>\n<p>load average: 如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了。  </p>\n<p><strong>第2行：</strong>  <em>Tasks: 159 total, 1 running, 158 sleeping, 0 stopped, 0 zombie</em> <strong>第3行：</strong>  <em>%Cpu(s): 37.0 us, 3.7 sy, 0.0 ni, 59.3 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st</em> 第2、3行为进程和CPU的信息<br>当有多个CPU时，这些内容可能会超过两行，其参数如下：</p>\n<table>\n<thead>\n<tr>\n<th>内容</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>159 total</td>\n<td>进程总数</td>\n</tr>\n<tr>\n<td>1 running</td>\n<td>正在运行的进程数</td>\n</tr>\n<tr>\n<td>158 sleeping</td>\n<td>睡眠的进程数</td>\n</tr>\n<tr>\n<td>0 stopped</td>\n<td>停止的进程数</td>\n</tr>\n<tr>\n<td>0 zombie</td>\n<td>僵尸进程数</td>\n</tr>\n<tr>\n<td>37.0 us</td>\n<td>用户空间占用CPU百分比</td>\n</tr>\n<tr>\n<td>3.7 sy</td>\n<td>内核空间占用CPU百分比</td>\n</tr>\n<tr>\n<td><strong>0.0 ni</strong></td>\n<td>用户进程空间内改变过优先级的进程占用CPU百分比</td>\n</tr>\n<tr>\n<td>59.3 id</td>\n<td>空闲CPU百分比</td>\n</tr>\n<tr>\n<td>0.0 wa</td>\n<td>等待输入输出的CPU时间百分比</td>\n</tr>\n<tr>\n<td><strong>0.0 hi</strong></td>\n<td>硬中断（Hardware IRQ）占用CPU的百分比,CPU服务于硬中断所耗费的时间总额</td>\n</tr>\n<tr>\n<td><strong>0.0 si、0.0 st</strong></td>\n<td>CPU服务于软中断所耗费的时间总额、Steal Time</td>\n</tr>\n</tbody></table>\n<p><strong>第4行：</strong>  <em>KiB Mem: 1530752 total, 1481968 used, 48784 free, 70988 buffers</em> <strong>第5行：</strong>  <em>KiB Swap: 3905532 total, 267544 used, 3637988 free. 617312 cached Mem</em> 第4、5行为内存信息<br>其参数如下：</p>\n<table>\n<thead>\n<tr>\n<th>内容</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>KiB Mem: 1530752 total</td>\n<td>物理内存总量</td>\n</tr>\n<tr>\n<td>1481968 used</td>\n<td>使用的物理内存总量</td>\n</tr>\n<tr>\n<td>48784 free</td>\n<td>空闲内存总量</td>\n</tr>\n<tr>\n<td>70988 buffers</td>\n<td>用作内核缓存的内存量</td>\n</tr>\n<tr>\n<td>KiB Swap: 3905532 total</td>\n<td>交换区总量</td>\n</tr>\n<tr>\n<td>267544 used</td>\n<td>使用的交换区总量</td>\n</tr>\n<tr>\n<td>3637988 free</td>\n<td>空闲交换区总量</td>\n</tr>\n<tr>\n<td>617312 cached Mem</td>\n<td>缓冲的交换区总量。</td>\n</tr>\n</tbody></table>\n<p>上述最后提到的缓冲的交换区总量，这里解释一下，所谓缓冲的交换区总量，即内存中的内容被换出到交换区，而后又被换入到内存，但使用过的交换区尚未被覆盖，该数值即为这些内容已存在于内存中的交换区的大小。相应的内存再次被换出时可不必再对交换区写入。</p>\n<p>计算可用内存数有一个近似的公式：<br>第四行的free + 第四行的buffers + 第五行的cached</p>\n<h2 id=\"二、进程信息\"><a href=\"#二、进程信息\" class=\"headerlink\" title=\"二、进程信息\"></a>二、进程信息</h2><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>PID</td>\n<td>进程id</td>\n</tr>\n<tr>\n<td>PPID</td>\n<td>父进程id</td>\n</tr>\n<tr>\n<td>RUSER</td>\n<td>Real user name</td>\n</tr>\n<tr>\n<td>UID</td>\n<td>进程所有者的用户id</td>\n</tr>\n<tr>\n<td>USER</td>\n<td>进程所有者的用户名</td>\n</tr>\n<tr>\n<td>GROUP</td>\n<td>进程所有者的组名</td>\n</tr>\n<tr>\n<td>TTY</td>\n<td>启动进程的终端名。不是从终端启动的进程则显示为 ?</td>\n</tr>\n<tr>\n<td>PR</td>\n<td>优先级</td>\n</tr>\n<tr>\n<td>NI</td>\n<td>nice值。负值表示高优先级，正值表示低优先级</td>\n</tr>\n<tr>\n<td>P</td>\n<td>最后使用的CPU，仅在多CPU环境下有意义</td>\n</tr>\n<tr>\n<td>%CPU</td>\n<td>上次更新到现在的CPU时间占用百分比</td>\n</tr>\n<tr>\n<td>TIME</td>\n<td>进程使用的CPU时间总计，单位秒</td>\n</tr>\n<tr>\n<td>TIME+</td>\n<td>进程使用的CPU时间总计，单位1&#x2F;100秒</td>\n</tr>\n<tr>\n<td>%MEM</td>\n<td>进程使用的物理内存百分比</td>\n</tr>\n<tr>\n<td>VIRT</td>\n<td>进程使用的虚拟内存总量，单位kb。VIRT&#x3D;SWAP+RES</td>\n</tr>\n<tr>\n<td>SWAP</td>\n<td>进程使用的虚拟内存中，被换出的大小，单位kb</td>\n</tr>\n<tr>\n<td>RES</td>\n<td>进程使用的、未被换出的物理内存大小，单位kb。RES&#x3D;CODE+DATA</td>\n</tr>\n<tr>\n<td>CODE</td>\n<td>可执行代码占用的物理内存大小，单位kb</td>\n</tr>\n<tr>\n<td>DATA</td>\n<td>可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb</td>\n</tr>\n<tr>\n<td>SHR</td>\n<td>共享内存大小，单位kb</td>\n</tr>\n<tr>\n<td>nFLT</td>\n<td>页面错误次数</td>\n</tr>\n<tr>\n<td>nDRT</td>\n<td>最后一次写入到现在，被修改过的页面数。</td>\n</tr>\n<tr>\n<td>S</td>\n<td>进程状态。D&#x3D;不可中断的睡眠状态 R&#x3D;运行 S&#x3D;睡眠 T&#x3D;跟踪&#x2F;停止 Z&#x3D;僵尸进程</td>\n</tr>\n<tr>\n<td>COMMAND</td>\n<td>命令名&#x2F;命令行</td>\n</tr>\n<tr>\n<td>WCHAN</td>\n<td>若该进程在睡眠，则显示睡眠中的系统函数名</td>\n</tr>\n<tr>\n<td>Flags</td>\n<td>任务标志</td>\n</tr>\n</tbody></table>\n<p>默认情况下仅显示比较重要的 PID、USER、PR、NI、VIRT、RES、SHR、S、%CPU、%MEM、TIME+、COMMAND 几个列！</p>\n<p>  可以通过下面的快捷键来更改显示内容：   更改显示内容通过 <strong>f</strong> 键可以选择显示的内容（按 <strong>f</strong> 键之后会显示列的列表，按 a-z 即可显示或隐藏对应的列，最后按回车键确定）   按 <strong>o</strong> 键可以改变列的显示顺序（按小写的 <strong>a-z</strong> 可以将相应的列向右移动，而大写的 A-Z 可以将相应的列向左移动，最后按回车键确定）   按大写的 <strong>F 或 O</strong> 键，然后按 <strong>a-z</strong> 可以将进程按照相应的列进行排序，而大写的 R 键可以将当前的排序倒转.</p>\n<h2 id=\"三、-使用技巧\"><a href=\"#三、-使用技巧\" class=\"headerlink\" title=\"三、 使用技巧\"></a>三、 使用技巧</h2><p>1.top命令默认值显示前面一部分的进程，若是想要查看全部的进程信息，则需要使用命令：<code>top -ab -n 1</code>，在这个命令中，a表示按内存倒序排列，b表示将所有列输出，n表示只执行一次。</p>\n<p>2.在使用<code>top -ab -n 1</code>将所有进程信息输出之后，可以使用AWK等类似工具统计信息，例如：统计出COMMAND为httpd的所有进程占用的内存。</p>\n<p>3.也可以使用命令<code>top -an -n 1 | grep httpd</code>，查看所有httpd的进程信息，如下图：</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/1/9/16f88a1056d218bb~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.png\"></p>\n<p>4. 常用命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top   // 每隔<span class=\"number\">5</span>秒显式所有进程的资源占用情况</span><br><span class=\"line\">top <span class=\"literal\">-d</span> <span class=\"number\">2</span>  // 每隔<span class=\"number\">2</span>秒显式所有进程的资源占用情况</span><br><span class=\"line\">top <span class=\"literal\">-c</span>  // 每隔<span class=\"number\">5</span>秒显式进程的资源占用情况，并显示进程的命令行参数(默认只有进程名)</span><br><span class=\"line\">top <span class=\"literal\">-p</span> <span class=\"number\">12345</span> <span class=\"literal\">-p</span> <span class=\"number\">6789</span>// 每隔<span class=\"number\">5</span>秒显示pid是<span class=\"number\">12345</span>和pid是<span class=\"number\">6789</span>的两个进程的资源占用情况</span><br><span class=\"line\">top <span class=\"literal\">-d</span> <span class=\"number\">2</span> <span class=\"literal\">-c</span> <span class=\"literal\">-p</span> <span class=\"number\">123456</span> // 每隔<span class=\"number\">2</span>秒显示pid是<span class=\"number\">12345</span>的进程的资源使用情况，并显式该进程启动的命令行参数</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","text":"linux TOP命令各参数详解[toc] TOP是一个动态显示过程,即可以通过用户按键来不断刷新当前状态.如果在前台执行该命令,它将独占前台,直到用户终止该程...","permalink":"/post/LINUX/linux TOP命令各参数详解","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"CPU","slug":"CPU","count":5,"path":"api/categories/CPU.json"},{"name":"LINUX","slug":"CPU/LINUX","count":4,"path":"api/categories/CPU/LINUX.json"}],"tags":[{"name":"top","slug":"top","count":1,"path":"api/tags/top.json"},{"name":"单位","slug":"单位","count":1,"path":"api/tags/单位.json"},{"name":"total","slug":"total","count":2,"path":"api/tags/total.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#linux-TOP%E5%91%BD%E4%BB%A4%E5%90%84%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">linux TOP命令各参数详解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%84%E5%8F%82%E6%95%B0%E5%90%AB%E4%B9%89\"><span class=\"toc-text\">各参数含义</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81top%E5%89%8D5%E8%A1%8C%E7%BB%9F%E8%AE%A1%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">一、top前5行统计信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E8%BF%9B%E7%A8%8B%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">二、进程信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7\"><span class=\"toc-text\">三、 使用技巧</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"如何在 Docker 容器中使用 systemctl","uid":"cf58df7d33c8bd4e506c71804d861dcc","slug":"OCI/如何在 Docker 容器中使用 systemctl","date":"2024-01-29T14:59:56.000Z","updated":"2025-09-30T03:27:00.674Z","comments":true,"path":"api/articles/OCI/如何在 Docker 容器中使用 systemctl.json","keywords":"XuGuangSheng","cover":"/covers/docker-systemctl.jpg","text":"如何在 Docker 容器中使用 systemctl我们有时在使用 docker 的时候，会发现在容器中使用 systemctl 或者 service 的时候，...","permalink":"/post/OCI/如何在 Docker 容器中使用 systemctl","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"systemctl","slug":"systemctl","count":1,"path":"api/categories/systemctl.json"},{"name":"OCI","slug":"systemctl/OCI","count":1,"path":"api/categories/systemctl/OCI.json"}],"tags":[{"name":"docker","slug":"docker","count":4,"path":"api/tags/docker.json"},{"name":"systemd","slug":"systemd","count":1,"path":"api/tags/systemd.json"},{"name":"the","slug":"the","count":1,"path":"api/tags/the.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Elasticsearch中如何进行日期(数值)范围查询","uid":"4bd9e9434ed4ab6b72d76312de1a0204","slug":"MIDDLEWARE/Elasticsearch中如何进行日期(数值)范围查询","date":"2024-01-09T13:56:38.000Z","updated":"2025-09-30T03:26:45.854Z","comments":true,"path":"api/articles/MIDDLEWARE/Elasticsearch中如何进行日期(数值)范围查询.json","keywords":"XuGuangSheng","cover":"/covers/elasticsearch.jpg","text":"Elasticsearch中如何进行日期(数值)范围查询 符号 含义 gte greater-than or equal to, 大于或等于 gt greate...","permalink":"/post/MIDDLEWARE/Elasticsearch中如何进行日期(数值)范围查询","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"now","slug":"now","count":1,"path":"api/categories/now.json"},{"name":"MIDDLEWARE","slug":"now/MIDDLEWARE","count":1,"path":"api/categories/now/MIDDLEWARE.json"}],"tags":[{"name":"结果是","slug":"结果是","count":1,"path":"api/tags/结果是.json"},{"name":"小时","slug":"小时","count":1,"path":"api/tags/小时.json"},{"name":"than","slug":"than","count":1,"path":"api/tags/than.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}