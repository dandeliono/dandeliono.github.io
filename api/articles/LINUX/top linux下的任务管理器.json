{"title":"top linux下的任务管理器","uid":"549d64a763c7476fdfa760218054955e","slug":"LINUX/top linux下的任务管理器","date":"2021-08-23T17:12:55.000Z","updated":"2025-09-30T03:26:40.185Z","comments":true,"path":"api/articles/LINUX/top linux下的任务管理器.json","keywords":"XuGuangSheng","cover":"/covers/top-linux.jpg","content":"<h1 id=\"top-linux下的任务管理器\"><a href=\"#top-linux下的任务管理器\" class=\"headerlink\" title=\"top linux下的任务管理器\"></a>top linux下的任务管理器</h1><p><a href=\"https://linuxtools-rst.readthedocs.io/zh_CN/latest/index.html\">Linux Tools Quick Tutorial</a></p>\n<p>top 命令是 Linux 下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于 Windows 的任务管理器。top 是一个动态显示过程, 即可以通过用户按键来不断刷新当前状态. 如果在前台执行该命令, 它将独占前台, 直到用户终止该程序为止. 比较准确的说, top 命令提供了实时的对系统处理器的状态监视. 它将显示系统中 CPU 最 “敏感” 的任务列表. 该命令可以按 CPU 使用. 内存使用和执行时间对任务进行排序；而且该命令的很多特性都可以通过交互式命令或者在个人定制文件中进行设定。</p>\n<p>$top<br>    top - 09:14:56 up 264 days, 20:56,  1 user,  load average: 0.02, 0.04, 0.00<br>    Tasks:  87 total,   1 running,  86 sleeping,   0 stopped,   0 zombie<br>    Cpu(s):  0.0%us,  0.2%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.2%st<br>    Mem:    377672k total,   322332k used,    55340k free,    32592k buffers<br>    Swap:   397308k total,    67192k used,   330116k free,    71900k cached<br>    PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND<br>    1 root      20   0  2856  656  388 S  0.0  0.2   0:49.40 init<br>    2 root      20   0     0    0    0 S  0.0  0.0   0:00.00 kthreadd<br>    3 root      20   0     0    0    0 S  0.0  0.0   7:15.20 ksoftirqd&#x2F;0<br>    4 root      RT   0     0    0    0 S  0.0  0.0   0:00.00 migration&#x2F;0</p>\n<ul>\n<li><p>第一行</p>\n<ul>\n<li>09:14:56 ： 系统当前时间</li>\n<li>264 days, 20:56 ： 系统开机到现在经过了多少时间</li>\n<li>1 users ： 当前 2 用户在线</li>\n<li>load average: 0.02, 0.04, 0.00： 系统 1 分钟、5 分钟、15 分钟的 CPU 负载信息</li>\n</ul>\n</li>\n<li><p>第二行</p>\n<ul>\n<li>Tasks：任务;</li>\n<li>87 total：很好理解，就是当前有 87 个任务，也就是 87 个进程。</li>\n<li>1 running：1 个进程正在运行</li>\n<li>86 sleeping：86 个进程睡眠</li>\n<li>0 stopped：停止的进程数</li>\n<li>0 zombie：僵死的进程数</li>\n</ul>\n</li>\n<li><p>第三行</p>\n<ul>\n<li>Cpu(s)：表示这一行显示 CPU 总体信息</li>\n<li>0.0%us：用户态进程占用 CPU 时间百分比，不包含 renice 值为负的任务占用的 CPU 的时间。</li>\n<li>0.7%sy：内核占用 CPU 时间百分比</li>\n<li>0.0%ni：改变过优先级的进程占用 CPU 的百分比</li>\n<li>99.3%id：空闲 CPU 时间百分比</li>\n<li>0.0%wa：等待 I&#x2F;O 的 CPU 时间百分比</li>\n<li>0.0%hi：CPU 硬中断时间百分比</li>\n<li>0.0%si：CPU 软中断时间百分比</li>\n<li>注：这里显示数据是所有 cpu 的平均值，如果想看每一个 cpu 的处理情况，按 1 即可；折叠，再次按 1；</li>\n</ul>\n</li>\n<li><p>第四行</p>\n<ul>\n<li>Men：内存的意思</li>\n<li>8175320kk total：物理内存总量</li>\n<li>8058868k used：使用的物理内存量</li>\n<li>116452k free：空闲的物理内存量</li>\n<li>283084k buffers：用作内核缓存的物理内存量</li>\n</ul>\n</li>\n<li><p>第五行</p>\n<ul>\n<li>Swap：交换空间</li>\n<li>6881272k total：交换区总量</li>\n<li>4010444k used：使用的交换区量</li>\n<li>2870828k free：空闲的交换区量</li>\n<li>4336992k cached：缓冲交换区总量</li>\n</ul>\n</li>\n<li><p>进程信息</p>\n<ul>\n<li>再下面就是进程信息：</li>\n<li>PID：进程的 ID</li>\n<li>USER：进程所有者</li>\n<li>PR：进程的优先级别，越小越优先被执行</li>\n<li>NInice：值</li>\n<li>VIRT：进程占用的虚拟内存</li>\n<li>RES：进程占用的物理内存</li>\n<li>SHR：进程使用的共享内存</li>\n<li>S：进程的状态。S 表示休眠，R 表示正在运行，Z 表示僵死状态，N 表示该进程优先值为负数</li>\n<li>%CPU：进程占用 CPU 的使用率</li>\n<li>%MEM：进程使用的物理内存和总内存的百分比</li>\n<li>TIME+：该进程启动后占用的总的 CPU 时间，即占用 CPU 使用时间的累加值。</li>\n<li>COMMAND：进程启动命令名称</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"8-1-top-命令交互操作指令¶\"><a href=\"#8-1-top-命令交互操作指令¶\" class=\"headerlink\" title=\"8.1. top 命令交互操作指令¶\"></a>8.1. top 命令交互操作指令<a href=\"#id1\" title=\"永久链接至标题\">¶</a></h2><p>下面列出一些常用的 top 命令操作指令</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>q：退出 top 命令</li>\n<li><Space>：立即刷新</li>\n<li>s：设置刷新时间间隔</li>\n<li>c：显示命令完全模式</li>\n<li>t:：显示或隐藏进程和 CPU 状态信息</li>\n<li>m：显示或隐藏内存状态信息</li>\n<li>l：显示或隐藏 uptime 信息</li>\n<li>f：增加或减少进程显示标志</li>\n<li>S：累计模式，会把已完成或退出的子进程占用的 CPU 时间累计到父进程的 MITE+</li>\n<li>P：按 %CPU 使用率排行</li>\n<li>T：按 MITE + 排行</li>\n<li>M：按 %MEM 排行</li>\n<li>u：指定显示用户进程</li>\n<li>r：修改进程 renice 值</li>\n<li>kkill：进程</li>\n<li>i：只显示正在运行的进程</li>\n<li>W：保存对 top 的设置到文件 ^&#x2F;.toprc，下次启动将自动调用 toprc 文件的设置。</li>\n<li>h：帮助命令。</li>\n<li>q：退出</li>\n</ul></blockquote>\n<p>注：强调一下，使用频率最高的是 P、T、M，因为通常使用 top，我们就想看看是哪些进程最耗 cpu 资源、占用的内存最多； 注：通过”shift + &gt;” 或”shift + &lt;” 可以向右或左改变排序列 如果只需要查看内存：可用 free 命令。只查看 uptime 信息（第一行），可用 uptime 命令；</p>\n<h2 id=\"8-2-实例¶\"><a href=\"#8-2-实例¶\" class=\"headerlink\" title=\"8.2. 实例¶\"></a>8.2. 实例<a href=\"#id2\" title=\"永久链接至标题\">¶</a></h2><h3 id=\"实例-1：多核-CPU-监控¶\"><a href=\"#实例-1：多核-CPU-监控¶\" class=\"headerlink\" title=\"实例 1：多核 CPU 监控¶\"></a>实例 1：多核 CPU 监控<a href=\"#cpu\" title=\"永久链接至标题\">¶</a></h3><p>在 top 基本视图中，按键盘数字 “1”，可监控每个逻辑 CPU 的状况；</p>\n<p>[rdtfr@bl685cb4-t ^]$ top<br>top - 09:10:44 up 20 days, 16:51,  4 users,  load average: 3.82, 4.40, 4.40<br>Tasks: 1201 total,  10 running, 1189 sleeping,   0 stopped,   2 zombie<br>Cpu0  :  1.3%us,  2.3%sy,  0.0%ni, 96.4%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st<br>Cpu1  :  1.3%us,  2.6%sy,  0.0%ni, 96.1%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st<br>Cpu2  :  1.0%us,  2.0%sy,  0.0%ni, 92.5%id,  0.0%wa,  0.0%hi,  4.6%si,  0.0%st<br>Cpu3  :  3.9%us,  7.8%sy,  0.0%ni, 83.2%id,  0.0%wa,  0.0%hi,  5.2%si,  0.0%st<br>Cpu4  :  4.2%us, 10.4%sy,  0.0%ni, 63.8%id,  0.0%wa,  0.0%hi, 21.5%si,  0.0%st<br>Cpu5  :  6.8%us, 12.7%sy,  0.0%ni, 80.5%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st<br>Cpu6  :  2.9%us,  7.2%sy,  0.0%ni, 85.3%id,  0.0%wa,  0.0%hi,  4.6%si,  0.0%st<br>Cpu7  :  6.2%us, 13.0%sy,  0.0%ni, 75.3%id,  0.0%wa,  0.0%hi,  5.5%si,  0.0%st<br>Mem:  32943888k total, 32834216k used,   109672k free,   642704k buffers<br>Swap: 35651576k total,  5761928k used, 29889648k free, 16611500k cached</p>\n<h3 id=\"实例-2：高亮显示当前运行进程¶\"><a href=\"#实例-2：高亮显示当前运行进程¶\" class=\"headerlink\" title=\"实例 2：高亮显示当前运行进程¶\"></a>实例 2：高亮显示当前运行进程<a href=\"#id3\" title=\"永久链接至标题\">¶</a></h3><p>在 top 基本视图中, 按键盘 “b”（打开 &#x2F; 关闭加亮效果）；</p>\n<h3 id=\"实例-3：显示完整的程序命令¶\"><a href=\"#实例-3：显示完整的程序命令¶\" class=\"headerlink\" title=\"实例 3：显示完整的程序命令¶\"></a>实例 3：显示完整的程序命令<a href=\"#id4\" title=\"永久链接至标题\">¶</a></h3><p>命令：top -c</p>\n<p>[rdtfr@bl685cb4-t ^]$ top -c<br>top - 09:14:35 up 20 days, 16:55,  4 users,  load average: 5.77, 5.01, 4.64<br>Tasks: 1200 total,   5 running, 1192 sleeping,   0 stopped,   3 zombie<br>Cpu(s):  4.4%us,  6.0%sy,  0.0%ni, 83.8%id,  0.2%wa,  0.0%hi,  5.5%si,  0.0%st<br>Mem:  32943888k total, 32842896k used,   100992k free,   591484k buffers<br>Swap: 35651576k total,  5761808k used, 29889768k free, 16918824k cached<br>PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND<br>2013 apache    18   0  403m  88m 5304 S 25.0  0.3   6:37.44 &#x2F;usr&#x2F;sbin&#x2F;httpd<br>18335 pubtest   22   0 65576  996  728 R  7.8  0.0   0:00.24 netstat -naltp<br>16499 rdtfare   15   0 13672 2080  824 R  2.6  0.0   0:00.38 top -c<br>29684 rdtfare   15   0 1164m 837m  14m S  2.3  2.6 148:47.54 .&#x2F;autodata data1.txt<br>12976 pubtest   18   0  238m 9000 1932 S  1.6  0.0 439:28.44 tscagent -s TOEV_P</p>\n<h3 id=\"实例-4：显示指定的进程信息¶\"><a href=\"#实例-4：显示指定的进程信息¶\" class=\"headerlink\" title=\"实例 4：显示指定的进程信息¶\"></a>实例 4：显示指定的进程信息<a href=\"#id5\" title=\"永久链接至标题\">¶</a></h3><p>命令：top -p pidid</p>\n<p>&#x2F;opt&#x2F;app&#x2F;tdv1&#x2F;config#top -p 17265<br>top - 09:17:34 up 455 days, 17:55,  2 users,  load average: 3.76, 4.56, 4.46<br>Tasks:   1 total,   0 running,   1 sleeping,   0 stopped,   0 zombie<br>Cpu(s):  7.8%us,  1.9%sy,  0.0%ni, 89.2%id,  0.0%wa,  0.1%hi,  1.0%si,  0.0%st<br>Mem:   8175452k total,  8103988k used,    71464k free,   268716k buffers<br>Swap:  6881272k total,  4275424k used,  2605848k free,  6338184k cached<br>PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND<br>17265 tdv1      15   0 56504  828  632 S  0.0  0.0 195:53.25 redis-server</p>\n<p>指定进程信息有多个时，需要结合其它工具将回车替换为,（-p 支持 pid,pid,pid 语法）</p>\n<p>命令：top -p pgrep MULTI_PROCESS | tr “\\n” ”,” | sed ‘s&#x2F;,$&#x2F;&#x2F;’</p>\n<p>&#x2F;opt&#x2F;app&#x2F;tdv1$top -p `pgrep java | tr “\\\\n””,” | sed ‘s&#x2F;,$&#x2F;&#x2F;‘`<br>top - 14:05:31 up 53 days,  2:43,  9 users,  load average: 0.29, 0.34, 0.22<br>Tasks:   3 total,   0 running,   3 sleeping,   0 stopped,   0 zombie<br>Cpu(s):  5.9%us,  8.2%sy,  0.0%ni, 86.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st<br>Mem:  66082088k total, 29512860k used, 36569228k free,   756352k buffers<br>Swap: 32767992k total,  1019900k used, 31748092k free, 15710284k cached</p>\n<p>  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                          27855 rdtfare   20   0 4454m 1.3g 5300 S  0.7  2.0 338:31.37 java<br> 2034 jenkins   20   0 18.3g 5.2g 5284 S  0.3  8.2  56:02.38 java                                             12156 rdtfare   20   0 4196m 1.2g  12m S  0.3  2.0  86:34.62 java</p>\n<h2 id=\"8-3-更强大的工具¶\"><a href=\"#8-3-更强大的工具¶\" class=\"headerlink\" title=\"8.3. 更强大的工具¶\"></a>8.3. 更强大的工具<a href=\"#id6\" title=\"永久链接至标题\">¶</a></h2><h3 id=\"htop¶\"><a href=\"#htop¶\" class=\"headerlink\" title=\"htop¶\"></a>htop<a href=\"#htop\" title=\"永久链接至标题\">¶</a></h3><p>htop 是一个 Linux 下的交互式的进程浏览器，可以用来替换 Linux 下的 top 命令。</p>\n<p>与 Linux 传统的 top 相比，htop 更加人性化。它可让用户交互式操作，支持颜色主题，可横向或纵向滚动浏览进程列表，并支持鼠标操作。</p>\n<p>与 top 相比，htop 有以下优点：</p>\n<ul>\n<li>可以横向或纵向滚动浏览进程列表，以便看到所有的进程和完整的命令行。</li>\n<li>在启动上，比 top 更快。</li>\n<li>杀进程时不需要输入进程号。</li>\n<li>htop 支持鼠标操作。<br><a href=\"https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/top.html\">https://linuxtools-rst.readthedocs.io/zh_CN&#x2F;latest&#x2F;tool&#x2F;top.html</a></li>\n</ul>\n","text":"top linux下的任务管理器Linux Tools Quick Tutorial top 命令是 Linux 下常用的性能分析工具，能够实时显示系统中各个进...","permalink":"/post/LINUX/top linux下的任务管理器","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"top","slug":"top","count":1,"path":"api/categories/top.json"},{"name":"LINUX","slug":"top/LINUX","count":1,"path":"api/categories/top/LINUX.json"}],"tags":[{"name":"CPU","slug":"CPU","count":3,"path":"api/tags/CPU.json"},{"name":"total","slug":"total","count":2,"path":"api/tags/total.json"},{"name":"Cpu","slug":"Cpu","count":1,"path":"api/tags/Cpu.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#top-linux%E4%B8%8B%E7%9A%84%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8\"><span class=\"toc-text\">top linux下的任务管理器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-1-top-%E5%91%BD%E4%BB%A4%E4%BA%A4%E4%BA%92%E6%93%8D%E4%BD%9C%E6%8C%87%E4%BB%A4%C2%B6\"><span class=\"toc-text\">8.1. top 命令交互操作指令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-2-%E5%AE%9E%E4%BE%8B%C2%B6\"><span class=\"toc-text\">8.2. 实例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B-1%EF%BC%9A%E5%A4%9A%E6%A0%B8-CPU-%E7%9B%91%E6%8E%A7%C2%B6\"><span class=\"toc-text\">实例 1：多核 CPU 监控</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B-2%EF%BC%9A%E9%AB%98%E4%BA%AE%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E8%BF%90%E8%A1%8C%E8%BF%9B%E7%A8%8B%C2%B6\"><span class=\"toc-text\">实例 2：高亮显示当前运行进程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B-3%EF%BC%9A%E6%98%BE%E7%A4%BA%E5%AE%8C%E6%95%B4%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%BD%E4%BB%A4%C2%B6\"><span class=\"toc-text\">实例 3：显示完整的程序命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B-4%EF%BC%9A%E6%98%BE%E7%A4%BA%E6%8C%87%E5%AE%9A%E7%9A%84%E8%BF%9B%E7%A8%8B%E4%BF%A1%E6%81%AF%C2%B6\"><span class=\"toc-text\">实例 4：显示指定的进程信息</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-3-%E6%9B%B4%E5%BC%BA%E5%A4%A7%E7%9A%84%E5%B7%A5%E5%85%B7%C2%B6\"><span class=\"toc-text\">8.3. 更强大的工具</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#htop%C2%B6\"><span class=\"toc-text\">htop</span></a></li></ol></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"ConditionalOnProperty控制Bean对象加载","uid":"d258daee60faadc2bf7311dc982adc47","slug":"JAVA/@ConditionalOnProperty控制Bean对象加载","date":"2021-08-25T15:27:06.000Z","updated":"2025-09-30T03:26:06.395Z","comments":true,"path":"api/articles/JAVA/@ConditionalOnProperty控制Bean对象加载.json","keywords":"XuGuangSheng","cover":"/covers/conditionalonpropertybean.jpg","text":"@ConditionalOnProperty控制Bean对象加载1、简介 SpringBoot 通过 @ConditionalOnProperty 来控制 @C...","permalink":"/post/JAVA/@ConditionalOnProperty控制Bean对象加载","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"application","slug":"application","count":1,"path":"api/categories/application.json"},{"name":"JAVA","slug":"application/JAVA","count":1,"path":"api/categories/application/JAVA.json"}],"tags":[{"name":"yml","slug":"yml","count":1,"path":"api/tags/yml.json"},{"name":"如果","slug":"如果","count":2,"path":"api/tags/如果.json"},{"name":"否则不生效","slug":"否则不生效","count":1,"path":"api/tags/否则不生效.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"InfluxDB 通识篇","uid":"8cbbd86cd3c93044bc5b65f7c8f71a1c","slug":"JAVA/InfluxDB 通识篇","date":"2021-08-23T15:09:05.000Z","updated":"2025-09-30T03:26:10.401Z","comments":true,"path":"api/articles/JAVA/InfluxDB 通识篇.json","keywords":"XuGuangSheng","cover":"/covers/influxdb.jpg","text":"InfluxDB 通识篇什么是时序数据库？时序数据库全称时间序列数据库，英文名 Time Series DataBase，缩写 TSDB。 这种数据库专门用作处...","permalink":"/post/JAVA/InfluxDB 通识篇","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"InfluxDB","slug":"InfluxDB","count":1,"path":"api/categories/InfluxDB.json"},{"name":"JAVA","slug":"InfluxDB/JAVA","count":1,"path":"api/categories/InfluxDB/JAVA.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"raw","slug":"raw","count":5,"path":"api/tags/raw.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}