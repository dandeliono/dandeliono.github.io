{"title":"Linux配置http代理","uid":"629c251c0c483276f62c67636b6a5d8b","slug":"LINUX/Linux配置http代理","date":"2022-09-14T17:44:07.000Z","updated":"2025-09-30T03:26:34.555Z","comments":true,"path":"api/articles/LINUX/Linux配置http代理.json","keywords":"XuGuangSheng","cover":"/covers/linuxhttp.jpg","content":"<h1 id=\"Linux配置http代理\"><a href=\"#Linux配置http代理\" class=\"headerlink\" title=\"Linux配置http代理\"></a>Linux配置http代理</h1><p>我们可以在很多地方设置Proxy，生产环境中最常见的还是在应用中直接调用一些库来为应用设置Proxy，但在测试Proxy的时候，就需要用到系统全局的Proxy设置以及部分应用的Proxy<br>常见的Proxy一般就两种，<code>Socks</code>和<code>HTTP</code>，HTTP是一种七层代理，而Socks则是封装过后的四层代理<br>顾名思义，<code>HTTP</code>只能代理HTTP协议的流量，<code>Socks</code>则只接受Socks封装过的流量，对于大部分Web应用，我们会部署HTTP代理，因为如果经过了Socks封装，前置在应用和代理服务器之间的防火墙就无法看到URL了(你可能会奇怪防火墙为什么不是在最外面，事实上这里的防火墙专用于URL过滤，放在代理服务器外侧也可以，但如此一来，防火墙将看不到真正的源主机的地址，而只能看到代理服务器的地址了)</p>\n<p>而对于无法通过HTTP代理的协议，比如SSH和SFTP，就需要用到Socks代理了<br>Windows以及部分浏览器(例如Firefox)可以设置Socks代理，Linux全局下似乎无法设置，但是一些其他方法可以不安装Socks客户端的情况下使用Socks代理<br>在&#x2F;etc&#x2F;profile下增加下列配置即可设置HTTP&#x2F;HTTPS&#x2F;FTP代理</p>\n<p>如果要全局用户使用应用于所有的Shell，就需要修改 &#x2F;etc&#x2F;profile 文件</p>\n<p><strong>代理服务开启</strong></p>\n<p><strong>设置全局代理，需要编辑profile文件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/profile</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>文末添加以下代理配置，参考代理是否需要用户名密码</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://proxy_ip:prot</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=https://proxy_ip:prot</span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://username:password@proxy_ip:prot</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=https://username:password@proxy_ip:port</span><br><span class=\"line\"><span class=\"built_in\">export</span> ftp_proxy=http://username:password@proxyserver:port</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>如</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://192.168.64.1:1080</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=http://192.168.64.1:1080</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">http_proxy=proxy.abc.com:8080  </span><br><span class=\"line\">https_proxy=<span class=\"variable\">$http_proxy</span>  </span><br><span class=\"line\">ftp_proxy=user:password@proxy.abc.com:8080  </span><br><span class=\"line\">no_proxy=*.abc.com,10.*.*.*,192.168.*.*,*.<span class=\"built_in\">local</span>,localhost,127.0.0.1  </span><br><span class=\"line\"><span class=\"built_in\">export</span> http_proxy https_proxy ftp_proxy no_proxy  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>其中：</p>\n<ul>\n<li>http_proxy：http协议使用代理服务器地址；</li>\n<li>https_proxy：https协议使用安全代理地址；</li>\n<li>ftp_proxy：ftp协议使用代理服务器地址；</li>\n<li>user：代理使用的用户名；</li>\n<li>password：代理使用用户名的密码；</li>\n<li>proxy.abc.com：代理地址，可以是IP，也可以是域名；</li>\n<li>8080：使用的端口；</li>\n<li>no_proxy：不使用代理的主机或IP。</li>\n</ul>\n<hr>\n<p><strong>备注：</strong> </p>\n<table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>描述</th>\n<th>值示例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>http_proxy</td>\n<td>为http变量设置代理；默认不填开头以http协议传输</td>\n<td>10.0.0.51:8080</td>\n</tr>\n<tr>\n<td>user:<a href=\"mailto:&#x70;&#97;&#115;&#115;&#64;&#49;&#48;&#46;&#x30;&#x2e;&#x30;&#x2e;&#49;&#48;\">&#x70;&#97;&#115;&#115;&#64;&#49;&#48;&#46;&#x30;&#x2e;&#x30;&#x2e;&#49;&#48;</a>:8080</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>socks4:&#x2F;&#x2F;10.0.0.51:1080</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>socks5:&#x2F;&#x2F;192.168.1.1:1080</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>https_proxy</td>\n<td>为https变量设置代理；</td>\n<td>同上</td>\n</tr>\n<tr>\n<td>ftp_proxy</td>\n<td>为ftp变量设置代理；</td>\n<td>同上</td>\n</tr>\n<tr>\n<td>all_proxy</td>\n<td>全部变量设置代理，设置了这个时候上面的不用设置</td>\n<td>同上</td>\n</tr>\n<tr>\n<td>no_proxy</td>\n<td>无需代理的主机或域名；</td>\n<td></td>\n</tr>\n<tr>\n<td>可以使用通配符；</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>多个时使用“,”号分隔；</td>\n<td><code>*.aiezu.com,10.*.*.*,</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>192.168.*.*,*.local,localhost,127.0.0.1</code></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1、在&#x2F;etc&#x2F;profile文件<br>2、在<del>&#x2F;.bashrc<br>3、在</del>&#x2F;.zshrc<br>4、在&#x2F;etc&#x2F;profile.d&#x2F;文件夹下新建一个文件xxx.sh</p>\n<p>写入如下配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> proxy=<span class=\"string\">&quot;http://192.168.5.14:8118&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=<span class=\"variable\">$proxy</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=<span class=\"variable\">$proxy</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> ftp_proxy=<span class=\"variable\">$proxy</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> no_proxy=<span class=\"string\">&quot;localhost, 127.0.0.1, ::1&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>而对于要取消设置可以使用如下命令，其实也就是取消环境变量的设置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">unset</span> http_proxy</span><br><span class=\"line\"><span class=\"built_in\">unset</span> https_proxy</span><br><span class=\"line\"><span class=\"built_in\">unset</span> ftp_proxy</span><br><span class=\"line\"><span class=\"built_in\">unset</span> no_proxy</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>此方法只适合配置http代理，使用socket代理上网的另有其他配置方法。</p>\n<p><strong>生效配置文件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br><span class=\"line\">. /etc/profile</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>查看当前已设置代理</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$http_proxy</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$https_proxy</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>测试</strong></p>\n<p>因为</p>\n<p>要配置subversion的代理服务器，需要修改$HOME&#x2F;.subversion&#x2F;servers文件，在此文件的[global]段加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http-proxy-host = 192.168.1.1</span><br><span class=\"line\">http-proxy-port = 8080 </span><br><span class=\"line\">http-proxy-username = easwy</span><br><span class=\"line\">http-proxy-password = 123456 </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>现在svn就可以使用代理服务器访问版本库了。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>针对yum配置走代理：<br>经过测试其实只要设置上面的变量之后已经可以走代理了，但如果要单独设置，可以设置如下文件的变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;proxy=http://127.0.0.1:8080/&quot;</span> &gt;&gt; /etc/yum.conf</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></blockquote>\n<p>如果想让CentOS中的yum可以通过代理服务器更新程序，则需要修改文件&#x2F;etc&#x2F;yum.conf，在此文件中加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy=http://easwy:123456@192.168.1.1:8080</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","text":"Linux配置http代理我们可以在很多地方设置Proxy，生产环境中最常见的还是在应用中直接调用一些库来为应用设置Proxy，但在测试Proxy的时候，就需要...","permalink":"/post/LINUX/Linux配置http代理","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"proxy","slug":"proxy","count":1,"path":"api/categories/proxy.json"},{"name":"LINUX","slug":"proxy/LINUX","count":1,"path":"api/categories/proxy/LINUX.json"}],"tags":[{"name":"HTTP","slug":"HTTP","count":2,"path":"api/tags/HTTP.json"},{"name":"Socks","slug":"Socks","count":1,"path":"api/tags/Socks.json"},{"name":"http","slug":"http","count":6,"path":"api/tags/http.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Linux%E9%85%8D%E7%BD%AEhttp%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">Linux配置http代理</span></a></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"在Ubuntu 18.04上安装和配置Squid代理","uid":"52d188bef2ce89a10077bd22ef3e8593","slug":"LINUX/在Ubuntu 18.04上安装和配置Squid代理","date":"2022-09-14T18:00:06.000Z","updated":"2025-09-30T03:26:41.719Z","comments":true,"path":"api/articles/LINUX/在Ubuntu 18.04上安装和配置Squid代理.json","keywords":"XuGuangSheng","cover":"/covers/ubuntu-18-04squid.jpg","text":"在Ubuntu 18.04上安装和配置Squid代理Squid是功能齐全的缓存代理，支持流行的网络协议，例如HTTP，HTTPS，FTP等。 Squid主要用于...","permalink":"/post/LINUX/在Ubuntu 18.04上安装和配置Squid代理","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Squid","slug":"Squid","count":1,"path":"api/categories/Squid.json"},{"name":"LINUX","slug":"Squid/LINUX","count":1,"path":"api/categories/Squid/LINUX.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"squid","slug":"squid","count":1,"path":"api/tags/squid.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MySQL Binlog日志配置","uid":"c870bba49f8ac447777617e20cdfda53","slug":"MIDDLEWARE/MySQL Binlog日志配置","date":"2022-08-09T17:05:23.000Z","updated":"2025-09-30T03:26:48.714Z","comments":true,"path":"api/articles/MIDDLEWARE/MySQL Binlog日志配置.json","keywords":"XuGuangSheng","cover":"/covers/mysql-binlog.jpg","text":"MySQL Binlog日志配置Binlog 记录模式Redo Log 是属于InnoDB引擎所特有的日志，而MySQL Server也有自己的日志，即 Bin...","permalink":"/post/MIDDLEWARE/MySQL Binlog日志配置","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Binlog","slug":"Binlog","count":1,"path":"api/categories/Binlog.json"},{"name":"MIDDLEWARE","slug":"Binlog/MIDDLEWARE","count":1,"path":"api/categories/Binlog/MIDDLEWARE.json"}],"tags":[{"name":"log","slug":"log","count":4,"path":"api/tags/log.json"},{"name":"binlog","slug":"binlog","count":1,"path":"api/tags/binlog.json"},{"name":"event","slug":"event","count":1,"path":"api/tags/event.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}