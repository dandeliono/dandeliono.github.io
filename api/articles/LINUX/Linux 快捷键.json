{"title":"Linux 快捷键","uid":"bed926b9b5ce2da9bc2fbda11d1273e0","slug":"LINUX/Linux 快捷键","date":"2021-09-06T13:24:10.000Z","updated":"2025-09-30T03:26:33.174Z","comments":true,"path":"api/articles/LINUX/Linux 快捷键.json","keywords":"XuGuangSheng","cover":"/covers/linux.jpg","content":"<h1 id=\"Linux-快捷键\"><a href=\"#Linux-快捷键\" class=\"headerlink\" title=\"Linux 快捷键\"></a>Linux 快捷键</h1><p><strong>最有用快捷键</strong></p>\n<p><strong>Tab</strong></p>\n<p>命令或路径的补全键。应该是 Linux 最常用的快捷键，它将节省你 Linux 命令行中的大量时间。只需要输入一个命令，文件名，目录名甚至是命令选项的开头，并敲击 tab 键。它将自动完成你输入的内容，或为你显示全部可能的结果，快速提升输入效率。如果你只记一个快捷键，这将是必选的一个</p>\n<p><strong>移动光标快捷键</strong></p>\n<p><strong>Ctrl + A</strong></p>\n<p>光标回到命令行首。该快捷键将移动光标到所在行首。假设你在终端输入了一个很长的命令或路径，并且你想要回到它的开头， 使用方向键移动光标将花费大量时间。注意你无法使用鼠标移动光标到行首。</p>\n<p><img src=\"https://raw.githubusercontent.com/dandeliono/img/main/resource/89a92af85fb39393a941f53e73566a07.gif\"></p>\n<p><strong>Ctrl + E</strong></p>\n<p>光标回到命令行尾。这对快捷键与 Ctrl+A 相反。Ctrl+A 送光标到行首，反之 Ctrl+E 移动光标到行尾。</p>\n<p><strong>Ctrl – b</strong></p>\n<p>往回 (左) 移动一个字符</p>\n<p><strong>Ctrl – f</strong></p>\n<p>往后 (右) 移动一个字符</p>\n<p><strong>Alt – b</strong></p>\n<p>往回 (左) 移动一个单词</p>\n<p><strong>Alt – f</strong></p>\n<p>往后 (右) 移动一个单词</p>\n<p><strong>Ctrl – xx</strong></p>\n<p>在命令行尾和光标之间移动</p>\n<p><strong>M-b</strong></p>\n<p>往回 (左) 移动一个单词</p>\n<p><strong>M-f</strong></p>\n<p>往后 (右) 移动一个单词</p>\n<p><strong>控制快捷键</strong></p>\n<p><strong>Ctrl + L</strong></p>\n<p>清除屏幕所有内容，并在屏幕最上面开始一个新行，等同 clear 命令。可以使用 Ctrl+L 清空终端，代替输入 C-L-E-A-R。</p>\n<p><strong>Ctrl + Z</strong></p>\n<p>暂停执行在终端运行的任务。该快捷键将正在运行的程序送到后台。通常，你可以在使用 &amp; 选项运行程序前之完成该操作，但是如果你忘记使用选项运行程序，就使用这对组合键。</p>\n<p><strong>Ctrl + S</strong></p>\n<p>锁定终端，使之无法输入内容。</p>\n<p><strong>Ctrl + Q</strong></p>\n<p>解锁执行 Ctrl+s 的锁定状态。</p>\n<p><strong>编辑命令（复制、粘贴和清除快捷键）</strong></p>\n<p>linux 命令行下，ctrl+c&#x2F;ctrl+v 已经不是复制粘贴了，下面这两个代替它们：<strong>复制：</strong> ctrl+insert<strong>粘贴：</strong> shift+insert</p>\n<p><img src=\"https://raw.githubusercontent.com/dandeliono/img/main/resource/d6f5185e19e14bffa1d5181a543183cf.gif\"></p>\n<p><strong>Ctrl + U</strong></p>\n<p>剪切（删除）光标处到行首的字符。输入了错误的命令， 代替用退格键来丢弃当前命令，使用 Linux 终端中的 Ctrl+U 快捷键。 该快捷键会擦除从当前光标位置到行首的全部内容。</p>\n<p><img src=\"https://raw.githubusercontent.com/dandeliono/img/main/resource/eeb89c53ea53ccded75d9bdf332c0385.gif\"></p>\n<p><strong>Ctrl + K</strong></p>\n<p>剪切（删除）光标处到行尾的字符。这对和 Ctrl+U 快捷键有点像。 唯一的不同在于不是行首，它擦除的是从当前光标位置到行尾的全部内容。</p>\n<p><strong>Ctrl + W</strong></p>\n<p>剪切（删除）光标前的一个单词。如果你只需要删除一个单词，使用 Ctrl+W 快捷键，你可以擦除光标位置前的单词。 如果光标在一个单词本身上，它将擦除从光标位置到词首的全部字母。最好的方法是用它移动光标到要删除单词后的一个空格上， 然后使用 Ctrl+W 键盘快捷键。</p>\n<p><strong>Ctrl + Y</strong></p>\n<p>粘贴 Ctrl+u，Ctrl+k，Ctrl+w 删除的文本。 如果你删除了错误的文本或需要在某处使用已擦除的文本，这将派上用场。</p>\n<p><strong>Ctrl + C</strong></p>\n<p>中断终端正在执行的任务或者删除整行。这些是为了在终端上中断命令或进程该按的键。它将立刻终止运行的程序。如果你想要停止使用一个正在后台运行的程序，只需按下这对组合键。</p>\n<p><strong>Ctrl – H</strong></p>\n<p>删除光标左方位置的字符（相当于退格键）。</p>\n<p><strong>重复执行命令快捷键</strong></p>\n<p><strong>Ctrl + D</strong></p>\n<p>退出当前 Shell 命令行。如果你使用 SSH 连接，它将会关闭。 如果你直接使用一个终端，该应用将会立刻关闭。把它当成 “退出” 命令。</p>\n<p><strong>Ctrl + R</strong></p>\n<p>搜索命令行使用过的历史命令记录。搜索历史命令，随着输入会显示历史命令中的一条匹配命令，Enter 键执行匹配命令；ESC 键在命令行显示而不执行匹配命令。</p>\n<p><strong>Ctrl + G</strong></p>\n<p>从执行 Ctrl+R 的搜索历史命令模式退出。</p>\n<p><strong>Esc+.(点)</strong></p>\n<p>获取上一条命令的最后的部分（空格分隔）</p>\n<p><strong>重复执行操作动作</strong></p>\n<p>M – 操作次数 操作动作 ： 指定操作次数，重复执行指定的操作。</p>\n<p><strong>查找历史命令</strong></p>\n<p><strong>Ctrl + P</strong></p>\n<p>显示当前命令的上一条历史命令。可以使用该快捷键来查看上一个命令。 可以反复按该键来返回到历史命令。 在很多终端里，使用 PgUp 键来实现相同的功能。</p>\n<p><strong>Ctrl + N</strong></p>\n<p>显示当前命令的下一条历史命令。可以结合 Ctrl+P 使用该快捷键。Ctrl+N 显示下一个命令。 如果使用 Ctrl+P 查看上一条命令，可以使用 Ctrl+N 来回导航。 许多终端都把此快捷键映射到 PgDn 键。</p>\n<p><strong>Ctrl + R</strong></p>\n<p>搜索命令行使用过的历史命令记录。搜索历史命令，随着输入会显示历史命令中的一条匹配命令，Enter 键执行匹配命令；ESC 键在命令行显示而不执行匹配命令。</p>\n<p><strong>Ctrl + G</strong></p>\n<p>从执行 Ctrl+R 的搜索历史命令模式退出。</p>\n<p><strong>Bang(!) 命令 ! 号开头的快捷命令</strong></p>\n<p>!!：执行上一条命令。</p>\n<p>!pw：执行最近以 pw 开头的命令。</p>\n<p>!pw:p：仅打印最近 pw 开头的命令，但不执行。</p>\n<p>!num：执行历史命令列表的第 num(数字) 条命令。</p>\n<p>^foo^bar ：把上一条命令里的 foo 替换为 bar，并执行。</p>\n<p>!wget ：执行最近的以 wget 开头的命令。</p>\n<p>!wget:p ：仅打印最近的以 wget 开头的命令，不执行。</p>\n<p>!$ ：上一条命令的最后一个参数， 与 Alt - . 和 $_ 相同，相当于 Esc+.(点)。</p>\n<p>!* ：上一条命令的所有参数</p>\n<p>!*:p ：打印上一条命令是所有参数，也即 !*的内容。</p>\n<p>^abc ：删除上一条命令中的 abc。</p>\n<p>^foo^bar ：将上一条命令中的 foo 替换为 bar</p>\n<p>^foo^bar^ ：将上一条命令中的 foo 替换为 bar</p>\n<p>!-n ：执行前 n 条命令，执行上一条命令：!-1， 执行前 5 条命令的格式是：!-5</p>\n<p><strong>ESC 相关</strong></p>\n<p>Esc+.(点)</p>\n<p>获取上一条命令的最后的部分（空格分隔）*</p>\n<p>Esc+b</p>\n<p>移动到当前单词的开头</p>\n<p>Esc+f</p>\n<p>移动到当前单词的结尾</p>\n<p>Esc+t</p>\n<p>颠倒光标所在处及其相邻单词的位置</p>\n<p>Ctrl + 左右键：在单词之间跳转</p>\n<p>Alt – d ：由光标位置开始，往右删除单词。往行尾删</p>\n<p>Ctrl – k: 先按住 Ctrl 键，然后再按 k 键；</p>\n<p>Alt – k: 先按住 Alt 键，然后再按 k 键；</p>\n<p>M – k：先单击 Esc 键，然后再按 k 键。</p>\n<p><strong>编辑命令</strong></p>\n<p>Ctrl – h ：删除光标左方位置的字符</p>\n<p>Ctrl – d ：删除光标右方位置的字符（注意：当前命令行没有任何字符时，会销系统或结束终端）</p>\n<p>Ctrl – w ：由光标位置开始，往左删除单词。往行首删</p>\n<p>Alt – d ：由光标位置开始，往右删除单词。往行尾删</p>\n<p>M – d ：由光标位置开始，删除单词，直到该单词结束。</p>\n<p>Ctrl – k ：由光标所在位置开始，删除右方所有的字符，直到该行结束。</p>\n<p>Ctrl – u ：由光标所在位置开始，删除左方所有的字符，直到该行开始。</p>\n<p>Ctrl – y ：粘贴之前删除的内容到光标后。</p>\n<p>ctrl – t ：交换光标处和之前两个字符的位置。</p>\n<p>Alt + . ：使用上一条命令的最后一个参数。</p>\n<p>Ctrl – _ ：回复之前的状态。撤销操作。</p>\n<p>Ctrl -a + Ctrl -k 或 Ctrl -e + Ctrl -u 或 Ctrl -k + Ctrl -u 组合可删除整行。</p>\n<p><strong>控制命令</strong></p>\n<p>Ctrl – l ：清除屏幕，然后，在最上面重新显示目前光标所在的这一行的内容。</p>\n<p>Ctrl – o ：执行当前命令，并选择上一条命令。</p>\n<p>Ctrl – s ：阻止屏幕输出</p>\n<p>Ctrl – q ：允许屏幕输出</p>\n<p>Ctrl – c ：终止命令</p>\n<p>Ctrl – z ：挂起命令<br> <a href=\"https://zhuanlan.zhihu.com/p/97260846\">https://zhuanlan.zhihu.com/p/97260846</a></p>\n","text":"Linux 快捷键最有用快捷键 Tab 命令或路径的补全键。应该是 Linux 最常用的快捷键，它将节省你 Linux 命令行中的大量时间。只需要输入一个命令，...","permalink":"/post/LINUX/Linux 快捷键","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"Ctrl","slug":"Ctrl","count":1,"path":"api/categories/Ctrl.json"},{"name":"LINUX","slug":"Ctrl/LINUX","count":1,"path":"api/categories/Ctrl/LINUX.json"}],"tags":[{"name":"Alt","slug":"Alt","count":1,"path":"api/tags/Alt.json"},{"name":"Esc","slug":"Esc","count":1,"path":"api/tags/Esc.json"},{"name":"foo","slug":"foo","count":1,"path":"api/tags/foo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Linux-%E5%BF%AB%E6%8D%B7%E9%94%AE\"><span class=\"toc-text\">Linux 快捷键</span></a></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Spring中classpath的使用问题","uid":"78e24240498cee987d87ef60883b2ac7","slug":"JAVA/Spring中classpath的使用问题","date":"2021-09-07T20:30:06.000Z","updated":"2025-09-30T03:26:21.651Z","comments":true,"path":"api/articles/JAVA/Spring中classpath的使用问题.json","keywords":"XuGuangSheng","cover":"/covers/springclasspath.jpg","text":"Spring中classpath的使用问题在 Spring 的配置文件中，经常使用classpath：xxx.xxx来读取文件。对于 maven 项目，误区是读...","permalink":"/post/JAVA/Spring中classpath的使用问题","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"Resource","slug":"Resource","count":1,"path":"api/categories/Resource.json"},{"name":"JAVA","slug":"Resource/JAVA","count":1,"path":"api/categories/Resource/JAVA.json"}],"tags":[{"name":"jar","slug":"jar","count":1,"path":"api/tags/jar.json"},{"name":"txt","slug":"txt","count":1,"path":"api/tags/txt.json"},{"name":"resources","slug":"resources","count":1,"path":"api/tags/resources.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"ZooKeeper报错Last transaction was partial","uid":"d80305d117df28e684a0a0d26ded383b","slug":"MIDDLEWARE/ZooKeeper报错Last transaction was partial","date":"2021-09-06T13:17:16.000Z","updated":"2025-09-30T03:26:50.653Z","comments":true,"path":"api/articles/MIDDLEWARE/ZooKeeper报错Last transaction was partial.json","keywords":"XuGuangSheng","cover":"/covers/zookeeperlast-transaction-was-partial.jpg","text":"ZooKeeper报错Last transaction was partial Zookeeper 无法正常启动，报错 Last transaction was...","permalink":"/post/MIDDLEWARE/ZooKeeper报错Last transaction was partial","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"ZooKeeper","slug":"ZooKeeper","count":1,"path":"api/categories/ZooKeeper.json"},{"name":"MIDDLEWARE","slug":"ZooKeeper/MIDDLEWARE","count":1,"path":"api/categories/ZooKeeper/MIDDLEWARE.json"}],"tags":[{"name":"Last","slug":"Last","count":1,"path":"api/tags/Last.json"},{"name":"transaction","slug":"transaction","count":1,"path":"api/tags/transaction.json"},{"name":"was","slug":"was","count":1,"path":"api/tags/was.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}