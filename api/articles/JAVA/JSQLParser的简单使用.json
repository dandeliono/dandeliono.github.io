{"title":"JSQLParser的简单使用","uid":"48d20d4467bd70f47406b938972138eb","slug":"JAVA/JSQLParser的简单使用","date":"2021-09-01T16:57:01.000Z","updated":"2025-09-30T03:26:11.368Z","comments":true,"path":"api/articles/JAVA/JSQLParser的简单使用.json","keywords":"XuGuangSheng","cover":"/covers/jsqlparser.jpg","content":"<h1 id=\"JSQLParser的简单使用\"><a href=\"#JSQLParser的简单使用\" class=\"headerlink\" title=\"JSQLParser的简单使用\"></a>JSQLParser的简单使用</h1><p>这里简单记录一下最近了解到的 JSQLParser 这个 SQL 语句解析器的用法，方便有需要的时候参考。</p>\n<h4 id=\"正文：\"><a href=\"#正文：\" class=\"headerlink\" title=\"正文：\"></a>正文：</h4><pre><code>import net.sf.jsqlparser.JSQLParserException;\nimport net.sf.jsqlparser.parser.CCJSqlParserUtil;\nimport net.sf.jsqlparser.schema.Table;\nimport net.sf.jsqlparser.statement.Statement;\nimport net.sf.jsqlparser.statement.select.*;\nimport net.sf.jsqlparser.util.TablesNamesFinder;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class JSQLParserTest &#123;\n    public static void main(String[] args) &#123;\n        String sql = &quot;SELECT\\n&quot; +\n                &quot;  a.id,\\n&quot; +\n                &quot;  username,\\n&quot; +\n                &quot;  b.workflow_name,\\n&quot; +\n                &quot;  reviewok_time\\n&quot; +\n                &quot;FROM archer.sql_users a\\n&quot; +\n                &quot;  JOIN sql_workflow b ON a.username = b.engineer\\n&quot; +\n                &quot;  JOIN archive.table3 c ON a.username = c.col5;\\n&quot;;\n\n        try &#123;\n            Statement stmt = CCJSqlParserUtil.parse(sql);\n            Select selectStatement = (Select) stmt;\n\n            TablesNamesFinder tablesNamesFinder = new TablesNamesFinder();\n            List&lt;String&gt; tableList = tablesNamesFinder.getTableList(selectStatement);\n            for (String name: tableList) &#123;\n                System.out.println(&quot;table: &quot; + name);\n            &#125;\n            System.out.println();\n\n            List&lt;String&gt; columnList = new ArrayList&lt;String&gt;();\n            PlainSelect ps = (PlainSelect) selectStatement.getSelectBody();\n            List&lt;SelectItem&gt; selectItems = ps.getSelectItems();\n            // System.out.println(selectItems);\n            selectItems.stream().forEach(selectItem -&gt; columnList.add(selectItem.toString()));\n            for (String name: columnList) &#123;\n                System.out.println(&quot;column: &quot; + name);\n            &#125;\n            System.out.println();\n\n            FromItem fromItem = ps.getFromItem();\n            Table table = (Table) fromItem;\n            System.out.println(table.getName() + &quot;:\\t&quot; + table.getAlias());\n\n            List&lt;Join&gt; joins = ps.getJoins();\n            for (Join join : joins) &#123;\n                fromItem = join.getRightItem();\n                table = (Table) fromItem;\n                System.out.println(table.getName() + &quot;:\\t&quot; + table.getAlias());\n            &#125;\n\n        &#125; catch (JSQLParserException e) &#123;\n            e.printStackTrace();\n        &#125;\n    &#125;\n\n&#125;\n</code></pre>\n<p>简单来说就是，JSQLParser 使用起来还算简单，但就上面的测试 SQL 来看，效果难说完美（表名提取那里会把 archer.sql_users 里面的「archer.」给略掉，只剩下 sql_users）。</p>\n<p>据说「<a href=\"http://www.sqlparser.com/\">General Sql Parser’s (GSP)</a>」的效果很好，不过是付费的（想来在很多方面要想把一件事情做好，还是需要专门的人力支持、维护，付费是有付费的道理的），还没有机会测试，以后有机会了再试试效果。</p>\n<h5 id=\"参考链接：\"><a href=\"#参考链接：\" class=\"headerlink\" title=\"参考链接：\"></a>参考链接：</h5><p><a href=\"https://github.com/JSQLParser/JSqlParser/wiki/Examples-of-SQL-parsing\">https://github.com/JSQLParser/JSqlParser/wiki/Examples-of-SQL-parsing</a></p>\n<p>Jsqlparser 使用<br><a href=\"https://www.yuech.net/2015/10/09/Jsqlparser%E4%BD%BF%E7%94%A8/\">https://www.yuech.net/2015/10/09/Jsqlparser%E4%BD%BF%E7%94%A8/</a></p>\n<p>java-How to parse sql columns with JDBC or jSqlParser ?<br><a href=\"https://www.bswen.com/2019/05/android-How-to-parse-sql-columns-with-JDBC-or-jSqlParser.html\">https://www.bswen.com/2019/05/android-How-to-parse-sql-columns-with-JDBC-or-jSqlParser.html</a></p>\n<p>使用 java sql parser 插件 Jsqlparser 实例 (一)<br><a href=\"https://blog.csdn.net/u014297722/article/details/53256533\">https://blog.csdn.net/u014297722/article/details/53256533</a></p>\n<p>Parsing table and column names from SQL&#x2F;HQL Java<br><a href=\"https://stackoverflow.com/questions/40908062/parsing-table-and-column-names-from-sql-hql-java\">https://stackoverflow.com/questions/40908062/parsing-table-and-column-names-from-sql-hql-java</a></p>\n<p><a href=\"https://stackoverflow.com/questions/16768365/how-to-retrieve-table-and-column-names-from-sql-using-jsqlparse\">https://stackoverflow.com/questions/16768365/how-to-retrieve-table-and-column-names-from-sql-using-jsqlparse</a></p>\n<p><a href=\"https://www.programcreek.com/java-api-examples/index.php?api=net.sf.jsqlparser.schema.Column\">https://www.programcreek.com/java-api-examples/index.php?api=net.sf.jsqlparser.schema.Column</a><br><a href=\"https://www.programcreek.com/java-api-examples/?api=net.sf.jsqlparser.statement.select.AllTableColumns\">https://www.programcreek.com/java-api-examples/?api=net.sf.jsqlparser.statement.select.AllTableColumns</a><br><a href=\"https://vimsky.com/examples/detail/java-class-net.sf.jsqlparser.schema.Table.html\">https://vimsky.com/examples/detail/java-class-net.sf.jsqlparser.schema.Table.html</a></p>\n<p><a href=\"https://stackoverflow.com/questions/37250588/jsqlparser-getting-table-name-from-column\">https://stackoverflow.com/questions/37250588/jsqlparser-getting-table-name-from-column</a></p>\n<p>JSQLParser 来分析复杂 SQL，实现 UI 业务一次 SQL 搞定<br><a href=\"https://www.jianshu.com/p/f57bc22b5b32\">https://www.jianshu.com/p/f57bc22b5b32</a></p>\n<p>JPA 表租户 SQL 解析实现<br><a href=\"https://www.codenong.com/js8ad3b4d6bd43/\">https://www.codenong.com/js8ad3b4d6bd43/</a></p>\n<p>几种基于 Java 的 SQL 解析工具的比较与调用<br><a href=\"https://blog.csdn.net/qq_21383435/article/details/81984297\">https://blog.csdn.net/qq_21383435&#x2F;article&#x2F;details&#x2F;81984297</a></p>\n<p>基于 Java 的 SQL 解析工具的比较与学习<br><a href=\"https://blog.csdn.net/czq850114000/article/details/80844689\">https://blog.csdn.net/czq850114000/article/details/80844689</a><br> <a href=\"https://ixyzero.com/blog/archives/4806.html\">https://ixyzero.com/blog/archives/4806.html</a></p>\n","text":"JSQLParser的简单使用这里简单记录一下最近了解到的 JSQLParser 这个 SQL 语句解析器的用法，方便有需要的时候参考。 正文：import n...","permalink":"/post/JAVA/JSQLParser的简单使用","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"https","slug":"https","count":12,"path":"api/categories/https.json"},{"name":"JAVA","slug":"https/JAVA","count":5,"path":"api/categories/https/JAVA.json"}],"tags":[{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"net","slug":"net","count":1,"path":"api/tags/net.json"},{"name":"www","slug":"www","count":8,"path":"api/tags/www.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JSQLParser%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">JSQLParser的简单使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E6%96%87%EF%BC%9A\"><span class=\"toc-text\">正文：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5%EF%BC%9A\"><span class=\"toc-text\">参考链接：</span></a></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"ZooKeeper报错Last transaction was partial","uid":"d80305d117df28e684a0a0d26ded383b","slug":"MIDDLEWARE/ZooKeeper报错Last transaction was partial","date":"2021-09-06T13:17:16.000Z","updated":"2025-09-30T03:26:50.653Z","comments":true,"path":"api/articles/MIDDLEWARE/ZooKeeper报错Last transaction was partial.json","keywords":"XuGuangSheng","cover":"/covers/zookeeperlast-transaction-was-partial.jpg","text":"ZooKeeper报错Last transaction was partial Zookeeper 无法正常启动，报错 Last transaction was...","permalink":"/post/MIDDLEWARE/ZooKeeper报错Last transaction was partial","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"ZooKeeper","slug":"ZooKeeper","count":1,"path":"api/categories/ZooKeeper.json"},{"name":"MIDDLEWARE","slug":"ZooKeeper/MIDDLEWARE","count":1,"path":"api/categories/ZooKeeper/MIDDLEWARE.json"}],"tags":[{"name":"Last","slug":"Last","count":1,"path":"api/tags/Last.json"},{"name":"transaction","slug":"transaction","count":1,"path":"api/tags/transaction.json"},{"name":"was","slug":"was","count":1,"path":"api/tags/was.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"为什么 TCP 协议有 TIME_WAIT 状态","uid":"b7ecf3954ed2a73caa330011a27b5abb","slug":"JAVA/为什么 TCP 协议有 TIME_WAIT 状态","date":"2021-08-31T17:36:55.000Z","updated":"2025-09-30T03:26:24.076Z","comments":true,"path":"api/articles/JAVA/为什么 TCP 协议有 TIME_WAIT 状态.json","keywords":"XuGuangSheng","cover":"/covers/tcp-time-wait.jpg","text":"为什么 TCP 协议有 TIME_WAIT 状态 为什么这么设计（Why’s THE Design）是一系列关于计算机领域中程序设计决策的文章，我们在这个系列的...","permalink":"/post/JAVA/为什么 TCP 协议有 TIME_WAIT 状态","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"TCP","slug":"TCP","count":3,"path":"api/categories/TCP.json"},{"name":"JAVA","slug":"TCP/JAVA","count":1,"path":"api/categories/TCP/JAVA.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"WAIT","slug":"WAIT","count":1,"path":"api/tags/WAIT.json"},{"name":"TIME","slug":"TIME","count":1,"path":"api/tags/TIME.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}