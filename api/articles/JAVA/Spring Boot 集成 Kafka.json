{"title":"Spring Boot 集成 Kafka","uid":"067b852fcc8abb83b4af6ed8c83266b0","slug":"JAVA/Spring Boot 集成 Kafka","date":"2022-04-16T18:36:54.000Z","updated":"2025-09-30T03:26:17.430Z","comments":true,"path":"api/articles/JAVA/Spring Boot 集成 Kafka.json","keywords":"XuGuangSheng","cover":"/covers/spring-boot-kafka.jpg","content":"<h1 id=\"Spring-Boot-集成-Kafka\"><a href=\"#Spring-Boot-集成-Kafka\" class=\"headerlink\" title=\"Spring Boot 集成 Kafka\"></a>Spring Boot 集成 Kafka</h1><h2 id=\"Maven-依赖\"><a href=\"#Maven-依赖\" class=\"headerlink\" title=\"Maven 依赖\"></a><a href=\"#Maven-%E4%BE%9D%E8%B5%96\" title=\"Maven 依赖\"></a>Maven 依赖</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.kafka<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-kafka<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置属性\"><a href=\"#配置属性\" class=\"headerlink\" title=\"配置属性\"></a><a href=\"#%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7\" title=\"配置属性\"></a>配置属性</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">kafka:</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">bootstrap-servers:</span> <span class=\"string\">localhost:9092,localhost:9093,localhost:9094</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">producer:</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">batch-size:</span> <span class=\"number\">16384</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">buffer-memory:</span> <span class=\"number\">33554432</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">retries:</span> <span class=\"number\">0</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">acks:</span> <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"attr\">key-serializer:</span> <span class=\"string\">org.apache.kafka.common.serialization.StringSerializer</span></span><br><span class=\"line\">      <span class=\"attr\">value-serializer:</span> <span class=\"string\">org.apache.kafka.common.serialization.StringSerializer</span></span><br><span class=\"line\">      <span class=\"attr\">properties:</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"attr\">linger.ms:</span> <span class=\"number\">0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">consumer:</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">group-id:</span> <span class=\"string\">group-x</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">enable-auto-commit:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">auto-commit-interval:</span> <span class=\"number\">5000</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">auto-offset-reset:</span> <span class=\"string\">earliest</span></span><br><span class=\"line\">      <span class=\"attr\">key-deserializer:</span> <span class=\"string\">org.apache.kafka.common.serialization.StringDeserializer</span></span><br><span class=\"line\">      <span class=\"attr\">value-deserializer:</span> <span class=\"string\">org.apache.kafka.common.serialization.StringDeserializer</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"生产方\"><a href=\"#生产方\" class=\"headerlink\" title=\"生产方\"></a><a href=\"#%E7%94%9F%E4%BA%A7%E6%96%B9\" title=\"生产方\"></a>生产方</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Message</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String msg;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date sendTime;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topic</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageSender</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> KafkaTemplate&lt;Object, Object&gt; kafkaTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MessageSender</span><span class=\"params\">(KafkaTemplate&lt;Object, Object&gt; kafkaTemplate)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.kafkaTemplate = kafkaTemplate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">send</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">        kafkaTemplate.send(TOPIC, message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"消费方\"><a href=\"#消费方\" class=\"headerlink\" title=\"消费方\"></a><a href=\"#%E6%B6%88%E8%B4%B9%E6%96%B9\" title=\"消费方\"></a>消费方</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topic</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageReceiver</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(id = &quot;group-2-1&quot;, topics = &#123;TOPIC&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receive</span><span class=\"params\">(ConsumerRecord&lt;Object, Object&gt; record, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        Optional&lt;Object&gt; messageOptional = Optional.ofNullable(record.value());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (messageOptional.isPresent()) &#123;</span><br><span class=\"line\">            <span class=\"type\">Object</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> messageOptional.get();</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(id = &quot;group-2-2&quot;, topics = &#123;TOPIC&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receive</span><span class=\"params\">(String message, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"高级配置\"><a href=\"#高级配置\" class=\"headerlink\" title=\"高级配置\"></a><a href=\"#%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE\" title=\"高级配置\"></a>高级配置</h2><h3 id=\"序列化-x2F-反序列化\"><a href=\"#序列化-x2F-反序列化\" class=\"headerlink\" title=\"序列化 &#x2F; 反序列化\"></a><a href=\"#%E5%BA%8F%E5%88%97%E5%8C%96-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\" title=\"序列化 / 反序列化\"></a>序列化 &#x2F; 反序列化</h3><p>当我们发送对象类型消息数据时，在消费者方默认接收到的数据类型是字符串，如果我们希望接收到的是对象类型，可以在生产者 &#x2F; 消费者两方都添加一点配置。</p>\n<ul>\n<li><p>生产方</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">kafka:</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">producer:</span></span><br><span class=\"line\">      <span class=\"attr\">properties:</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"attr\">spring.json.type.mapping:</span> <span class=\"string\">message:samples.dto.Message</span></span><br></pre></td></tr></table></figure></li>\n<li><p>消费方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RecordMessageConverter <span class=\"title function_\">converter</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">DefaultJackson2JavaTypeMapper</span> <span class=\"variable\">typeMapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultJackson2JavaTypeMapper</span>();</span><br><span class=\"line\">        typeMapper.setTypePrecedence(Jackson2JavaTypeMapper.TypePrecedence.TYPE_ID);</span><br><span class=\"line\">        typeMapper.addTrustedPackages(<span class=\"string\">&quot;samples.dto&quot;</span>);</span><br><span class=\"line\">        Map&lt;String, Class&lt;?&gt;&gt; mappings = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;(<span class=\"number\">10</span>);</span><br><span class=\"line\">        mappings.put(<span class=\"string\">&quot;message&quot;</span>, Message.class);</span><br><span class=\"line\">        typeMapper.setIdClassMapping(mappings);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">StringJsonMessageConverter</span> <span class=\"variable\">converter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringJsonMessageConverter</span>();</span><br><span class=\"line\">        converter.setTypeMapper(typeMapper);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> converter;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>之后，我们就能够像下面这样接收 Message 参数的消息了：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@KafkaListener(id = &quot;group-2-3&quot;, topics = &#123;TOPIC&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receive</span><span class=\"params\">(Message message, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    acknowledgment.acknowledge();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在后续演示代码中，默认都会配置序列化 &#x2F; 反序列化，就不再一一列举了。</p>\n<h3 id=\"获取消息发送结果\"><a href=\"#获取消息发送结果\" class=\"headerlink\" title=\"获取消息发送结果\"></a><a href=\"#%E8%8E%B7%E5%8F%96%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81%E7%BB%93%E6%9E%9C\" title=\"获取消息发送结果\"></a>获取消息发送结果</h3><p>在发送消息之后，我们可以获取到消息发送结果，既可以以同步方式获取结果，也可以以异步方式获取结果。</p>\n<ul>\n<li><p>同步方式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendAndGetResultSync</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">    ListenableFuture&lt;SendResult&lt;Object, Object&gt;&gt; future = kafkaTemplate.send(TOPIC, message);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        SendResult&lt;Object, Object&gt; result = future.get();</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Sync get send result success, result: &#123;&#125;&quot;</span>, result);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Throwable e) &#123;</span><br><span class=\"line\">        log.error(<span class=\"string\">&quot;Sync get send result failure&quot;</span>, e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>异步方式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendAndGetResultAsync</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">    kafkaTemplate.send(TOPIC, message).addCallback(<span class=\"keyword\">new</span> <span class=\"title class_\">ListenableFutureCallback</span>&lt;SendResult&lt;Object, Object&gt;&gt;() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onSuccess</span><span class=\"params\">(SendResult&lt;Object, Object&gt; result)</span> &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;Async get send result success, result: &#123;&#125;&quot;</span>, result);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onFailure</span><span class=\"params\">(Throwable e)</span> &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">&quot;Async get send result failure&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"使用事务\"><a href=\"#使用事务\" class=\"headerlink\" title=\"使用事务\"></a><a href=\"#%E4%BD%BF%E7%94%A8%E4%BA%8B%E5%8A%A1\" title=\"使用事务\"></a>使用事务</h3><h4 id=\"开启事务\"><a href=\"#开启事务\" class=\"headerlink\" title=\"开启事务\"></a><a href=\"#%E5%BC%80%E5%90%AF%E4%BA%8B%E5%8A%A1\" title=\"开启事务\"></a>开启事务</h4><p>当我们在生产者方配置了属性 transaction-id-prefix 后，Spring 会自动帮我们开启事务。<br>不过开启事务之后，retries 属性需要设置为大于 0，acks 属性需要设置为 all 或 -1。<br>另外，我们还需要将消费者方的 isolation.level 设置为 read_committed，这样对于未提交事务的消息，消费者就不会读取到。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">kafka:</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">producer:</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">retries:</span> <span class=\"number\">3</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">acks:</span> <span class=\"number\">-1</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">transaction-id-prefix:</span> <span class=\"string\">tx.</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">consumer:</span></span><br><span class=\"line\">      <span class=\"attr\">properties:</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"attr\">isolation.level:</span> <span class=\"string\">read_committed</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"使用事务-1\"><a href=\"#使用事务-1\" class=\"headerlink\" title=\"使用事务\"></a><a href=\"#%E4%BD%BF%E7%94%A8%E4%BA%8B%E5%8A%A1-1\" title=\"使用事务\"></a>使用事务</h4><p>有两种方式<br>Spring 提供了两种方式使用事务：调用 KafkaTemplate 的 executeInTransaction 方法，或使用 @Transactional。</p>\n<ul>\n<li><p>调用 KafkaTemplate 的 executeInTransaction 方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendInTransactionByMethod</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">    kafkaTemplate.executeInTransaction(kafkaTemplate -&gt; &#123;</span><br><span class=\"line\">        kafkaTemplate.send(TOPIC, message);</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Send in transaction by method success&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>使用 @Transactional</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Transactional(rollbackFor = Exception.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendInTransactionByAnnotation</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">    kafkaTemplate.send(TOPIC, message);</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;Send in transaction by annotation success&quot;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>需要注意的是，在生产者开启事务之后，所有发送消息的地方都必须放在事务中执行。</p>\n<h3 id=\"转发消息\"><a href=\"#转发消息\" class=\"headerlink\" title=\"转发消息\"></a><a href=\"#%E8%BD%AC%E5%8F%91%E6%B6%88%E6%81%AF\" title=\"转发消息\"></a>转发消息</h3><p>消费者在收到消息并对消息进行处理之后，可以再将新的消息发送出去。<br>在消费方，我们既可以使用 kafkaTemplate.send 实现手动发送消息，也可以使用 @Send 实现自动发送消息。</p>\n<ul>\n<li><p>生产方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_RESEND</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic-resend&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_RESEND_NEXT</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic-resend-next&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topicResend</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC_RESEND).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topicResendNext</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC_RESEND_NEXT).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageReceiver</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(id = &quot;group-1-1&quot;, topics = &#123;TOPIC_RESEND_NEXT&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receive</span><span class=\"params\">(ConsumerRecord&lt;Object, Object&gt; record, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        Optional&lt;Object&gt; messageOptional = Optional.ofNullable(record.value());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (messageOptional.isPresent()) &#123;</span><br><span class=\"line\">            <span class=\"type\">Object</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> messageOptional.get();</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(id = &quot;group-1-2&quot;, topics = &#123;TOPIC_RESEND_NEXT&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receive</span><span class=\"params\">(String msg, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Receive msg: &#123;&#125;&quot;</span>, msg);</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageReceiver</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(id = &quot;group-1-1&quot;, topics = &#123;TOPIC_RESEND_NEXT&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receive</span><span class=\"params\">(ConsumerRecord&lt;Object, Object&gt; record, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        Optional&lt;Object&gt; messageOptional = Optional.ofNullable(record.value());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (messageOptional.isPresent()) &#123;</span><br><span class=\"line\">            <span class=\"type\">Object</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> messageOptional.get();</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(id = &quot;group-1-2&quot;, topics = &#123;TOPIC_RESEND_NEXT&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receive</span><span class=\"params\">(String msg, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Receive msg: &#123;&#125;&quot;</span>, msg);</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>消费方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_RESEND</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic-resend&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_RESEND_NEXT</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic-resend-next&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topicResend</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC_RESEND).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topicResendNext</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC_RESEND_NEXT).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageReceiver</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> KafkaTemplate&lt;Object, Object&gt; kafkaTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@SuppressWarnings(&quot;SpringJavaInjectionPointsAutowiringInspection&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MessageReceiver</span><span class=\"params\">(KafkaTemplate&lt;Object, Object&gt; kafkaTemplate)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.kafkaTemplate = kafkaTemplate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@SendTo</span></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(id = &quot;group-2-4&quot;, topics = &#123;TOPIC_RESEND&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receiveAndResendManual</span><span class=\"params\">(Message message, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">        kafkaTemplate.send(TOPIC_RESEND_NEXT, message.getMsg());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@SendTo(TOPIC_RESEND_NEXT)</span></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(id = &quot;group-2-5&quot;, topics = &#123;TOPIC_RESEND&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">receiveAndResendAuto</span><span class=\"params\">(Message message, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> message.getMsg();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"获取消息回复\"><a href=\"#获取消息回复\" class=\"headerlink\" title=\"获取消息回复\"></a><a href=\"#%E8%8E%B7%E5%8F%96%E6%B6%88%E6%81%AF%E5%9B%9E%E5%A4%8D\" title=\"获取消息回复\"></a>获取消息回复</h3><p>生产者在发送消息之后，可以同时等待获取消费者接收并处理消息之后的回复，就像传统的 RPC 交互那样，要实现这个功能，我们需要使用 ReplyingKafkaTemplate。<br>ReplyingKafkaTemplate 是 KafkaTemplate 的一个子类，它除了继承父类的方法，还新增了方法 sendAndReceive ，该方法实现了消息发送 &#x2F; 回复的语义。<br>Spring Boot 没有提供开箱即用的 ReplyingKafkaTemplate，我们需要做些额外的配置。</p>\n<ul>\n<li><p>生产方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_RECEIVE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic-receive&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_REPLIES</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;replies&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">GROUP_REPLIES</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;repliesGroup&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topicReceive</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC_RECEIVE).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topicReplies</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC_REPLIES).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ConcurrentMessageListenerContainer&lt;Object, Object&gt; <span class=\"title function_\">concurrentMessageListenerContainer</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">            ConcurrentKafkaListenerContainerFactory&lt;Object, Object&gt; containerFactory)</span> &#123;</span><br><span class=\"line\">        ConcurrentMessageListenerContainer&lt;Object, Object&gt; container =</span><br><span class=\"line\">                containerFactory.createContainer(TOPIC_REPLIES);</span><br><span class=\"line\">        container.getContainerProperties().setGroupId(GROUP_REPLIES);</span><br><span class=\"line\">        container.setAutoStartup(<span class=\"literal\">false</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> container;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ReplyingKafkaTemplate&lt;Object, Object, Object&gt; <span class=\"title function_\">replyingKafkaTemplate</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">            ProducerFactory&lt;Object, Object&gt; producerFactory,</span></span><br><span class=\"line\"><span class=\"params\">            ConcurrentMessageListenerContainer&lt;Object, Object&gt; concurrentMessageListenerContainer)</span> &#123;</span><br><span class=\"line\">        ReplyingKafkaTemplate&lt;Object, Object, Object&gt; kafkaTemplate =</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">ReplyingKafkaTemplate</span>&lt;&gt;(producerFactory, concurrentMessageListenerContainer);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> kafkaTemplate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> KafkaTemplate&lt;Object, Object&gt; <span class=\"title function_\">kafkaTemplate</span><span class=\"params\">(ProducerFactory&lt;Object, Object&gt; producerFactory)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">KafkaTemplate</span>&lt;&gt;(producerFactory);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageSender</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ReplyingKafkaTemplate&lt;Object, Object, Object&gt; replyingKafkaTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MessageSender</span><span class=\"params\">(ReplyingKafkaTemplate&lt;Object, Object, Object&gt; replyingKafkaTemplate)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.replyingKafkaTemplate = replyingKafkaTemplate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendAndReceive</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">        ProducerRecord&lt;Object, Object&gt; producerRecord = <span class=\"keyword\">new</span> <span class=\"title class_\">ProducerRecord</span>&lt;&gt;(TOPIC_RECEIVE, message);</span><br><span class=\"line\">        </span><br><span class=\"line\">        RequestReplyFuture&lt;Object, Object, Object&gt; replyFuture = replyingKafkaTemplate.sendAndReceive(producerRecord);</span><br><span class=\"line\">        ConsumerRecord&lt;Object, Object&gt; consumerRecord;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            consumerRecord = replyFuture.get();</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;Receive reply success, result: &#123;&#125;&quot;</span>, consumerRecord.value());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException | ExecutionException e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">&quot;Receive reply failure&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>消费方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_RECEIVE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic-receive&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topicReceive</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC_RECEIVE).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageReceiver</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@SendTo</span></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(id = &quot;group-2-6&quot;, topics = &#123;TOPIC_RECEIVE&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">receiveAndReply</span><span class=\"params\">(Message message, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;successful&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"多方法处理消息\"><a href=\"#多方法处理消息\" class=\"headerlink\" title=\"多方法处理消息\"></a><a href=\"#%E5%A4%9A%E6%96%B9%E6%B3%95%E5%A4%84%E7%90%86%E6%B6%88%E6%81%AF\" title=\"多方法处理消息\"></a>多方法处理消息</h3><p>组合使用 @KafkaListener 和 @KafkaHandler，能够让我们在传递消息时，根据转换后的消息有效负载类型来确定调用哪个方法。</p>\n<ul>\n<li><p>生产方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_MULTIPLE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic-multiple&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topicMultiple</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC_MULTIPLE).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageSender</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> KafkaTemplate&lt;Object, Object&gt; kafkaTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MessageSender</span><span class=\"params\">(KafkaTemplate&lt;Object, Object&gt; kafkaTemplate)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.kafkaTemplate = kafkaTemplate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendToMultipleHandlers</span><span class=\"params\">(String msg)</span> &#123;</span><br><span class=\"line\">        kafkaTemplate.send(TOPIC_MULTIPLE, msg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendToMultipleHandlers</span><span class=\"params\">(Message message)</span> &#123;</span><br><span class=\"line\">        kafkaTemplate.send(TOPIC_MULTIPLE, message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>消费方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">TOPIC_MULTIPLE</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;topic-multiple&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> NewTopic <span class=\"title function_\">topicMultiple</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TopicBuilder.name(TOPIC_MULTIPLE).partitions(<span class=\"number\">1</span>).replicas(<span class=\"number\">1</span>).build();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@KafkaListener(id = &quot;group-2-7&quot;, topics = &#123;TOPIC_MULTIPLE&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageReceiverMultipleMethods</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaHandler</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handlerStr</span><span class=\"params\">(String message, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;, type of String&quot;</span>, message);</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaHandler</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handlerMessage</span><span class=\"params\">(Message message, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;, type of Message&quot;</span>, message);</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaHandler(isDefault = true)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">handlerUnknown</span><span class=\"params\">(Object message, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;, type of Unknown&quot;</span>, message);</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"手动提交-offset-（ack）\"><a href=\"#手动提交-offset-（ack）\" class=\"headerlink\" title=\"手动提交 offset （ack）\"></a><a href=\"#%E6%89%8B%E5%8A%A8%E6%8F%90%E4%BA%A4-offset-%EF%BC%88ack%EF%BC%89\" title=\"手动提交 offset （ack）\"></a>手动提交 offset （ack）</h3><p>默认情况下，Kafka 会自动帮我们提交 offset，但是这样做容易导致消息重复消费或消失丢失：</p>\n<ul>\n<li>在消费者收到消息之后，且 kafka 未自动提交 offset 之前，broker 宕机了，然后重启 broker，此时消费者会从原来的 offset 开始消费，于是出现了重复消费；</li>\n<li>在消费者收到消息之后，且消费者还没有处理完消息时，由于自动提交的间隔时间到了，于是 kafka 自动提交了 offset，但是之后消费者又挂掉了，那么当消费者重启之后，会从下一个 offset 开始消费，这样前面的消息就丢失了。<br>我们可以改为使用手动提交 offset，只需要做两处调整：</li>\n</ul>\n<ol>\n<li><p>修改 application.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">kafka:</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attr\">consumer:</span></span><br><span class=\"line\">      <span class=\"attr\">enable-auto-commit:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">listener:</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"attr\">ack-mode:</span> <span class=\"string\">manual</span></span><br></pre></td></tr></table></figure></li>\n<li><p>消息处理完成之后，调用 Acknowledgment 的 acknowledge 方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MessageReceiver</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@KafkaListener(id = &quot;group-2-1&quot;, topics = &#123;&quot;topic-1&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receive</span><span class=\"params\">(ConsumerRecord&lt;Object, Object&gt; record, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;receive record: &#123;&#125;&quot;</span>, record);</span><br><span class=\"line\">        Optional&lt;Object&gt; messageOptional = Optional.ofNullable(record.value());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (messageOptional.isPresent()) &#123;</span><br><span class=\"line\">            <span class=\"type\">Object</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> messageOptional.get();</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        acknowledgment.acknowledge();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a><a href=\"#%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86\" title=\"异常处理\"></a>异常处理</h3><p>对于消费者在处理消息过程中抛出的异常，我们可以设置 errorHandler，然后在 errorHandler 中统一处理。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@KafkaListener(id = &quot;group-2-8&quot;, topics = &#123;TOPIC_EXCEPTION&#125;, errorHandler = &quot;customErrorHandler&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receiveWithException</span><span class=\"params\">(Message message, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Service(&quot;customErrorHandler&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomKafkaListenerErrorHandler</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">KafkaListenerErrorHandler</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">handleError</span><span class=\"params\">(Message&lt;?&gt; message, ListenerExecutionFailedException exception)</span> &#123;</span><br><span class=\"line\">        log.error(<span class=\"string\">&quot;Handle message with exception, message: &#123;&#125;&quot;</span>, message.getPayload().toString());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">handleError</span><span class=\"params\">(Message&lt;?&gt; message, ListenerExecutionFailedException exception, Consumer&lt;?, ?&gt; consumer)</span> &#123;</span><br><span class=\"line\">        log.error(<span class=\"string\">&quot;Handle message with exception, message: &#123;&#125;&quot;</span>, message.getPayload().toString());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"并发接收消息\"><a href=\"#并发接收消息\" class=\"headerlink\" title=\"并发接收消息\"></a><a href=\"#%E5%B9%B6%E5%8F%91%E6%8E%A5%E6%94%B6%E6%B6%88%E6%81%AF\" title=\"并发接收消息\"></a>并发接收消息</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@KafkaListener(id = &quot;group-2-9&quot;, topics = &#123;TOPIC_CONCURRENT&#125;, concurrency = &quot;3&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receiveConcurrent</span><span class=\"params\">(Message message, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;Receive message: &#123;&#125;&quot;</span>, message);</span><br><span class=\"line\">    acknowledgment.acknowledge();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"暂停与恢复消费\"><a href=\"#暂停与恢复消费\" class=\"headerlink\" title=\"暂停与恢复消费\"></a><a href=\"#%E6%9A%82%E5%81%9C%E4%B8%8E%E6%81%A2%E5%A4%8D%E6%B6%88%E8%B4%B9\" title=\"暂停与恢复消费\"></a>暂停与恢复消费</h3><p>通过使用 KafkaListenerEndpointRegistry，我们可以动态的暂停与恢复消费者消费消息。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> KafkaListenerEndpointRegistry kafkaListenerEndpointRegistry;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">MessageSender</span><span class=\"params\">(KafkaListenerEndpointRegistry kafkaListenerEndpointRegistry)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.kafkaListenerEndpointRegistry = kafkaListenerEndpointRegistry;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">startListener</span><span class=\"params\">(String listenerId)</span> &#123;</span><br><span class=\"line\">    kafkaListenerEndpointRegistry.getListenerContainer(listenerId).start();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">stopListener</span><span class=\"params\">(String listenerId)</span> &#123;</span><br><span class=\"line\">    kafkaListenerEndpointRegistry.getListenerContainer(listenerId).pause();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">resumeListener</span><span class=\"params\">(String listenerId)</span> &#123;</span><br><span class=\"line\">    kafkaListenerEndpointRegistry.getListenerContainer(listenerId).resume();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"消息重试与死信队列\"><a href=\"#消息重试与死信队列\" class=\"headerlink\" title=\"消息重试与死信队列\"></a><a href=\"#%E6%B6%88%E6%81%AF%E9%87%8D%E8%AF%95%E4%B8%8E%E6%AD%BB%E4%BF%A1%E9%98%9F%E5%88%97\" title=\"消息重试与死信队列\"></a>消息重试与死信队列</h3><p>当消费者在处理消息过程中发生异常时，我们可以进行多次重试，如果最终还是存在异常，我们可以将消息发送到预定的 Topic，即死信队列中。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> ConcurrentKafkaListenerContainerFactory&lt;Object, Object&gt; <span class=\"title function_\">kafkaListenerContainerFactory</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">        ConcurrentKafkaListenerContainerFactoryConfigurer configurer,</span></span><br><span class=\"line\"><span class=\"params\">        ConsumerFactory&lt;Object, Object&gt; consumerFactory,</span></span><br><span class=\"line\"><span class=\"params\">        KafkaTemplate&lt;Object, Object&gt; kafkaTemplate)</span> &#123;</span><br><span class=\"line\">    ConcurrentKafkaListenerContainerFactory&lt;Object, Object&gt; factory = <span class=\"keyword\">new</span> <span class=\"title class_\">ConcurrentKafkaListenerContainerFactory</span>&lt;&gt;();</span><br><span class=\"line\">    configurer.configure(factory, consumerFactory);</span><br><span class=\"line\">    factory.setErrorHandler(<span class=\"keyword\">new</span> <span class=\"title class_\">SeekToCurrentErrorHandler</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">DeadLetterPublishingRecoverer</span>(kafkaTemplate), <span class=\"keyword\">new</span> <span class=\"title class_\">FixedBackOff</span>(<span class=\"number\">0L</span>, <span class=\"number\">3L</span>)));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> factory;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@KafkaListener(id = &quot;group-2-10-2&quot;, topics = &#123;TOPIC_DEAD_LETTER + &quot;.DLT&quot;&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receiveByDeadLetter</span><span class=\"params\">(ConsumerRecord&lt;Object, Object&gt; record, Acknowledgment acknowledgment)</span> &#123;</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;Receive message from DLT, message: &#123;&#125;&quot;</span>, record.value());</span><br><span class=\"line\">    acknowledgment.acknowledge();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拦截器\"><a href=\"#拦截器\" class=\"headerlink\" title=\"拦截器\"></a><a href=\"#%E6%8B%A6%E6%88%AA%E5%99%A8\" title=\"拦截器\"></a>拦截器</h3><p>Apache Kafka 提供了一种向生产者和消费者添加拦截器的机制。下面我们将演示如何在 Spring Boot 中配置拦截器。</p>\n<ul>\n<li><p>生产方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ProducerFactory&lt;Object, Object&gt; <span class=\"title function_\">kafkaProducerFactory</span><span class=\"params\">(KafkaProperties properties, CustomComponent customComponent)</span> &#123;</span><br><span class=\"line\">        Map&lt;String, Object&gt; producerProperties = properties.buildProducerProperties();</span><br><span class=\"line\">        producerProperties.put(ProducerConfig.INTERCEPTOR_CLASSES_CONFIG, CustomProducerInterceptor.class.getName());</span><br><span class=\"line\">        producerProperties.put(<span class=\"string\">&quot;custom.component&quot;</span>, customComponent);</span><br><span class=\"line\">        DefaultKafkaProducerFactory&lt;Object, Object&gt; factory = <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultKafkaProducerFactory</span>&lt;&gt;(producerProperties);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">transactionIdPrefix</span> <span class=\"operator\">=</span> properties.getProducer().getTransactionIdPrefix();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (transactionIdPrefix != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            factory.setTransactionIdPrefix(transactionIdPrefix);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> factory;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomComponent</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doSomething</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Do something&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomProducerInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ProducerInterceptor</span>&lt;Object, Object&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> CustomComponent customComponent;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ProducerRecord&lt;Object, Object&gt; <span class=\"title function_\">onSend</span><span class=\"params\">(ProducerRecord&lt;Object, Object&gt; record)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Before send message, do your own business&quot;</span>);</span><br><span class=\"line\">        customComponent.doSomething();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> record;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onAcknowledgement</span><span class=\"params\">(RecordMetadata metadata, Exception exception)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(Map&lt;String, ?&gt; configs)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.customComponent = (CustomComponent) configs.get(<span class=\"string\">&quot;custom.component&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>消费方</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">KafkaConfiguration</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ProducerFactory&lt;Object, Object&gt; <span class=\"title function_\">kafkaProducerFactory</span><span class=\"params\">(KafkaProperties properties, CustomComponent customComponent)</span> &#123;</span><br><span class=\"line\">        Map&lt;String, Object&gt; producerProperties = properties.buildProducerProperties();</span><br><span class=\"line\">        producerProperties.put(ProducerConfig.INTERCEPTOR_CLASSES_CONFIG, CustomProducerInterceptor.class.getName());</span><br><span class=\"line\">        producerProperties.put(<span class=\"string\">&quot;custom.component&quot;</span>, customComponent);</span><br><span class=\"line\">        DefaultKafkaProducerFactory&lt;Object, Object&gt; factory = <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultKafkaProducerFactory</span>&lt;&gt;(producerProperties);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">transactionIdPrefix</span> <span class=\"operator\">=</span> properties.getProducer().getTransactionIdPrefix();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (transactionIdPrefix != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            factory.setTransactionIdPrefix(transactionIdPrefix);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> factory;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomComponent</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doSomething</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Do something&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomProducerInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ProducerInterceptor</span>&lt;Object, Object&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> CustomComponent customComponent;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ProducerRecord&lt;Object, Object&gt; <span class=\"title function_\">onSend</span><span class=\"params\">(ProducerRecord&lt;Object, Object&gt; record)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;Before send message, do your own business&quot;</span>);</span><br><span class=\"line\">        customComponent.doSomething();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> record;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onAcknowledgement</span><span class=\"params\">(RecordMetadata metadata, Exception exception)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(Map&lt;String, ?&gt; configs)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.customComponent = (CustomComponent) configs.get(<span class=\"string\">&quot;custom.component&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","text":"Spring Boot 集成 KafkaMaven 依赖1234<dependency> <groupId>org.springframework.kafka<...","permalink":"/post/JAVA/Spring Boot 集成 Kafka","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"23 mins."},"categories":[{"name":"生产方","slug":"生产方","count":1,"path":"api/categories/生产方.json"},{"name":"JAVA","slug":"生产方/JAVA","count":1,"path":"api/categories/生产方/JAVA.json"}],"tags":[{"name":"消费方","slug":"消费方","count":1,"path":"api/tags/消费方.json"},{"name":"offset","slug":"offset","count":1,"path":"api/tags/offset.json"},{"name":"使用事务","slug":"使用事务","count":1,"path":"api/tags/使用事务.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Spring-Boot-%E9%9B%86%E6%88%90-Kafka\"><span class=\"toc-text\">Spring Boot 集成 Kafka</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Maven-%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">Maven 依赖</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">配置属性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%9F%E4%BA%A7%E6%96%B9\"><span class=\"toc-text\">生产方</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B6%88%E8%B4%B9%E6%96%B9\"><span class=\"toc-text\">消费方</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">高级配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E5%88%97%E5%8C%96-x2F-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">序列化 &#x2F; 反序列化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">获取消息发送结果</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E4%BA%8B%E5%8A%A1\"><span class=\"toc-text\">使用事务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%90%AF%E4%BA%8B%E5%8A%A1\"><span class=\"toc-text\">开启事务</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E4%BA%8B%E5%8A%A1-1\"><span class=\"toc-text\">使用事务</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BD%AC%E5%8F%91%E6%B6%88%E6%81%AF\"><span class=\"toc-text\">转发消息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E6%B6%88%E6%81%AF%E5%9B%9E%E5%A4%8D\"><span class=\"toc-text\">获取消息回复</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E6%96%B9%E6%B3%95%E5%A4%84%E7%90%86%E6%B6%88%E6%81%AF\"><span class=\"toc-text\">多方法处理消息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%8B%E5%8A%A8%E6%8F%90%E4%BA%A4-offset-%EF%BC%88ack%EF%BC%89\"><span class=\"toc-text\">手动提交 offset （ack）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86\"><span class=\"toc-text\">异常处理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E5%8F%91%E6%8E%A5%E6%94%B6%E6%B6%88%E6%81%AF\"><span class=\"toc-text\">并发接收消息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9A%82%E5%81%9C%E4%B8%8E%E6%81%A2%E5%A4%8D%E6%B6%88%E8%B4%B9\"><span class=\"toc-text\">暂停与恢复消费</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B6%88%E6%81%AF%E9%87%8D%E8%AF%95%E4%B8%8E%E6%AD%BB%E4%BF%A1%E9%98%9F%E5%88%97\"><span class=\"toc-text\">消息重试与死信队列</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%A6%E6%88%AA%E5%99%A8\"><span class=\"toc-text\">拦截器</span></a></li></ol></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Bulk异常引发的Elasticsearch内存泄漏","uid":"13e3d87bd156131d5858fa5b620de5c7","slug":"MIDDLEWARE/Bulk异常引发的Elasticsearch内存泄漏","date":"2022-07-06T09:41:21.000Z","updated":"2025-09-30T03:26:44.648Z","comments":true,"path":"api/articles/MIDDLEWARE/Bulk异常引发的Elasticsearch内存泄漏.json","keywords":"XuGuangSheng","cover":"/covers/bulkelasticsearch.jpg","text":"Bulk异常引发的Elasticsearch内存泄漏运维线上 ES 集群时，偶然遇到内存泄露的问题，排查问题时看到了这篇文章，清晰明了，所以分享给大家，希望给大...","permalink":"/post/MIDDLEWARE/Bulk异常引发的Elasticsearch内存泄漏","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"thread","slug":"thread","count":1,"path":"api/categories/thread.json"},{"name":"MIDDLEWARE","slug":"thread/MIDDLEWARE","count":1,"path":"api/categories/thread/MIDDLEWARE.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"log","slug":"log","count":4,"path":"api/tags/log.json"},{"name":"bulk","slug":"bulk","count":1,"path":"api/tags/bulk.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Linux PageCache详解","uid":"5d405dae2a57ea9119868cf9afedbd64","slug":"LINUX/Linux PageCache详解","date":"2022-04-12T14:38:01.000Z","updated":"2025-09-30T03:26:31.266Z","comments":true,"path":"api/articles/LINUX/Linux PageCache详解.json","keywords":"XuGuangSheng","cover":"/covers/linux-pagecache.jpg","text":"Linux PageCache详解应用程序要存储或访问数据时，只需读或者写” 文件” 的一维地址空间即可，而这个地址空间与存储设备上存储块之间的对应关系则由操作...","permalink":"/post/LINUX/Linux PageCache详解","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"proc","slug":"proc","count":2,"path":"api/categories/proc.json"},{"name":"LINUX","slug":"proc/LINUX","count":2,"path":"api/categories/proc/LINUX.json"}],"tags":[{"name":"Cache","slug":"Cache","count":2,"path":"api/tags/Cache.json"},{"name":"cache","slug":"cache","count":2,"path":"api/tags/cache.json"},{"name":"page","slug":"page","count":1,"path":"api/tags/page.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}