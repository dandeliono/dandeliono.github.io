{"title":"regex","uid":"83a6d625bad3243ff35a5af336d58b53","slug":"JAVA/regex","date":"2020-09-07T22:13:46.000Z","updated":"2025-09-30T03:26:23.091Z","comments":true,"path":"api/articles/JAVA/regex.json","keywords":"XuGuangSheng","cover":"/covers/regex.jpg","content":"<p>匹配中文:</p>\n<figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"character\">\\u4e00</span>-<span class=\"character\">\\u9fa5</span>]</span><br></pre></td></tr></table></figure>\n\n<p>英文字母:</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">[a-zA-Z]</span></span><br></pre></td></tr></table></figure>\n\n<p>数字:</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">[0-9]</span></span><br></pre></td></tr></table></figure>\n\n\n<p>匹配中文，英文字母和数字及_:</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^[<span class=\"symbol\">\\u4e00</span>-<span class=\"symbol\">\\u9fa5</span>_a-zA-Z0-9]+$</span><br></pre></td></tr></table></figure>\n\n\n<p>同时判断输入长度：</p>\n<figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"character\">\\u4e00</span>-<span class=\"character\">\\u9fa5</span>_a-zA-Z0-9_]&#123;<span class=\"number\">4</span><span class=\"punctuation\">,</span><span class=\"number\">10</span>&#125;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^[\\w<span class=\"symbol\">\\u4E00</span>-<span class=\"symbol\">\\u9FA5</span><span class=\"symbol\">\\uF900</span>-<span class=\"symbol\">\\uFA2D</span>]*$</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>一个正则表达式，只含有汉字、数字、字母、下划线不能以下划线开头和结尾：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^(<span class=\"string\">?!</span>_)(<span class=\"string\">?!</span>.*<span class=\"string\">?_</span><span class=\"variable\">$)</span>[a-zA-<span class=\"variable constant_\">Z0</span>-9_\\u4e00-\\u9fa5]+$</span><br></pre></td></tr></table></figure>\n<p>其中：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^与字符串开始的地方匹配</span><br><span class=\"line\">(<span class=\"string\">?!</span>_)　　不能以_开头</span><br><span class=\"line\">(<span class=\"string\">?!</span>.*<span class=\"string\">?_</span><span class=\"variable\">$)</span>　　不能以_结尾</span><br><span class=\"line\">[a-zA-<span class=\"variable constant_\">Z0</span>-9_\\u4e00-\\u9fa5]+　　至少一个汉字、数字、字母、下划线</span><br><span class=\"line\"><span class=\"variable\">$　</span>　与字符串结束的地方匹配</span><br></pre></td></tr></table></figure>\n<p>放在程序里前面加@，否则需要\\进行转义 </p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;^(?!_)(?!.*?_<span class=\"variable\">$</span>)[a-zA-Z0-9_\\u4e00-\\u9fa5]+<span class=\"variable\">$</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<p>或者：<code>&quot;^(?!_)\\w*(? </code></p>\n</li>\n<li><p>只含有汉字、数字、字母、下划线，下划线位置不限：</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^[a-zA-Z0-9_<span class=\"symbol\">\\u4e00</span>-<span class=\"symbol\">\\u9fa5</span>]+$</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>由数字、26个英文字母或者下划线组成的字符串</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^\\w+<span class=\"symbol\">$</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2~4个汉字</p>\n<figure class=\"highlight wren\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;^[<span class=\"char escape_\">\\u4E00</span>-<span class=\"char escape_\">\\u9FA5</span>]&#123;2,4&#125;$&quot;</span>;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","text":"匹配中文: 1[\\u4e00-\\u9fa5] 英文字母: 1[a-zA-Z] 数字: 1[0-9] 匹配中文，英文字母和数字及_: 1^[\\u4e00-\\u9f...","permalink":"/post/JAVA/regex","photos":[],"count_time":{"symbolsCount":626,"symbolsTime":"1 mins."},"categories":[{"name":"数字","slug":"数字","count":1,"path":"api/categories/数字.json"},{"name":"JAVA","slug":"数字/JAVA","count":1,"path":"api/categories/数字/JAVA.json"}],"tags":[{"name":"匹配中文","slug":"匹配中文","count":1,"path":"api/tags/匹配中文.json"},{"name":"只含有汉字","slug":"只含有汉字","count":1,"path":"api/tags/只含有汉字.json"},{"name":"字母","slug":"字母","count":1,"path":"api/tags/字母.json"}],"toc":"","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Kadane算法","uid":"2c671df6ac43c352607865f709c91620","slug":"ALG/Kadane","date":"2020-09-22T22:01:24.000Z","updated":"2025-09-30T03:26:01.248Z","comments":true,"path":"api/articles/ALG/Kadane.json","keywords":"XuGuangSheng","cover":"/covers/kadane.jpg","text":"Kadane算法扫描一次整个数列的所有数值，在每一个扫描点计算以该点数值为结束点的子数列的最大和（正数和）。该子数列由两部分组成：以前一个位置为结束点的最大子数...","permalink":"/post/ALG/Kadane","photos":[],"count_time":{"symbolsCount":641,"symbolsTime":"1 mins."},"categories":[{"name":"Kadane","slug":"Kadane","count":1,"path":"api/categories/Kadane.json"},{"name":"ALG","slug":"Kadane/ALG","count":1,"path":"api/categories/Kadane/ALG.json"}],"tags":[{"name":"算法扫描一次整个数列的所有数值","slug":"算法扫描一次整个数列的所有数值","count":1,"path":"api/tags/算法扫描一次整个数列的所有数值.json"},{"name":"在每一个扫描点计算以该点数值为结束点的子数列的最大和","slug":"在每一个扫描点计算以该点数值为结束点的子数列的最大和","count":1,"path":"api/tags/在每一个扫描点计算以该点数值为结束点的子数列的最大和.json"},{"name":"正数和","slug":"正数和","count":1,"path":"api/tags/正数和.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}