{"title":"NullPointerException 没有打印异常栈问题追踪","uid":"f3f0b4e51e77515a8031a4140316d20f","slug":"JAVA/NullPointerException 没有打印异常栈问题追踪","date":"2024-01-31T16:27:01.000Z","updated":"2025-09-30T03:26:14.215Z","comments":true,"path":"api/articles/JAVA/NullPointerException 没有打印异常栈问题追踪.json","keywords":"XuGuangSheng","cover":"/covers/nullpointerexception.jpg","content":"<h1 id=\"NullPointerException-没有打印异常栈问题追踪\"><a href=\"#NullPointerException-没有打印异常栈问题追踪\" class=\"headerlink\" title=\"NullPointerException 没有打印异常栈问题追踪\"></a>NullPointerException 没有打印异常栈问题追踪</h1><p>今天去服务器后台看日志，发现有很多<code>NullPointerException</code>异常。我下意识的去找异常栈信息，想看下到底是哪行代码导致了空指针。但是发现日志中只打印出了如下日志：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Copy</span>`<span class=\"keyword\">null</span></span><br><span class=\"line\">java.lang.NullPointerException: <span class=\"keyword\">null</span>` </span><br></pre></td></tr></table></figure>\n\n<p>我怀疑是不是打印日志的时候没有将异常栈打印出来，于是又去翻看应用代码核实。但是发现日志打印的代码也是正常的。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`logger.<span class=\"built_in\">error</span>(<span class=\"string\">&quot;msg:&quot;</span>,e);` </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题原因\"><a href=\"#问题原因\" class=\"headerlink\" title=\"问题原因#\"></a>问题原因<a href=\"https://www.cnblogs.com/54chensongxia/p/12930610.html#3950828605\">#</a></h2><p>我在网上找到了这么一段描述：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>JVM 虚拟机会对异常信息进行优化，当相同异常出现很多次，会认为它是热点异常，忽略掉异常堆栈信息；通过增加 JVM 参数：-XX:-OmitStackTraceInFastThrow 可解决。</p></blockquote>\n<p>这个描述能很好的解释我发现的问题。代码中出现空指针异常的地方是一个定时任务在不停地调用，当这个异常出现次数太多时 JVM 就会将其过滤掉。</p>\n<p>为了验证我的猜想，我去找了下这个服务刚刚启动时的代码，发现这个异常栈是正常打出的，这也验证了自己的猜想，通过异常栈信息也找到了导致空指针异常的代码。</p>\n<h2 id=\"问题重现\"><a href=\"#问题重现\" class=\"headerlink\" title=\"问题重现#\"></a>问题重现<a href=\"https://www.cnblogs.com/54chensongxia/p/12930610.html#3400983250\">#</a></h2><p>下面是自己写的一段代码来显示这个额问题：</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copy`<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NullPointStackMissBug</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Logger logger = LoggerFactory.getLogger(NullPointStackMissBug.<span class=\"keyword\">class</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span> ; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;Loop:&quot;</span>+(i+<span class=\"number\">1</span>));</span><br><span class=\"line\">                String <span class=\"built_in\">str</span> = <span class=\"string\">&quot;test&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">str</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"built_in\">str</span>.toUpperCase();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">                logger.error(e.getMessage(),e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;` </span><br></pre></td></tr></table></figure>\n\n<p>在JVM启动参数中增加：-XX:-OmitStackTraceInFastThrow后,异常就能正常输出。</p>\n","text":"NullPointerException 没有打印异常栈问题追踪今天去服务器后台看日志，发现有很多NullPointerException异常。我下意识的去找异...","permalink":"/post/JAVA/NullPointerException 没有打印异常栈问题追踪","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"JVM","slug":"JVM","count":1,"path":"api/categories/JVM.json"},{"name":"JAVA","slug":"JVM/JAVA","count":1,"path":"api/categories/JVM/JAVA.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"www","slug":"www","count":8,"path":"api/tags/www.json"},{"name":"NullPointerException","slug":"NullPointerException","count":1,"path":"api/tags/NullPointerException.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#NullPointerException-%E6%B2%A1%E6%9C%89%E6%89%93%E5%8D%B0%E5%BC%82%E5%B8%B8%E6%A0%88%E9%97%AE%E9%A2%98%E8%BF%BD%E8%B8%AA\"><span class=\"toc-text\">NullPointerException 没有打印异常栈问题追踪</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0\"><span class=\"toc-text\">问题原因</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%E9%87%8D%E7%8E%B0\"><span class=\"toc-text\">问题重现</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"用纯CPU环境搭建大模型环境","uid":"889ca5b7a321750970fca61562d5cfb3","slug":"WORK/用纯CPU环境搭建大模型环境","date":"2024-03-05T09:40:56.000Z","updated":"2025-09-30T03:27:03.205Z","comments":true,"path":"api/articles/WORK/用纯CPU环境搭建大模型环境.json","keywords":"XuGuangSheng","cover":"/covers/cpu.jpg","text":"用纯CPU环境搭建大模型环境配套视频： 大模型现在正处于高速发展时期，各厂商都推出了自己的大模型，各种开源模型也层出不穷。尽管各厂商都有应用接入 API，但在使...","permalink":"/post/WORK/用纯CPU环境搭建大模型环境","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"chatglm","slug":"chatglm","count":1,"path":"api/categories/chatglm.json"},{"name":"WORK","slug":"chatglm/WORK","count":1,"path":"api/categories/chatglm/WORK.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"cpp","slug":"cpp","count":1,"path":"api/tags/cpp.json"},{"name":"THUDM","slug":"THUDM","count":1,"path":"api/tags/THUDM.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"如何在 Docker 容器中使用 systemctl","uid":"cf58df7d33c8bd4e506c71804d861dcc","slug":"OCI/如何在 Docker 容器中使用 systemctl","date":"2024-01-29T14:59:56.000Z","updated":"2025-09-30T03:27:00.674Z","comments":true,"path":"api/articles/OCI/如何在 Docker 容器中使用 systemctl.json","keywords":"XuGuangSheng","cover":"/covers/docker-systemctl.jpg","text":"如何在 Docker 容器中使用 systemctl我们有时在使用 docker 的时候，会发现在容器中使用 systemctl 或者 service 的时候，...","permalink":"/post/OCI/如何在 Docker 容器中使用 systemctl","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"systemctl","slug":"systemctl","count":1,"path":"api/categories/systemctl.json"},{"name":"OCI","slug":"systemctl/OCI","count":1,"path":"api/categories/systemctl/OCI.json"}],"tags":[{"name":"docker","slug":"docker","count":4,"path":"api/tags/docker.json"},{"name":"systemd","slug":"systemd","count":1,"path":"api/tags/systemd.json"},{"name":"the","slug":"the","count":1,"path":"api/tags/the.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}