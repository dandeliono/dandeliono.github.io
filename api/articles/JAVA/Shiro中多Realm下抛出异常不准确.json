{"title":"Shiro中多Realm下抛出异常不准确","uid":"923091e5afde124d5b66314a0b825fb8","slug":"JAVA/Shiro中多Realm下抛出异常不准确","date":"2023-05-12T15:13:14.000Z","updated":"2025-09-30T03:26:15.888Z","comments":true,"path":"api/articles/JAVA/Shiro中多Realm下抛出异常不准确.json","keywords":"XuGuangSheng","cover":"/covers/shirorealm.jpg","content":"<h1 id=\"Shiro中多Realm下抛出异常不准确\"><a href=\"#Shiro中多Realm下抛出异常不准确\" class=\"headerlink\" title=\"Shiro中多Realm下抛出异常不准确\"></a>Shiro中多Realm下抛出异常不准确</h1><p>如果你的项目中存在多个Realm，当你在Realm中判断账号异常抛出了一个<strong>UnknownAccountException</strong>异常时，到达<strong>FormAuthenticationFilter.onLoginFailure</strong>方法中的异常信息为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Authentication token of type [<span class=\"keyword\">class</span> <span class=\"title class_\">org</span>.apache.shiro.authc.UsernamePasswordToken] could not be authenticated by any configured realms.  Please ensure that at least one realm can authenticate these tokens.</span><br></pre></td></tr></table></figure>\n\n<p>查看**ModularRealmAuthenticator.doMultiRealmAuthentication方法源码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> AuthenticationInfo <span class=\"title function_\">doMultiRealmAuthentication</span><span class=\"params\">(Collection&lt;Realm&gt; realms, AuthenticationToken token)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">AuthenticationStrategy</span> <span class=\"variable\">strategy</span> <span class=\"operator\">=</span> getAuthenticationStrategy();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">AuthenticationInfo</span> <span class=\"variable\">aggregate</span> <span class=\"operator\">=</span> strategy.beforeAllAttempts(realms, token);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (log.isTraceEnabled()) &#123;</span><br><span class=\"line\">            log.trace(<span class=\"string\">&quot;Iterating through &#123;&#125; realms for PAM authentication&quot;</span>, realms.size());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Realm realm : realms) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            aggregate = strategy.beforeAttempt(realm, token, aggregate);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (realm.supports(token)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                log.trace(<span class=\"string\">&quot;Attempting to authenticate token [&#123;&#125;] using realm [&#123;&#125;]&quot;</span>, token, realm);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"type\">AuthenticationInfo</span> <span class=\"variable\">info</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                <span class=\"type\">Throwable</span> <span class=\"variable\">t</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    info = realm.getAuthenticationInfo(token);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Throwable throwable) &#123;</span><br><span class=\"line\">                    t = throwable;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (log.isDebugEnabled()) &#123;</span><br><span class=\"line\">                        <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Realm [&quot;</span> + realm + <span class=\"string\">&quot;] threw an exception during a multi-realm authentication attempt:&quot;</span>;</span><br><span class=\"line\">                        log.debug(msg, t);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                aggregate = strategy.afterAttempt(realm, token, info, aggregate, t);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                log.debug(<span class=\"string\">&quot;Realm [&#123;&#125;] does not support token &#123;&#125;.  Skipping realm.&quot;</span>, realm, token);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        aggregate = strategy.afterAllAttempts(token, aggregate);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> aggregate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>可见，代码并没有保存并抛出某个Realm具体抛出的异常，而是在遍历完Realm后基于策略抛出了一个AuthenticationException异常。所以要解决这个问题，只需要重构<strong>doMultiRealmAuthentication</strong>方法，以下为我重构的代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> AuthenticationInfo <span class=\"title function_\">doMultiRealmAuthentication</span><span class=\"params\">(Collection&lt;Realm&gt; realms, AuthenticationToken token)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">AuthenticationStrategy</span> <span class=\"variable\">strategy</span> <span class=\"operator\">=</span> getAuthenticationStrategy();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">AuthenticationInfo</span> <span class=\"variable\">aggregate</span> <span class=\"operator\">=</span> strategy.beforeAllAttempts(realms, token);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (log.isTraceEnabled()) &#123;</span><br><span class=\"line\">            log.trace(<span class=\"string\">&quot;Iterating through &#123;&#125; realms for PAM authentication&quot;</span>, realms.size());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">AuthenticationException</span> <span class=\"variable\">authException</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Realm realm : realms) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            aggregate = strategy.beforeAttempt(realm, token, aggregate);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (realm.supports(token)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                log.trace(<span class=\"string\">&quot;Attempting to authenticate token [&#123;&#125;] using realm [&#123;&#125;]&quot;</span>, token, realm);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"type\">AuthenticationInfo</span> <span class=\"variable\">info</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    info = realm.getAuthenticationInfo(token);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Throwable throwable) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (throwable <span class=\"keyword\">instanceof</span> AuthenticationException) &#123;</span><br><span class=\"line\">                        authException = (AuthenticationException) throwable;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        authException = <span class=\"keyword\">new</span> <span class=\"title class_\">AuthenticationException</span>(<span class=\"string\">&quot;账号登录异常&quot;</span>, throwable);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (log.isDebugEnabled()) &#123;</span><br><span class=\"line\">                        <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Realm [&quot;</span> + realm + <span class=\"string\">&quot;] threw an exception during a multi-realm authentication attempt:&quot;</span>;</span><br><span class=\"line\">                        log.debug(msg, throwable);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                aggregate = strategy.afterAttempt(realm, token, info, aggregate, authException);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                log.debug(<span class=\"string\">&quot;Realm [&#123;&#125;] does not support token &#123;&#125;.  Skipping realm.&quot;</span>, realm, token);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (authException != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> authException;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        aggregate = strategy.afterAllAttempts(token, aggregate);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> aggregate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>该重构基于只要一个realm验证成功就算成功，并且每个realm支持的token类型不一样，否则异常会出现覆盖情况，读者根据自己的需求修改，并且最后注入到WebSecurityManager注入重构的类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">securityManager.setAuthenticator(<span class=\"keyword\">new</span> <span class=\"title class_\">MultiRealmAuthenticator</span>());</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>根据异常更准确的返回信息，可以重构<strong>FormAuthenticationFilter.onLoginFailure</strong>方法，该方法会在登录异常后执行，例如以下为我的登录异常处理：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> Map&lt;Class, String&gt; exceptionMessageMap;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        exceptionMessageMap = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        exceptionMessageMap.put(IncorrectCredentialsException.class, <span class=\"string\">&quot;账号密码不正确&quot;</span>);</span><br><span class=\"line\">        exceptionMessageMap.put(ExpiredCredentialsException.class, <span class=\"string\">&quot;账号密码过期&quot;</span>);</span><br><span class=\"line\">        exceptionMessageMap.put(CredentialsException.class, <span class=\"string\">&quot;账号密码异常&quot;</span>);</span><br><span class=\"line\">        exceptionMessageMap.put(ConcurrentAccessException.class, <span class=\"string\">&quot;无法同时多个用户登录&quot;</span>);</span><br><span class=\"line\">        exceptionMessageMap.put(UnknownAccountException.class, <span class=\"string\">&quot;账号不存在&quot;</span>);</span><br><span class=\"line\">        exceptionMessageMap.put(ExcessiveAttemptsException.class, <span class=\"string\">&quot;账号验证次数超过限制&quot;</span>);</span><br><span class=\"line\">        exceptionMessageMap.put(LockedAccountException.class, <span class=\"string\">&quot;账号被锁定&quot;</span>);</span><br><span class=\"line\">        exceptionMessageMap.put(DisabledAccountException.class, <span class=\"string\">&quot;账号被禁用&quot;</span>);</span><br><span class=\"line\">        exceptionMessageMap.put(AccountException.class, <span class=\"string\">&quot;账号异常&quot;</span>);</span><br><span class=\"line\">        exceptionMessageMap.put(UnsupportedTokenException.class, <span class=\"string\">&quot;不支持当前TOKEN&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">boolean</span> <span class=\"title function_\">onLoginFailure</span><span class=\"params\">(AuthenticationToken token, AuthenticationException e, ServletRequest request, ServletResponse response)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">errorMsg</span> <span class=\"operator\">=</span> exceptionMessageMap.get(e.getClass());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (errorMsg == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            errorMsg = e.getMessage();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (WebUtil.isAjaxRequest((HttpServletRequest) request)) &#123;</span><br><span class=\"line\">            WebUtil.sendJsonByCors((HttpServletResponse) response, R.fail(HttpCode.UNAUTHORIZED, errorMsg));</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            setFailureAttribute(request, e);</span><br><span class=\"line\">            request.setAttribute(ERROR_KEY_LOGIN_FAIL_MESSAGE, errorMsg);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n","text":"Shiro中多Realm下抛出异常不准确如果你的项目中存在多个Realm，当你在Realm中判断账号异常抛出了一个UnknownAccountException...","permalink":"/post/JAVA/Shiro中多Realm下抛出异常不准确","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"Realm","slug":"Realm","count":1,"path":"api/categories/Realm.json"},{"name":"JAVA","slug":"Realm/JAVA","count":1,"path":"api/categories/Realm/JAVA.json"}],"tags":[{"name":"FormAuthenticationFilter","slug":"FormAuthenticationFilter","count":1,"path":"api/tags/FormAuthenticationFilter.json"},{"name":"onLoginFailure","slug":"onLoginFailure","count":1,"path":"api/tags/onLoginFailure.json"},{"name":"doMultiRealmAuthentication","slug":"doMultiRealmAuthentication","count":1,"path":"api/tags/doMultiRealmAuthentication.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Shiro%E4%B8%AD%E5%A4%9ARealm%E4%B8%8B%E6%8A%9B%E5%87%BA%E5%BC%82%E5%B8%B8%E4%B8%8D%E5%87%86%E7%A1%AE\"><span class=\"toc-text\">Shiro中多Realm下抛出异常不准确</span></a></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"MySql Lock wait timeout exceeded","uid":"56ab2e24b6f8563e1b3aef14738d978d","slug":"MIDDLEWARE/MySql Lock wait timeout exceeded","date":"2023-05-17T15:04:27.000Z","updated":"2025-09-30T03:26:49.179Z","comments":true,"path":"api/articles/MIDDLEWARE/MySql Lock wait timeout exceeded.json","keywords":"XuGuangSheng","cover":"/covers/mysql-lock-wait-timeout-exceeded.jpg","text":"MySql Lock wait timeout exceededMysql造成锁的情况有很多，下面我们就列举一些情况： 执行DML操作没有commit，再执行删...","permalink":"/post/MIDDLEWARE/MySql Lock wait timeout exceeded","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"innodb","slug":"innodb","count":1,"path":"api/categories/innodb.json"},{"name":"MIDDLEWARE","slug":"innodb/MIDDLEWARE","count":1,"path":"api/categories/innodb/MIDDLEWARE.json"}],"tags":[{"name":"wait","slug":"wait","count":1,"path":"api/tags/wait.json"},{"name":"timeout","slug":"timeout","count":1,"path":"api/tags/timeout.json"},{"name":"lock","slug":"lock","count":1,"path":"api/tags/lock.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"flink cep，使用groovy脚本及表达式求值","uid":"38926a48bdd2f6821bf4e05b53cee11b","slug":"BIGDATA/flink cep，使用groovy脚本及表达式求值","date":"2023-05-10T17:02:17.000Z","updated":"2025-09-30T03:26:05.155Z","comments":true,"path":"api/articles/BIGDATA/flink cep，使用groovy脚本及表达式求值.json","keywords":"XuGuangSheng","cover":"/covers/flink-cepgroovy.jpg","text":"flink cep，使用groovy脚本及表达式求值使用表达式求值和groovy脚本来生成flink cep Pattern。减少代码量，一份代码可通过传scr...","permalink":"/post/BIGDATA/flink cep，使用groovy脚本及表达式求值","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"flink","slug":"flink","count":2,"path":"api/categories/flink.json"},{"name":"BIGDATA","slug":"flink/BIGDATA","count":1,"path":"api/categories/flink/BIGDATA.json"}],"tags":[{"name":"cep","slug":"cep","count":1,"path":"api/tags/cep.json"},{"name":"groovy","slug":"groovy","count":1,"path":"api/tags/groovy.json"},{"name":"pattern","slug":"pattern","count":1,"path":"api/tags/pattern.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}