{"title":"GitHub Actions 入门教程","uid":"f6a976669c665c437623667e8d82197c","slug":"OTHER/GitHub Actions 入门教程","date":"2022-09-24T18:34:35.000Z","updated":"2025-09-30T03:27:00.910Z","comments":true,"path":"api/articles/OTHER/GitHub Actions 入门教程.json","keywords":"XuGuangSheng","cover":"/covers/github-actions.jpg","content":"<h1 id=\"GitHub-Actions-入门教程\"><a href=\"#GitHub-Actions-入门教程\" class=\"headerlink\" title=\"GitHub Actions 入门教程\"></a>GitHub Actions 入门教程</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>Github Actions 是 GitHub 推出的持续集成 (Continuous integration，简称 CI) 服务，它提供了配置非常不错的虚拟服务器环境，基于它可以进行构建、测试、打包、部署项目。简单来讲就是将软件开发中的一些流程交给云服务器自动化处理，比方说开发者把代码 push 到 GitHub 后它会自动测试、编译、发布。有了持续集成服务开发者就可以专心于写代码，其它乱七八糟的事情就不用管了，这样可以大大提高开发效率。本篇文章将介绍 GitHub Actions 的基本使用方法。</p>\n<h2 id=\"基础概念\"><a href=\"#基础概念\" class=\"headerlink\" title=\"基础概念\"></a>基础概念</h2><ul>\n<li><strong>workflow</strong> （工作流程）：持续集成一次运行的过程。</li>\n<li><strong>job</strong> （任务）：一个 workflow 由一个或多个 job 构成，含义是一次持续集成的运行，可以完成多个任务。</li>\n<li><strong>step</strong>（步骤）：每个 job 由多个 step 构成，一步步完成。</li>\n<li><strong>action</strong> （动作）：每个 step 可以依次执行一个或多个命令（action）。</li>\n</ul>\n<h2 id=\"虚拟环境\"><a href=\"#虚拟环境\" class=\"headerlink\" title=\"虚拟环境\"></a>虚拟环境</h2><p>GitHub Actions 为每个任务 (job) 都提供了一个虚拟机来执行，每台虚拟机都有相同的硬件资源：</p>\n<ul>\n<li>2-core CPU</li>\n<li>7 GB RAM 内存</li>\n<li>14 GB SSD 硬盘空间</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>实测硬盘总容量为90G左右，可用空间为30G左右，评测详见：《<a href=\"https://p3terx.com/archives/github-actions-virtual-environment-simple-evaluation.html\">GitHub Actions 虚拟服务器环境简单评测</a>》</p></blockquote>\n<p>使用限制：</p>\n<ul>\n<li>每个仓库只能同时支持20个 workflow 并行。</li>\n<li>每小时可以调用1000次 GitHub API 。</li>\n<li>每个 job 最多可以执行6个小时。</li>\n<li>免费版的用户最大支持20个 job 并发执行，macOS 最大只支持5个。</li>\n<li>私有仓库每月累计使用时间为2000分钟，超过后$ 0.008&#x2F;分钟，公共仓库则无限制。</li>\n</ul>\n<p>操作系统方面可选择 Windows server、Linux、ma­cOS，并预装了大量<a href=\"https://p3terx.com/go/aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vY24vYWN0aW9ucy9hdXRvbWF0aW5nLXlvdXItd29ya2Zsb3ctd2l0aC1naXRodWItYWN0aW9ucy9zb2Z0d2FyZS1pbnN0YWxsZWQtb24tZ2l0aHViLWhvc3RlZC1ydW5uZXJz\">软件包和工具</a>。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>TIPS：</strong>  虽然名称叫持续集成，但当所有任务终止和完成时，虚拟环境内的数据会随之清空，并不会持续。即每个新任务都是一个全新的虚拟环境。</p></blockquote>\n<h2 id=\"workflow-文件\"><a href=\"#workflow-文件\" class=\"headerlink\" title=\"workflow 文件\"></a>workflow 文件</h2><p>GitHub Ac­tions 的配置文件叫做 work­flow 文件（官方中文翻译为 “工作流程文件”），存放在代码仓库的<code>.github/workflows</code> 目录中。work­flow 文件采用 YAML 格式，文件名可以任意取，但是后缀名统一为<code>.yml</code>，比如 <code>p3terx.yml</code>。一个库可以有多个 work­flow 文件，GitHub 只要发现<code>.github/workflows</code> 目录里面有<code>.yml</code> 文件，就会按照文件中所指定的触发条件在符合条件时自动运行该文件中的工作流程。在 Ac­tions 页面可以看到很多种语言的 work­flow 文件的模版，可以用于简单的构建与测试。</p>\n<p><a href=\"https://raw.githubusercontent.com/dandeliono/img/main/resource/146b512db9112e855b8af71011b09775.png\"><img src=\"https://raw.githubusercontent.com/dandeliono/img/main/resource/146b512db9112e855b8af71011b09775.png\">\n</a></p>\n<p>下面是一个简单的 work­flow 文件示例：</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">name</span><span class=\"punctuation\">:</span> <span class=\"string\">Hello World</span></span><br><span class=\"line\"><span class=\"attribute\">on</span><span class=\"punctuation\">:</span> <span class=\"string\">push</span></span><br><span class=\"line\"><span class=\"attribute\">jobs</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">  <span class=\"attribute\">my_first_job</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"attribute\">name</span><span class=\"punctuation\">:</span> <span class=\"string\">My first job</span></span><br><span class=\"line\">    <span class=\"attribute\">runs-on</span><span class=\"punctuation\">:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attribute\">steps</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">name: checkout</span></span><br><span class=\"line\">      <span class=\"attribute\">uses</span><span class=\"punctuation\">:</span> <span class=\"string\">actions/checkout@master</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">name: Run a single-line script</span></span><br><span class=\"line\">      <span class=\"attribute\">run</span><span class=\"punctuation\">:</span> <span class=\"string\">echo &quot;Hello World!&quot;</span></span><br><span class=\"line\">  <span class=\"attribute\">my_second_job</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"attribute\">name</span><span class=\"punctuation\">:</span> <span class=\"string\">My second job</span></span><br><span class=\"line\">    <span class=\"attribute\">runs-on</span><span class=\"punctuation\">:</span> <span class=\"string\">macos-latest</span></span><br><span class=\"line\">    <span class=\"attribute\">steps</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">name: Run a multi-line script</span></span><br><span class=\"line\">      <span class=\"attribute\">env</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">        <span class=\"attribute\">MY_VAR</span><span class=\"punctuation\">:</span> <span class=\"string\">Hello World!</span></span><br><span class=\"line\">        <span class=\"attribute\">MY_NAME</span><span class=\"punctuation\">:</span> <span class=\"string\">P3TERX</span></span><br><span class=\"line\">      <span class=\"attribute\">run</span><span class=\"punctuation\">:</span> <span class=\"string\">| echo $MY_VAR</span></span><br><span class=\"line\">        echo My name is $MY_NAME</span><br></pre></td></tr></table></figure>\n\n<p>示例文件运行截图：</p>\n<p><a href=\"https://raw.githubusercontent.com/dandeliono/img/main/resource/5720a78ae38dc0d2c4818cd5ef6c88f2.png\"><img src=\"https://raw.githubusercontent.com/dandeliono/img/main/resource/5720a78ae38dc0d2c4818cd5ef6c88f2.png\">\n</a></p>\n<h2 id=\"workflow-语法\"><a href=\"#workflow-语法\" class=\"headerlink\" title=\"workflow 语法\"></a>workflow 语法</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>TIPS：</strong>  参照上面的示例阅读。</p></blockquote>\n<h3 id=\"name\"><a href=\"#name\" class=\"headerlink\" title=\"name\"></a>name</h3><p><code>name</code> 字段是 work­flow 的名称。若忽略此字段，则默认会设置为 work­flow 文件名。</p>\n<h3 id=\"on\"><a href=\"#on\" class=\"headerlink\" title=\"on\"></a>on</h3><p><code>on</code> 字段指定 work­flow 的触发条件，通常是某些事件，比如示例中的触发事件是 <code>push</code>，即在代码 <code>push</code> 到仓库后被触发。<code>on</code> 字段也可以是事件的数组，多种事件触发，比如在 <code>push</code> 或 <code>pull_request</code> 时触发：</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">on:</span> [<span class=\"keyword\">push</span>, pull_request]</span><br></pre></td></tr></table></figure>\n\n<p>完整的事件列表，请查看<a href=\"https://p3terx.com/go/aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vY24vYWN0aW9ucy9hdXRvbWF0aW5nLXlvdXItd29ya2Zsb3ctd2l0aC1naXRodWItYWN0aW9ucy93b3JrZmxvdy1zeW50YXgtZm9yLWdpdGh1Yi1hY3Rpb25z\">官方文档</a>。下面是一些比较常见的事件：</p>\n<p>点击查看</p>\n<p>push 指定分支触发</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">on</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">  <span class=\"attribute\">push</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"attribute\">branches</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>push tag 时触发</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">on</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">  <span class=\"attribute\">push</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"attribute\">tags</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&#x27;v*&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>定时触发</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">schedule:</span><br><span class=\"line\"><span class=\"bullet\">  -</span> cron: 0 <span class=\"emphasis\">*/6 *</span> * <span class=\"emphasis\">*</span></span><br></pre></td></tr></table></figure>\n\n<p>发布 re­lease 触发</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">on:</span></span><br><span class=\"line\"><span class=\"symbol\">  release:</span></span><br><span class=\"line\"><span class=\"symbol\">    types:</span> [published]</span><br></pre></td></tr></table></figure>\n\n<p>仓库被 star 时触发</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">on:</span></span><br><span class=\"line\"><span class=\"symbol\">  watch:</span></span><br><span class=\"line\"><span class=\"symbol\">    types:</span> [started]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"jobs\"><a href=\"#jobs\" class=\"headerlink\" title=\"jobs\"></a>jobs</h3><p><code>jobs</code> 表示要执行的一项或多项任务。每一项任务必须关联一个 ID (<code>job_id</code>)，比如示例中的 <code>my_first_job</code> 和 <code>my_second_job</code>。<code>job_id</code> 里面的 <code>name</code> 字段是任务的名称。<code>job_id</code> 不能有空格，只能使用数字、英文字母和 <code>-</code> 或<code>_</code>符号，而 <code>name</code> 可以随意，若忽略 <code>name</code> 字段，则默认会设置为 <code>job_id</code>。</p>\n<p>当有多个任务时，可以指定任务的依赖关系，即运行顺序，否则是同时运行。</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">jobs:</span></span><br><span class=\"line\"><span class=\"symbol\">  job1:</span></span><br><span class=\"line\"><span class=\"symbol\">  job2:</span></span><br><span class=\"line\"><span class=\"symbol\">    needs:</span> job1</span><br><span class=\"line\"><span class=\"symbol\">  job3:</span></span><br><span class=\"line\"><span class=\"symbol\">    needs:</span> [job1, job2]</span><br></pre></td></tr></table></figure>\n\n<p>上面代码中，<code>job1</code> 必须先于 <code>job2</code> 完成，而 <code>job3</code> 等待 <code>job1</code> 和 <code>job2</code> 的完成才能运行。因此，这个 work­flow 的运行顺序依次为：<code>job1</code>、<code>job2</code>、<code>job3</code>。</p>\n<h3 id=\"runs-on\"><a href=\"#runs-on\" class=\"headerlink\" title=\"runs-on\"></a>runs-on</h3><p><code>runs-on</code> 字段指定任务运行所需要的虚拟服务器环境，是必填字段，目前可用的虚拟机如下：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>TIPS：</strong>  每个任务的虚拟环境都是独立的。</p></blockquote>\n<table>\n<thead>\n<tr>\n<th>虚拟环境</th>\n<th>YAML workflow 标签</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Windows Server 2019</td>\n<td><code>windows-latest</code></td>\n</tr>\n<tr>\n<td>Ubuntu 18.04</td>\n<td><code>ubuntu-latest</code> or <code>ubuntu-18.04</code></td>\n</tr>\n<tr>\n<td>Ubuntu 16.04</td>\n<td><code>ubuntu-16.04</code></td>\n</tr>\n<tr>\n<td>macOS X Catalina 10.15</td>\n<td><code>macos-latest</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"steps\"><a href=\"#steps\" class=\"headerlink\" title=\"steps\"></a>steps</h3><p><code>steps</code> 字段指定每个任务的运行步骤，可以包含一个或多个步骤。步骤开头使用 <code>-</code> 符号。每个步骤可以指定以下字段:</p>\n<ul>\n<li><code>name</code>：步骤名称。</li>\n<li><code>uses</code>：该步骤引用的<code>action</code>或 Docker 镜像。</li>\n<li><code>run</code>：该步骤运行的 bash 命令。</li>\n<li><code>env</code>：该步骤所需的环境变量。</li>\n</ul>\n<p>其中 <code>uses</code> 和 <code>run</code> 是必填字段，每个步骤只能有其一。同样名称也是可以忽略的。</p>\n<h2 id=\"action\"><a href=\"#action\" class=\"headerlink\" title=\"action\"></a>action</h2><p><code>action</code> 是 GitHub Ac­tions 中的重要组成部分，这点从名称中就可以看出，<code>actions</code> 是 <code>action</code> 的复数形式。它是已经编写好的步骤脚本，存放在 GitHub 仓库中。</p>\n<p>对于初学者来说可以直接引用其它开发者已经写好的 <code>action</code>，可以在<a href=\"https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnM\">官方 action 仓库</a>或者 <a href=\"https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL21hcmtldHBsYWNlP3R5cGU9YWN0aW9ucw\">GitHub Marketplace</a> 去获取。此外 <a href=\"https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL3NkcmFzL2F3ZXNvbWUtYWN0aW9ucw\">Awesome Actions</a> 这个项目收集了很多非常不错的 <code>action</code>。</p>\n<p>既然 <code>action</code> 是代码仓库，当然就有版本的概念。引用某个具体版本的 <code>action</code>：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">steps:</span><br><span class=\"line\">  - uses: actions/setup-<span class=\"keyword\">node</span><span class=\"title\">@74bc508</span> </span><br><span class=\"line\">  - uses: actions/setup-<span class=\"keyword\">node</span><span class=\"title\">@v1</span>.<span class=\"number\">2</span>    </span><br><span class=\"line\">  - uses: actions/setup-<span class=\"keyword\">node</span><span class=\"title\">@master</span> </span><br></pre></td></tr></table></figure>\n\n<p>一般来说 <code>action</code> 的开发者会说明建议使用的版本。</p>\n<h2 id=\"实例：编译-OpenWrt\"><a href=\"#实例：编译-OpenWrt\" class=\"headerlink\" title=\"实例：编译 OpenWrt\"></a>实例：编译 OpenWrt</h2><p>最近一直在研究 Open­Wrt ，那就写个编译 Open­Wrt 的实例吧。</p>\n<p>既然是编译 Open­Wrt 那么 work­flow 的名称就叫 <code>Build OpenWrt</code></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">name:</span> Build OpenWrt</span><br></pre></td></tr></table></figure>\n\n<p>触发事件我选择了 push 。</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">on:</span> <span class=\"keyword\">push</span></span><br></pre></td></tr></table></figure>\n\n<p>我个人常用的 Open­Wrt 编译环境使用的是 Ubuntu 18.04 ，所以任务所使用的虚拟环境也一样。</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">jobs</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">  <span class=\"attribute\">build</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"attribute\">runs-on</span><span class=\"punctuation\">:</span> <span class=\"string\">ubuntu-18.04</span></span><br><span class=\"line\">    <span class=\"attribute\">steps</span><span class=\"punctuation\">:</span></span><br></pre></td></tr></table></figure>\n\n<p>我并不确定系统中是否有编译所需要依赖，所以第一个步骤是安装依赖软件包。</p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- name: Installation depends</span><br><span class=\"line\">  run: | sudo apt-<span class=\"built_in\">get</span> <span class=\"keyword\">update</span></span><br><span class=\"line\">    sudo apt-<span class=\"built_in\">get</span> -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-<span class=\"built_in\">dev</span> libz-<span class=\"built_in\">dev</span> patch unzip zlib1g-<span class=\"built_in\">dev</span> lib32gcc1 libc6-<span class=\"built_in\">dev</span>-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-<span class=\"built_in\">dev</span> texinfo libglib2<span class=\"number\">.0</span>-<span class=\"built_in\">dev</span> xmlto qemu-utils upx libelf-<span class=\"built_in\">dev</span> autoconf automake libtool autopoint</span><br></pre></td></tr></table></figure>\n\n<p>由于我使用的是一个空仓库，所以第二个步骤使用 Git 去拉取 Open­Wrt 官方源码。</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- name: <span class=\"keyword\">Clone</span> <span class=\"title\">source</span> code</span><br><span class=\"line\">  run: | git <span class=\"keyword\">clone</span> <span class=\"title\">https</span>://github.com/openwrt/openwrt</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>TIPS：</strong>  如果是有源码的仓库，可以引用 <a href=\"https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvY2hlY2tvdXQ\">actions&#x2F;checkout</a> 这个官方 ac­tion 把源码签出到工作目录中。工作目录也就是在 Ac­tions 中执行命令的根目录，其绝对路径为<code>/home/runner/work/REPO_NAME/REPO_NAME</code>，环境变量为<code>$GITHUB_WORKSPACE</code>。</p></blockquote>\n<p>然后还需要拉取 feeds ，它是扩展软件包源码，所以需要单独拉取。既然都是拉取源码，所以就都放在一起吧。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- name: Clone <span class=\"built_in\">source</span> code</span><br><span class=\"line\">  run: | git <span class=\"built_in\">clone</span> https://github.com/openwrt/openwrt</span><br><span class=\"line\">    <span class=\"built_in\">cd</span> openwrt</span><br><span class=\"line\">    ./scripts/feeds update -a</span><br><span class=\"line\">    ./scripts/feeds install -a</span><br></pre></td></tr></table></figure>\n\n<p>由于这只是尝试，所以第三个步骤就让它生成一个默认的配置文件。由于每个步骤都会回退到工作目录，所以前面还需要加一条进入 <code>buildroot</code> 的命令。</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- name: <span class=\"keyword\">Generate</span> config <span class=\"keyword\">file</span></span><br><span class=\"line\">  <span class=\"keyword\">run</span>: | <span class=\"keyword\">cd</span> openwrt</span><br><span class=\"line\">    make defconfig</span><br></pre></td></tr></table></figure>\n\n<p>第四个步骤是下载第三方软件包（俗称 dl 库），最后为了防止下载不完整导致编译失败，加了显示不完整文件和删除不完整文件的命令。</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- name: Download package</span><br><span class=\"line\">  run: | cd openwrt &amp;&amp; make download -j8</span><br><span class=\"line\">    find dl -size <span class=\"number\">-1024</span>c -exec ls -l &#123;&#125; \\;</span><br><span class=\"line\">    find dl -size <span class=\"number\">-1024</span>c -exec rm -f &#123;&#125; \\;</span><br></pre></td></tr></table></figure>\n\n<p>第五个步骤进入到最重要的开始编译环节，同样是先进入 <code>buildroot</code>，为了能更快的编译，我自信的选择了多线程编译且不显示详细日志。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- name: Build</span><br><span class=\"line\">  run: | <span class=\"built_in\">cd</span> openwrt</span><br><span class=\"line\">    make -j$(<span class=\"built_in\">nproc</span>)</span><br></pre></td></tr></table></figure>\n\n<p>最后编译出的二进制文件如何取出来呢？官方有个 ac­tion 叫 <a href=\"https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvdXBsb2FkLWFydGlmYWN0\">upload-artifact</a> ，它可以将虚拟环境中的指定文件打包上传到 Ac­tions 页面。为了方便我选择了上传整个 <code>bin</code> 目录，文件名为 <code>OpenWrt</code>。</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">name : Upload artifact</span></span><br><span class=\"line\">  <span class=\"attribute\">uses</span><span class=\"punctuation\">:</span> <span class=\"string\">actions/upload-artifact@master</span></span><br><span class=\"line\">  <span class=\"attribute\">with</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"attribute\">name</span><span class=\"punctuation\">:</span> <span class=\"string\">OpenWrt</span></span><br><span class=\"line\">    <span class=\"attribute\">path</span><span class=\"punctuation\">:</span> <span class=\"string\">openwrt/bin</span></span><br></pre></td></tr></table></figure>\n\n<p>最后展示一下完整 work­flow 文件：</p>\n<figure class=\"highlight nestedtext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">name</span><span class=\"punctuation\">:</span> <span class=\"string\">Build OpenWrt</span></span><br><span class=\"line\"><span class=\"attribute\">on</span><span class=\"punctuation\">:</span> <span class=\"string\">push</span></span><br><span class=\"line\"><span class=\"attribute\">jobs</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">  <span class=\"attribute\">build</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"attribute\">runs-on</span><span class=\"punctuation\">:</span> <span class=\"string\">ubuntu-18.04</span></span><br><span class=\"line\">    <span class=\"attribute\">steps</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">name: Installation depends</span></span><br><span class=\"line\">      <span class=\"attribute\">run</span><span class=\"punctuation\">:</span> <span class=\"string\">| sudo apt-get update</span></span><br><span class=\"line\">        <span class=\"attribute\">sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint</span></span><br><span class=\"line\"><span class=\"attribute\">    - name</span><span class=\"punctuation\">:</span> <span class=\"string\">Clone source code</span></span><br><span class=\"line\">      <span class=\"attribute\">run</span><span class=\"punctuation\">:</span> <span class=\"string\">| git clone https://github.com/openwrt/openwrt</span></span><br><span class=\"line\">        <span class=\"attribute\">cd openwrt</span></span><br><span class=\"line\"><span class=\"attribute\">        ./scripts/feeds update -a</span></span><br><span class=\"line\"><span class=\"attribute\">        ./scripts/feeds install -a</span></span><br><span class=\"line\"><span class=\"attribute\">    - name</span><span class=\"punctuation\">:</span> <span class=\"string\">Generate config file</span></span><br><span class=\"line\">      <span class=\"attribute\">run</span><span class=\"punctuation\">:</span> <span class=\"string\">| cd openwrt</span></span><br><span class=\"line\">        <span class=\"attribute\">make defconfig</span></span><br><span class=\"line\"><span class=\"attribute\">    - name</span><span class=\"punctuation\">:</span> <span class=\"string\">Download package</span></span><br><span class=\"line\">      <span class=\"attribute\">run</span><span class=\"punctuation\">:</span> <span class=\"string\">| cd openwrt &amp;&amp; make download -j8</span></span><br><span class=\"line\">        <span class=\"attribute\">find dl -size -1024c -exec ls -l &#123;&#125; \\;</span></span><br><span class=\"line\"><span class=\"attribute\">        find dl -size -1024c -exec rm -f &#123;&#125; \\;</span></span><br><span class=\"line\"><span class=\"attribute\">    - name</span><span class=\"punctuation\">:</span> <span class=\"string\">Build</span></span><br><span class=\"line\">      <span class=\"attribute\">run</span><span class=\"punctuation\">:</span> <span class=\"string\">| cd openwrt</span></span><br><span class=\"line\">        <span class=\"attribute\">make -j$(nproc)</span></span><br><span class=\"line\"><span class=\"attribute\">    - name</span><span class=\"punctuation\"> :</span> <span class=\"string\">Upload artifact</span></span><br><span class=\"line\">      <span class=\"attribute\">uses</span><span class=\"punctuation\">:</span> <span class=\"string\">actions/upload-artifact@master</span></span><br><span class=\"line\">      <span class=\"attribute\">with</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">        <span class=\"attribute\">name</span><span class=\"punctuation\">:</span> <span class=\"string\">OpenWrt</span></span><br><span class=\"line\">        <span class=\"attribute\">path</span><span class=\"punctuation\">:</span> <span class=\"string\">openwrt/bin</span></span><br></pre></td></tr></table></figure>\n\n<p>最后 push 到仓库运行。竟然一次成功，话说编译速度是真的快，而且二进制文件也已经上传了，非常完美。</p>\n<p><a href=\"https://raw.githubusercontent.com/dandeliono/img/main/resource/e1923a6aa8b8f188812c895f4ecfe1ce.png\"><img src=\"https://raw.githubusercontent.com/dandeliono/img/main/resource/e1923a6aa8b8f188812c895f4ecfe1ce.png\">\n</a></p>\n","text":"GitHub Actions 入门教程前言Github Actions 是 GitHub 推出的持续集成 (Continuous integration，简称 ...","permalink":"/post/OTHER/GitHub Actions 入门教程","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"job","slug":"job","count":1,"path":"api/categories/job.json"},{"name":"OTHER","slug":"job/OTHER","count":1,"path":"api/categories/job/OTHER.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"GitHub","slug":"GitHub","count":1,"path":"api/tags/GitHub.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#GitHub-Actions-%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B\"><span class=\"toc-text\">GitHub Actions 入门教程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">基础概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">虚拟环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#workflow-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">workflow 文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#workflow-%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">workflow 语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#name\"><span class=\"toc-text\">name</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#on\"><span class=\"toc-text\">on</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#jobs\"><span class=\"toc-text\">jobs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#runs-on\"><span class=\"toc-text\">runs-on</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#steps\"><span class=\"toc-text\">steps</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#action\"><span class=\"toc-text\">action</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B%EF%BC%9A%E7%BC%96%E8%AF%91-OpenWrt\"><span class=\"toc-text\">实例：编译 OpenWrt</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"30张图解： TCP 重传、滑动窗口、流量控制、拥塞控制","uid":"5216b5eeb1a6215d7622123c3d5153cb","slug":"NETWORK/30张图解： TCP 重传、滑动窗口、流量控制、拥塞控制","date":"2022-09-29T15:46:08.000Z","updated":"2025-09-30T03:26:55.085Z","comments":true,"path":"api/articles/NETWORK/30张图解： TCP 重传、滑动窗口、流量控制、拥塞控制.json","keywords":"XuGuangSheng","cover":"/covers/30-tcp.jpg","text":"30张图解： TCP 重传、滑动窗口、流量控制、拥塞控制相信大家都知道 TCP 是一个可靠传输的协议，那它是如何保证可靠的呢？ 为了实现可靠性传输，需要考虑很多...","permalink":"/post/NETWORK/30张图解： TCP 重传、滑动窗口、流量控制、拥塞控制","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"TCP","slug":"TCP","count":3,"path":"api/categories/TCP.json"},{"name":"NETWORK","slug":"TCP/NETWORK","count":1,"path":"api/categories/TCP/NETWORK.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"ACK","slug":"ACK","count":2,"path":"api/tags/ACK.json"},{"name":"cwnd","slug":"cwnd","count":1,"path":"api/tags/cwnd.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"时间格式化符号","uid":"d28bd52a7c1a8649c5def9f8f82b26d2","slug":"JAVA/时间格式化符号","date":"2022-09-20T17:06:36.000Z","updated":"2025-09-30T03:26:27.616Z","comments":true,"path":"api/articles/JAVA/时间格式化符号.json","keywords":"XuGuangSheng","cover":"/covers/207b4a267f05.jpg","text":"时间格式化符号用于将日期时间格式化为字符串的字符下表列出了您可以在模式中用来格式化或解析与日期时间相关的字符串的字符。 该表下面是一些注意事项，它们对表中的某些...","permalink":"/post/JAVA/时间格式化符号","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Number","slug":"Number","count":1,"path":"api/categories/Number.json"},{"name":"JAVA","slug":"Number/JAVA","count":1,"path":"api/categories/Number/JAVA.json"}],"tags":[{"name":"Text","slug":"Text","count":1,"path":"api/tags/Text.json"},{"name":"例如","slug":"例如","count":1,"path":"api/tags/例如.json"},{"name":"时区","slug":"时区","count":1,"path":"api/tags/时区.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}