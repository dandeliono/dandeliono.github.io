{"title":"flink cep，使用groovy脚本及表达式求值","uid":"38926a48bdd2f6821bf4e05b53cee11b","slug":"BIGDATA/flink cep，使用groovy脚本及表达式求值","date":"2023-05-10T17:02:17.000Z","updated":"2025-09-30T03:26:05.155Z","comments":true,"path":"api/articles/BIGDATA/flink cep，使用groovy脚本及表达式求值.json","keywords":"XuGuangSheng","cover":"/covers/flink-cepgroovy.jpg","content":"<h1 id=\"flink-cep，使用groovy脚本及表达式求值\"><a href=\"#flink-cep，使用groovy脚本及表达式求值\" class=\"headerlink\" title=\"flink cep，使用groovy脚本及表达式求值\"></a>flink cep，使用groovy脚本及表达式求值</h1><p>使用表达式求值和groovy脚本来生成flink cep Pattern。减少代码量，一份代码可通过传script脚本的方式生成不同的pattern。<br>1.source</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SingleOutputStreamOperator&lt;MetricEvent&gt; metricEvent = dataStreamSource</span><br><span class=\"line\">               .flatMap(<span class=\"built_in\">new</span> ParseMetricEventFunction()).<span class=\"keyword\">returns</span>(MetricEvent.<span class=\"keyword\">class</span>); </span><br></pre></td></tr></table></figure>\n\n<p>2.pattern</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pattern p1 = ScriptEngine.getPattern(</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"string\">&quot;  import org.apache.flink.cep.nfa.aftermatch.AfterMatchSkipStrategy<span class=\"subst\">\\n</span>&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot;import org.apache.flink.cep.pattern.Pattern<span class=\"subst\">\\n</span>&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot;import test.cep.function.AviatorCondition <span class=\"subst\">\\n</span>&quot;</span> +</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"string\">&quot;where1 = new AviatorCondition(&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot;   <span class=\"subst\">\\&quot;</span>getT(tags,<span class=\"subst\">\\\\</span><span class=\"subst\">\\&quot;</span>cluster_name<span class=\"subst\">\\\\</span><span class=\"subst\">\\&quot;</span>)==<span class=\"subst\">\\\\</span><span class=\"subst\">\\&quot;</span>terminus-x<span class=\"subst\">\\\\</span><span class=\"subst\">\\&quot;</span>&amp;&amp;getF(fields,<span class=\"subst\">\\\\</span><span class=\"subst\">\\&quot;</span>load5<span class=\"subst\">\\\\</span><span class=\"subst\">\\&quot;</span>)&gt;15 <span class=\"subst\">\\&quot;</span>&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot;        )<span class=\"subst\">\\n</span>&quot;</span> +</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"string\">&quot;def get()&#123; &quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot;      return Pattern.begin(<span class=\"subst\">\\&quot;</span>start<span class=\"subst\">\\&quot;</span>, AfterMatchSkipStrategy.noSkip())<span class=\"subst\">\\n</span>&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot;        .where(where1)&quot;</span> +</span><br><span class=\"line\">                        <span class=\"string\">&quot;&#125;&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;get&quot;</span>); </span><br></pre></td></tr></table></figure>\n\n<p>3.result</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PatternStream pStream2 = CEP.pattern(metricEvent.keyBy(metricEvent1 -&gt; metricEvent1.getName() + Joiner.<span class=\"keyword\">on</span>(<span class=\"string\">&quot;,&quot;</span>).<span class=\"keyword\">join</span>(metricEvent1.getTags().values())), p);</span><br><span class=\"line\">       SingleOutputStreamOperator filter2 = pStream2.<span class=\"keyword\">select</span>(<span class=\"literal\">new</span> PatternSelectFunction&lt;MetricEvent, <span class=\"built_in\">String</span>&gt;() &#123;</span><br><span class=\"line\">           @Override</span><br><span class=\"line\">           <span class=\"keyword\">public</span> <span class=\"built_in\">String</span> <span class=\"keyword\">select</span>(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">List</span>&lt;MetricEvent&gt;&gt; pattern) throws Exception &#123;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> <span class=\"string\">&quot;-----------------------------&quot;</span> + pattern.toString();</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">       filter2.print();</span><br><span class=\"line\"></span><br><span class=\"line\">       StateBackend memory = <span class=\"literal\">new</span> MemoryStateBackend(<span class=\"number\">10</span> * <span class=\"number\">5</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">       env.setStateBackend(memory);</span><br><span class=\"line\">       env.execute(<span class=\"string\">&quot;----flink cep alert ----&quot;</span>); </span><br></pre></td></tr></table></figure>\n\n<p>4.model</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title class_\"><span class=\"keyword\">class</span> <span class=\"title\">MetricEvent</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">String</span> name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> long timestamp;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;<span class=\"keyword\">String</span>, Object&gt; fields = <span class=\"keyword\">new</span> <span class=\"type\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;<span class=\"keyword\">String</span>, <span class=\"keyword\">String</span>&gt; tags = <span class=\"keyword\">new</span> <span class=\"type\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>5.ScriptEngine</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.apache.flink.cep.pattern.Pattern;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.script.Bindings;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.script.Invocable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.script.ScriptEngineManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.script.ScriptException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ScriptEngine</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Pattern <span class=\"title function_\">getPattern</span><span class=\"params\">(String text,String name)</span> <span class=\"keyword\">throws</span> ScriptException, NoSuchMethodException &#123;</span><br><span class=\"line\">       <span class=\"type\">ScriptEngineManager</span> <span class=\"variable\">factory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ScriptEngineManager</span>();</span><br><span class=\"line\">       javax.script.<span class=\"type\">ScriptEngine</span> <span class=\"variable\">engine</span> <span class=\"operator\">=</span>  factory.getEngineByName(<span class=\"string\">&quot;groovy&quot;</span>);</span><br><span class=\"line\">       System.out.println(engine.toString());</span><br><span class=\"line\">       <span class=\"keyword\">assert</span> engine != <span class=\"literal\">null</span>;</span><br><span class=\"line\">       engine.eval(text);</span><br><span class=\"line\">       <span class=\"type\">Pattern</span> <span class=\"variable\">pattern</span> <span class=\"operator\">=</span> (Pattern)((Invocable)engine).invokeFunction(name);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> pattern;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>6.表达式相关<br>GetTagMapFunction</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetTagMapFunction</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AbstractFunction</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title class_\">String</span> <span class=\"title function_\">getName</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;getF&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title class_\">AviatorDouble</span> <span class=\"title function_\">call</span>(<span class=\"params\"><span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">Object</span>&gt; env, AviatorObject args1, AviatorObject args2</span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Map</span>&lt;<span class=\"title class_\">String</span>, <span class=\"title class_\">Object</span>&gt; map = (<span class=\"title class_\">Map</span>&lt;<span class=\"title class_\">String</span>, <span class=\"title class_\">Object</span>&gt;) <span class=\"title class_\">FunctionUtils</span>.<span class=\"title function_\">getJavaObject</span>(args1, env);</span><br><span class=\"line\">        <span class=\"title class_\">String</span> field = <span class=\"title class_\">FunctionUtils</span>.<span class=\"title function_\">getStringValue</span>(args2, env);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AviatorDouble</span>((<span class=\"title class_\">Double</span>) map.<span class=\"title function_\">get</span>(field));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>GetFieldMapFunction</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetFieldMapFunction</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">AbstractFunction</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title class_\">String</span> <span class=\"title function_\">getName</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;getT&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title class_\">AviatorString</span> <span class=\"title function_\">call</span>(<span class=\"params\"><span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">Object</span>&gt; env, AviatorObject args1, AviatorObject args2</span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Map</span>&lt;<span class=\"title class_\">String</span>, <span class=\"title class_\">String</span>&gt; map = (<span class=\"title class_\">Map</span>&lt;<span class=\"title class_\">String</span>, <span class=\"title class_\">String</span>&gt;) <span class=\"title class_\">FunctionUtils</span>.<span class=\"title function_\">getJavaObject</span>(args1, env);</span><br><span class=\"line\">        <span class=\"title class_\">String</span> field = <span class=\"title class_\">FunctionUtils</span>.<span class=\"title function_\">getStringValue</span>(args2, env);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AviatorString</span>(map.<span class=\"title function_\">get</span>(field));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>7.表达式Condition,注册表达式</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title class_\"><span class=\"keyword\">class</span> <span class=\"title\">AviatorCondition</span> <span class=\"keyword\"><span class=\"keyword\">extends</span> <span class=\"type\">SimpleCondition</span></span>&lt;<span class=\"title\">MetricEvent</span>&gt; <span class=\"keyword\"><span class=\"keyword\">implements</span> <span class=\"type\">Serializable</span></span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Logger logger = LoggerFactory.getLogger(AviatorCondition.class);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">String</span> script;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        AviatorEvaluator.addFunction(<span class=\"keyword\">new</span> <span class=\"type\">GetFieldMapFunction</span>());</span><br><span class=\"line\">        AviatorEvaluator.addFunction(<span class=\"keyword\">new</span> <span class=\"type\">GetTagMapFunction</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> AviatorCondition(<span class=\"keyword\">String</span> script) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.script = script;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> boolean filter(MetricEvent event) throws Exception &#123;</span><br><span class=\"line\">        Map&lt;<span class=\"keyword\">String</span>, Object&gt; env = <span class=\"keyword\">new</span> <span class=\"type\">HashMap</span>&lt;<span class=\"keyword\">String</span>, Object&gt;();</span><br><span class=\"line\">        env.put(<span class=\"string\">&quot;event&quot;</span>, event);</span><br><span class=\"line\">        env.put(<span class=\"string\">&quot;fields&quot;</span>, event.getFields());</span><br><span class=\"line\">        env.put(<span class=\"string\">&quot;tags&quot;</span>, event.getTags());</span><br><span class=\"line\">        Boolean result = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            result = (Boolean) AviatorEvaluator.execute(script, env);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            logger.error(<span class=\"string\">&quot;execute script with event error,script:&#123;&#125;,event:&#123;&#125;,error;&#123;&#125;&quot;</span>, script, event, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>8.依赖</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.googlecode.aviator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>aviator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.codehaus.groovy<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>groovy<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.codehaus.groovy<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>groovy-jsr223<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.codehaus.groovy<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>groovy<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      </span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>fastjson<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.51<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.flink<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>flink-cep-scala_2.11<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$</span><span class=\"template-variable\">&#123;flink.version&#125;</span><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.34<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.google.guava<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>guava<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">           <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>26.0-jre<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">       <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span> </span></span><br></pre></td></tr></table></figure>\n","text":"flink cep，使用groovy脚本及表达式求值使用表达式求值和groovy脚本来生成flink cep Pattern。减少代码量，一份代码可通过传scr...","permalink":"/post/BIGDATA/flink cep，使用groovy脚本及表达式求值","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"flink","slug":"flink","count":2,"path":"api/categories/flink.json"},{"name":"BIGDATA","slug":"flink/BIGDATA","count":1,"path":"api/categories/flink/BIGDATA.json"}],"tags":[{"name":"cep","slug":"cep","count":1,"path":"api/tags/cep.json"},{"name":"groovy","slug":"groovy","count":1,"path":"api/tags/groovy.json"},{"name":"pattern","slug":"pattern","count":1,"path":"api/tags/pattern.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#flink-cep%EF%BC%8C%E4%BD%BF%E7%94%A8groovy%E8%84%9A%E6%9C%AC%E5%8F%8A%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC\"><span class=\"toc-text\">flink cep，使用groovy脚本及表达式求值</span></a></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Shiro中多Realm下抛出异常不准确","uid":"923091e5afde124d5b66314a0b825fb8","slug":"JAVA/Shiro中多Realm下抛出异常不准确","date":"2023-05-12T15:13:14.000Z","updated":"2025-09-30T03:26:15.888Z","comments":true,"path":"api/articles/JAVA/Shiro中多Realm下抛出异常不准确.json","keywords":"XuGuangSheng","cover":"/covers/shirorealm.jpg","text":"Shiro中多Realm下抛出异常不准确如果你的项目中存在多个Realm，当你在Realm中判断账号异常抛出了一个UnknownAccountException...","permalink":"/post/JAVA/Shiro中多Realm下抛出异常不准确","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"Realm","slug":"Realm","count":1,"path":"api/categories/Realm.json"},{"name":"JAVA","slug":"Realm/JAVA","count":1,"path":"api/categories/Realm/JAVA.json"}],"tags":[{"name":"FormAuthenticationFilter","slug":"FormAuthenticationFilter","count":1,"path":"api/tags/FormAuthenticationFilter.json"},{"name":"onLoginFailure","slug":"onLoginFailure","count":1,"path":"api/tags/onLoginFailure.json"},{"name":"doMultiRealmAuthentication","slug":"doMultiRealmAuthentication","count":1,"path":"api/tags/doMultiRealmAuthentication.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Apache HttpClient使用不当导致的请求超时问题排查","uid":"f2f3d8a736517daef67fee74c45d8b64","slug":"JAVA/Apache HttpClient使用不当导致的请求超时问题排查","date":"2023-05-09T10:27:18.000Z","updated":"2025-09-30T03:26:06.642Z","comments":true,"path":"api/articles/JAVA/Apache HttpClient使用不当导致的请求超时问题排查.json","keywords":"XuGuangSheng","cover":"/covers/apache-httpclient.jpg","text":"Apache HttpClient使用不当导致的请求超时问题排查Apache HttpClient使用不当导致的请求超时问题排查 近期负责的线上应用出现调用失败...","permalink":"/post/JAVA/Apache HttpClient使用不当导致的请求超时问题排查","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"HttpClient","slug":"HttpClient","count":1,"path":"api/categories/HttpClient.json"},{"name":"JAVA","slug":"HttpClient/JAVA","count":1,"path":"api/categories/HttpClient/JAVA.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"fbpfcp","slug":"fbpfcp","count":1,"path":"api/tags/fbpfcp.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}