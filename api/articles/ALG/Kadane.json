{"title":"Kadane算法","uid":"2c671df6ac43c352607865f709c91620","slug":"ALG/Kadane","date":"2020-09-22T22:01:24.000Z","updated":"2025-09-30T03:26:01.248Z","comments":true,"path":"api/articles/ALG/Kadane.json","keywords":"XuGuangSheng","cover":"/covers/kadane.jpg","content":"<p>Kadane算法扫描一次整个数列的所有数值，在每一个扫描点计算以该点数值为结束点的子数列的最大和（正数和）。该子数列由两部分组成：以前一个位置为结束点的最大子数列、该位置的数值。因为该算法用到了“最佳子结构”（以每个位置为终点的最大子数列都是基于其前一位置的最大子数列计算得出），该算法可看成动态规划的一个例子。</p>\n<p>算法可用如下Python代码实现：</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def max_subarray(A):</span><br><span class=\"line\">    max_ending_here <span class=\"operator\">=</span> max_so_far <span class=\"operator\">=</span> A[<span class=\"number\">0</span>]</span><br><span class=\"line\">    for <span class=\"keyword\">x</span> in A[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">        max_ending_here <span class=\"operator\">=</span> <span class=\"keyword\">max</span>(<span class=\"keyword\">x</span><span class=\"punctuation\">,</span> max_ending_here + <span class=\"keyword\">x</span>)</span><br><span class=\"line\">        max_so_far <span class=\"operator\">=</span> <span class=\"keyword\">max</span>(max_so_far<span class=\"punctuation\">,</span> max_ending_here)</span><br><span class=\"line\">    return max_so_far</span><br></pre></td></tr></table></figure>\n\n<p>该问题的一个变种是：如果数列中含有负数元素，允许返回长度为零的子数列。该问题可用如下代码解决：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">max_subarray</span>(<span class=\"params\">A</span>):</span><br><span class=\"line\">    max_ending_here = max_so_far = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> A:</span><br><span class=\"line\">        max_ending_here = <span class=\"built_in\">max</span>(<span class=\"number\">0</span>, max_ending_here + x)</span><br><span class=\"line\">        max_so_far = <span class=\"built_in\">max</span>(max_so_far, max_ending_here)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max_so_far</span><br></pre></td></tr></table></figure>\n","text":"Kadane算法扫描一次整个数列的所有数值，在每一个扫描点计算以该点数值为结束点的子数列的最大和（正数和）。该子数列由两部分组成：以前一个位置为结束点的最大子数...","permalink":"/post/ALG/Kadane","photos":[],"count_time":{"symbolsCount":641,"symbolsTime":"1 mins."},"categories":[{"name":"Kadane","slug":"Kadane","count":1,"path":"api/categories/Kadane.json"},{"name":"ALG","slug":"Kadane/ALG","count":1,"path":"api/categories/Kadane/ALG.json"}],"tags":[{"name":"算法扫描一次整个数列的所有数值","slug":"算法扫描一次整个数列的所有数值","count":1,"path":"api/tags/算法扫描一次整个数列的所有数值.json"},{"name":"在每一个扫描点计算以该点数值为结束点的子数列的最大和","slug":"在每一个扫描点计算以该点数值为结束点的子数列的最大和","count":1,"path":"api/tags/在每一个扫描点计算以该点数值为结束点的子数列的最大和.json"},{"name":"正数和","slug":"正数和","count":1,"path":"api/tags/正数和.json"}],"toc":"","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"spring-resource注解","uid":"967cedbbb844e0a50d0c9c5adb15d090","slug":"JAVA/spring-resource","date":"2020-09-24T21:56:07.000Z","updated":"2025-09-30T03:26:23.310Z","comments":true,"path":"api/articles/JAVA/spring-resource.json","keywords":"XuGuangSheng","cover":"/covers/spring-resource.jpg","text":"Spring不但支持自己定义的@Autowired注解，还支持几个由JSR-250规范定义的注解，它们分别是@Resource、@PostConstruct以及...","permalink":"/post/JAVA/spring-resource","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Autowired","slug":"Autowired","count":1,"path":"api/categories/Autowired.json"},{"name":"JAVA","slug":"Autowired/JAVA","count":1,"path":"api/categories/Autowired/JAVA.json"}],"tags":[{"name":"name","slug":"name","count":6,"path":"api/tags/name.json"},{"name":"Resource","slug":"Resource","count":1,"path":"api/tags/Resource.json"},{"name":"bean","slug":"bean","count":1,"path":"api/tags/bean.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"regex","uid":"83a6d625bad3243ff35a5af336d58b53","slug":"JAVA/regex","date":"2020-09-07T22:13:46.000Z","updated":"2025-09-30T03:26:23.091Z","comments":true,"path":"api/articles/JAVA/regex.json","keywords":"XuGuangSheng","cover":"/covers/regex.jpg","text":"匹配中文: 1[\\u4e00-\\u9fa5] 英文字母: 1[a-zA-Z] 数字: 1[0-9] 匹配中文，英文字母和数字及_: 1^[\\u4e00-\\u9f...","permalink":"/post/JAVA/regex","photos":[],"count_time":{"symbolsCount":626,"symbolsTime":"1 mins."},"categories":[{"name":"数字","slug":"数字","count":1,"path":"api/categories/数字.json"},{"name":"JAVA","slug":"数字/JAVA","count":1,"path":"api/categories/数字/JAVA.json"}],"tags":[{"name":"匹配中文","slug":"匹配中文","count":1,"path":"api/tags/匹配中文.json"},{"name":"只含有汉字","slug":"只含有汉字","count":1,"path":"api/tags/只含有汉字.json"},{"name":"字母","slug":"字母","count":1,"path":"api/tags/字母.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}