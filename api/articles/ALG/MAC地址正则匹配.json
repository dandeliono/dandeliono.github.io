{"title":"MAC地址正则匹配","uid":"ae3e49e2fd32f60fd6f14ef67049c415","slug":"ALG/MAC地址正则匹配","date":"2023-01-05T11:59:40.000Z","updated":"2025-09-30T03:26:01.499Z","comments":true,"path":"api/articles/ALG/MAC地址正则匹配.json","keywords":"XuGuangSheng","cover":"/covers/mac.jpg","content":"<h1 id=\"MAC地址正则匹配\"><a href=\"#MAC地址正则匹配\" class=\"headerlink\" title=\"MAC地址正则匹配\"></a>MAC地址正则匹配</h1><h3 id=\"关于MAC地址\"><a href=\"#关于MAC地址\" class=\"headerlink\" title=\"关于MAC地址\"></a>关于MAC地址</h3><p>MAC地址，也就是网卡MAC码。网卡MAC码是由IEEE的注册管理机构固定分配的,因此每一个主机会有一个MAC地址，具有全球唯一性。</p>\n<h3 id=\"需求分析\"><a href=\"#需求分析\" class=\"headerlink\" title=\"需求分析\"></a>需求分析</h3><p>因为业务需要验证MAC地址是否合法，因而想到用正则进行匹配。</p>\n<p>因为考虑到MAC地址一般有两种格式，使用<code>-</code>连接或是<code>:</code>连接，于是我稍作改动，改动结果如下</p>\n<ul>\n<li><strong><code>/((([a-f0-9]&#123;2&#125;:)&#123;5&#125;)|(([a-f0-9]&#123;2&#125;-)&#123;5&#125;))[a-f0-9]&#123;2&#125;/gi</code></strong></li>\n</ul>\n<p>以上正则表达式就是最终版的MAC地址验证表达式，如果不清楚具体原理可以接着往下看。</p>\n<h3 id=\"拆解分析\"><a href=\"#拆解分析\" class=\"headerlink\" title=\"拆解分析\"></a>拆解分析</h3><h4 id=\"1-a-f0-9\"><a href=\"#1-a-f0-9\" class=\"headerlink\" title=\"1. [a-f0-9]\"></a>1. <code>[a-f0-9]</code></h4><p>匹配a到f或0到9中的任意一位字符。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>匹配的结果例如<code>2</code>或<code>d</code>。</p></blockquote>\n<h4 id=\"2-a-f0-9-2\"><a href=\"#2-a-f0-9-2\" class=\"headerlink\" title=\"2. [a-f0-9]{2}\"></a>2. <code>[a-f0-9]&#123;2&#125;</code></h4><p>匹配连续两位的括号中任意字符。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>匹配的结果例如<code>d2</code>或<code>ac</code>。</p></blockquote>\n<h4 id=\"3-a-f0-9-2\"><a href=\"#3-a-f0-9-2\" class=\"headerlink\" title=\"3. [a-f0-9]{2}:\"></a>3. <code>[a-f0-9]&#123;2&#125;:</code></h4><p>连续两位的括号中任意字符再拼接一个<code>:</code>(冒号)。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>匹配的结果例如<code>b2:</code>或<code>23:</code></p></blockquote>\n<h4 id=\"4-a-f0-9-2-a-f0-9-2\"><a href=\"#4-a-f0-9-2-a-f0-9-2\" class=\"headerlink\" title=\"4. ([a-f0-9]{2}:)|([a-f0-9]{2}-)\"></a>4. <code>([a-f0-9]&#123;2&#125;:)|([a-f0-9]&#123;2&#125;-)</code></h4><p>在第三步的基础上可以将冒号替换为横杠。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>匹配的结果例如<code>f3:</code>或<code>79-</code></p></blockquote>\n<h4 id=\"5-a-f0-9-2-a-f0-9-2-5\"><a href=\"#5-a-f0-9-2-a-f0-9-2-5\" class=\"headerlink\" title=\"5. (([a-f0-9]{2}:)|([a-f0-9]{2}-)){5}\"></a>5. <code>(([a-f0-9]&#123;2&#125;:)|([a-f0-9]&#123;2&#125;-))&#123;5&#125;</code></h4><p>将第四步的结果重复5次。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>匹配的结果例如<code>00-01-6C-06-A6-</code>或<code>00:01:6C:06:A6:</code></p></blockquote>\n<h4 id=\"6-a-f0-9-2-a-f0-9-2-5-a-f0-9-2\"><a href=\"#6-a-f0-9-2-a-f0-9-2-5-a-f0-9-2\" class=\"headerlink\" title=\"6. (([a-f0-9]{2}:)|([a-f0-9]{2}-)){5}[a-f0-9]{2}\"></a>6. <code>(([a-f0-9]&#123;2&#125;:)|([a-f0-9]&#123;2&#125;-))&#123;5&#125;[a-f0-9]&#123;2&#125;</code></h4><p>在第五步的结果上再拼接两个<code>[A-F0-9]</code>范围内的两个字符</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>匹配的结果例如<code>00-01-6C-06-A6-29</code>或<code>00:01:6C:06:A6:29</code></p></blockquote>\n<h4 id=\"7-设置大小写不敏感与全局匹配\"><a href=\"#7-设置大小写不敏感与全局匹配\" class=\"headerlink\" title=\"7. 设置大小写不敏感与全局匹配\"></a>7. 设置大小写不敏感与全局匹配</h4><p>在正则最后加上<code>/ig</code>。</p>\n<p>完整的正则表达式也就是：</p>\n<h4 id=\"a-f0-9-2-a-f0-9-2-5-a-f0-9-2-gi\"><a href=\"#a-f0-9-2-a-f0-9-2-5-a-f0-9-2-gi\" class=\"headerlink\" title=\"/(([a-f0-9]{2}:)|([a-f0-9]{2}-)){5}[a-f0-9]{2}/gi\"></a><code>/(([a-f0-9]&#123;2&#125;:)|([a-f0-9]&#123;2&#125;-))&#123;5&#125;[a-f0-9]&#123;2&#125;/gi</code></h4><h4 id=\"8-解决AA-BB-CC-DD-EE-FF这类符号混用也能通过验证的问题\"><a href=\"#8-解决AA-BB-CC-DD-EE-FF这类符号混用也能通过验证的问题\" class=\"headerlink\" title=\"8.解决AA:BB-CC:DD:EE-FF这类符号混用也能通过验证的问题\"></a>8.解决<code>AA:BB-CC:DD:EE-FF</code>这类符号混用也能通过验证的问题</h4><p>第7步的正则无法剔除<code>AA:BB-CC:DD:EE-FF</code>这类·-·与‘:’混用的脏数据，因此稍作改动，将重复匹配5次这一操作分别作用于<br><code>([a-f0-9]&#123;2&#125;:)</code>与<code>([a-f0-9]&#123;2&#125;-)</code>。最终正则如下：</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\">/((([a-f0-9]</span><span class=\"template-variable\">&#123;2&#125;</span><span class=\"language-xml\">:)</span><span class=\"template-variable\">&#123;5&#125;</span><span class=\"language-xml\">)|(([a-f0-9]</span><span class=\"template-variable\">&#123;2&#125;</span><span class=\"language-xml\">-)</span><span class=\"template-variable\">&#123;5&#125;</span><span class=\"language-xml\">))[a-f0-9]</span><span class=\"template-variable\">&#123;2&#125;</span><span class=\"language-xml\">/gi</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"END\"><a href=\"#END\" class=\"headerlink\" title=\"END\"></a>END</h2>","text":"MAC地址正则匹配关于MAC地址MAC地址，也就是网卡MAC码。网卡MAC码是由IEEE的注册管理机构固定分配的,因此每一个主机会有一个MAC地址，具有全球唯一...","permalink":"/post/ALG/MAC地址正则匹配","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"MAC","slug":"MAC","count":1,"path":"api/categories/MAC.json"},{"name":"ALG","slug":"MAC/ALG","count":1,"path":"api/categories/MAC/ALG.json"}],"tags":[{"name":"匹配的结果例如","slug":"匹配的结果例如","count":1,"path":"api/tags/匹配的结果例如.json"},{"name":"地址","slug":"地址","count":1,"path":"api/tags/地址.json"},{"name":"地址正则匹配","slug":"地址正则匹配","count":1,"path":"api/tags/地址正则匹配.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MAC%E5%9C%B0%E5%9D%80%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">MAC地址正则匹配</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8EMAC%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">关于MAC地址</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90\"><span class=\"toc-text\">需求分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%86%E8%A7%A3%E5%88%86%E6%9E%90\"><span class=\"toc-text\">拆解分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-a-f0-9\"><span class=\"toc-text\">1. [a-f0-9]</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-a-f0-9-2\"><span class=\"toc-text\">2. [a-f0-9]{2}</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-a-f0-9-2\"><span class=\"toc-text\">3. [a-f0-9]{2}:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-a-f0-9-2-a-f0-9-2\"><span class=\"toc-text\">4. ([a-f0-9]{2}:)|([a-f0-9]{2}-)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-a-f0-9-2-a-f0-9-2-5\"><span class=\"toc-text\">5. (([a-f0-9]{2}:)|([a-f0-9]{2}-)){5}</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-a-f0-9-2-a-f0-9-2-5-a-f0-9-2\"><span class=\"toc-text\">6. (([a-f0-9]{2}:)|([a-f0-9]{2}-)){5}[a-f0-9]{2}</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-%E8%AE%BE%E7%BD%AE%E5%A4%A7%E5%B0%8F%E5%86%99%E4%B8%8D%E6%95%8F%E6%84%9F%E4%B8%8E%E5%85%A8%E5%B1%80%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">7. 设置大小写不敏感与全局匹配</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#a-f0-9-2-a-f0-9-2-5-a-f0-9-2-gi\"><span class=\"toc-text\">&#x2F;(([a-f0-9]{2}:)|([a-f0-9]{2}-)){5}[a-f0-9]{2}&#x2F;gi</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-%E8%A7%A3%E5%86%B3AA-BB-CC-DD-EE-FF%E8%BF%99%E7%B1%BB%E7%AC%A6%E5%8F%B7%E6%B7%B7%E7%94%A8%E4%B9%9F%E8%83%BD%E9%80%9A%E8%BF%87%E9%AA%8C%E8%AF%81%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">8.解决AA:BB-CC:DD:EE-FF这类符号混用也能通过验证的问题</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#END\"><span class=\"toc-text\">END</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"一行js代码识别Selenium+Webdriver与反识别","uid":"a53c723ef12f17b502c1ffd648c4aabe","slug":"WORK/一行js代码识别Selenium+Webdriver与反识别","date":"2023-01-10T16:14:41.000Z","updated":"2025-09-30T03:27:02.643Z","comments":true,"path":"api/articles/WORK/一行js代码识别Selenium+Webdriver与反识别.json","keywords":"XuGuangSheng","cover":"/covers/jsselenium-webdriver.jpg","text":"一行js代码识别Selenium+Webdriver与反识别一行js代码识别Selenium+Webdriver有不少朋友在开发爬虫的过程中喜欢使用Seleni...","permalink":"/post/WORK/一行js代码识别Selenium+Webdriver与反识别","photos":[],"count_time":{"symbolsCount":"9.6k","symbolsTime":"9 mins."},"categories":[{"name":"https","slug":"https","count":12,"path":"api/categories/https.json"},{"name":"WORK","slug":"https/WORK","count":1,"path":"api/categories/https/WORK.json"}],"tags":[{"name":"true","slug":"true","count":2,"path":"api/tags/true.json"},{"name":"webdriver","slug":"webdriver","count":1,"path":"api/tags/webdriver.json"},{"name":"Selenium","slug":"Selenium","count":1,"path":"api/tags/Selenium.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"徒手撸框架--高并发环境下的请求合并","uid":"536679e8a77999953c3193ac12ff85df","slug":"JAVA/徒手撸框架--高并发环境下的请求合并","date":"2022-12-28T19:57:07.000Z","updated":"2025-09-30T03:26:26.169Z","comments":true,"path":"api/articles/JAVA/徒手撸框架--高并发环境下的请求合并.json","keywords":"XuGuangSheng","cover":"/covers/6e574f2f4349.jpg","text":"徒手撸框架–高并发环境下的请求合并在高并发系统中，我们经常遇到这样的需求：系统产生大量的请求，但是这些请求实时性要求不高。我们就可以将这些请求合并，达到一定数量...","permalink":"/post/JAVA/徒手撸框架--高并发环境下的请求合并","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"LockSupport","slug":"LockSupport","count":1,"path":"api/categories/LockSupport.json"},{"name":"JAVA","slug":"LockSupport/JAVA","count":1,"path":"api/categories/LockSupport/JAVA.json"}],"tags":[{"name":"底层使用什么数据结构来持有需要合并的请求","slug":"底层使用什么数据结构来持有需要合并的请求","count":1,"path":"api/tags/底层使用什么数据结构来持有需要合并的请求.json"},{"name":"timeOut","slug":"timeOut","count":1,"path":"api/tags/timeOut.json"},{"name":"如何实现定时提交呢","slug":"如何实现定时提交呢","count":1,"path":"api/tags/如何实现定时提交呢.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}