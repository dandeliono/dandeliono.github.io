{"title":"mysql GTID主从复制故障后不停机恢复同步流程 - 塔克拉玛攻城狮 - 博客园","uid":"eb41994bab0b8b1a0fef2450d1035786","slug":"MIDDLEWARE/mysql GTID主从复制故障后不停机恢复同步流程 - 塔克拉玛攻城狮 - 博客园","date":"2024-08-19T15:11:26.000Z","updated":"2025-09-30T03:26:53.482Z","comments":true,"path":"api/articles/MIDDLEWARE/mysql GTID主从复制故障后不停机恢复同步流程 - 塔克拉玛攻城狮 - 博客园.json","keywords":"XuGuangSheng","cover":"/covers/mysql-gtid.jpg","content":"<h1 id=\"mysql-GTID主从复制故障后不停机恢复同步流程-塔克拉玛攻城狮-博客园\"><a href=\"#mysql-GTID主从复制故障后不停机恢复同步流程-塔克拉玛攻城狮-博客园\" class=\"headerlink\" title=\"mysql GTID主从复制故障后不停机恢复同步流程 - 塔克拉玛攻城狮 - 博客园\"></a>mysql GTID主从复制故障后不停机恢复同步流程 - 塔克拉玛攻城狮 - 博客园</h1><p><strong>GTID实现主从复制数据同步</strong></p>\n<p>GTID是一个基于原始mysql服务器生成的一个已经被成功执行的全局事务ID，它由服务器ID以及事务ID组成，这个全局事务ID不仅仅在原始服务器上唯一，在所有主从关系的mysql服务器上也是唯一的。正式因为这样一个特性使得mysql主从复制变得更加简单，以及数据库一致性更可靠。</p>\n<p><strong>介绍</strong></p>\n<p><strong>GTID的概念</strong></p>\n<ol>\n<li> 全局事务标识：global transaction identifiers</li>\n<li> GTID是一个事务一一对应，并且全局唯一ID</li>\n<li> 一个GTID在一个服务器上只执行一次，避免重复执行导致数据混乱不一致</li>\n<li> 不再使用传统的MASTER_LOG_FILE+MASTER_LOG_POS开启复制，而是采用MASTER_AUTO_POSTION&#x3D;1的方式开启复制。</li>\n<li> 从MYSQL-5.6.5及后续版本开始支持</li>\n</ol>\n<p><strong>GTID的组成</strong></p>\n<p>GTID &#x3D; server_uuid:transaction_id</p>\n<p><strong>server_uuid：</strong> mysql服务器的唯一标识，查看方法mysql客户端内：show variables like ‘%server_uuid%’;</p>\n<p><strong>transaction_id</strong>：此id是当前服务器中提交事务的一个序列号，从1开始自增长，一个数值对应一个事务</p>\n<p>GTID号示例：c9fba9e2-db3b-11eb-81d4-000c298d8da1:1-5</p>\n<p><strong>GTID的优势</strong></p>\n<ol>\n<li> 实现主从更简单，不用像以前一样寻找log_file和log_pos</li>\n<li> 比传统的主从更加安全</li>\n<li> GTID是连续没有空洞的，保证数据一致性，零丢失。</li>\n</ol>\n<p><strong>GTID工作原理</strong></p>\n<ol>\n<li>master更新数据时，会在事务前产生GTID，一同记录到binlog日志中</li>\n<li>slave端的I&#x2F;O线程将变更的binlog，写入到本地的relay log中</li>\n<li>SQL线程从relay log中获取GTID，然后对比slave端的binlog是否有记录（所以MySQL5.6 slave端必须开启binlog）</li>\n<li>如果有记录，说明该GTID的事务已经执行，slave会忽略</li>\n<li>如果没有记录，slave就会从relay log中执行该GTID的事务，并记录到binlog</li>\n<li>在解析过程中会判断是否有主键，如果没有就用二级索引，如果没有就用全部扫描</li>\n</ol>\n<p><strong>开始配置GTID复制</strong></p>\n<p>主：192.168.152.253   Centos7</p>\n<p>从：192.168.152.252   Centos8</p>\n<p>测试数据库：vfan</p>\n<p>测试表：student</p>\n<p>1、修改mysql服务配置文件，添加以下参数，随后重启：</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>server-id=100    #server id log-bin&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql-bin  #开启binlog并指定存储位置<br>expire_logs_days=10 #日志保存时间为10天<br>gtid_mode=on  #gtid模块开关<br>enforce_gtid_consistency=on  #启动GTID强一致性，开启gtid模块必须开启此功能。<br>binlog_format=row  #bin_log日志格式，共有三种STATEMENT、ROW、MIXED；默认为STATEMENT<br>skip_slave_start=1  #防止复制随着mysql启动而自动启动</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>主服务器和从服务器的配置一致即可，server-id更改一下</p></blockquote>\n<p>2、在主服务器中创建从服务器连接的用户</p>\n<p>CREATE USER ‘copy‘@’192.168.152.252’ IDENTIFIED BY ‘copy’;<br>GRANT REPLICATION SLAVE ON *.* TO ‘copy‘@’192.168.152.252’;<br>flush privileges;</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>创建完毕记得要测试下slave机是否能登录成功</p></blockquote>\n<p>3、使用mysqldump使两数据库数据同步</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>主mysql执行：<br>mysqldump -uroot -proot1 vfan &gt; dump2.sql scp dump2.sql 192.168.152.252:&#x2F;data&#x2F; 从mysql执行：<br>mysql&gt; source &#x2F;data&#x2F;dump2.sql</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>当前主、从服务器数据内容一致，都是以下数据：</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>mysql&gt; select * from student; +—-+——+—–+<br>| id | name | age |<br>+—-+——+—–+<br>|  1 | Tony |  18 |<br>|  2 | Any  |  17 |<br>|  3 | Goy  |  20 |<br>|  4 | Baly |  18 |<br>|  5 | Heg  |  19 |<br>|  6 | hhh  | 100 |<br>|  7 | lll  |  99 |<br>+—-+——+—–+<br>7 rows in set (0.01 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>4、开启主从复制</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>mysql&gt; CHANGE MASTER TO MASTER_HOST&#x3D;’192.168.152.253’,MASTER_USER&#x3D;’copy’,MASTER_PASSWORD&#x3D;’copy’,MASTER_PORT&#x3D;3306,MASTER_AUTO_POSITION&#x3D;1;<br>Query OK, 0 rows affected, 2 warnings (0.04 sec)</p>\n<p>mysql&gt; start slave;<br>Query OK, 0 rows affected (0.01 sec)</p>\n<h2 id=\"查看slave状态\"><a href=\"#查看slave状态\" class=\"headerlink\" title=\"查看slave状态\"></a>查看slave状态</h2><p>mysql&gt; show slave status\\G *************************** 1. row *************************** Slave_IO_State: Waiting for master to send event<br>                  Master_Host: 192.168.152.253 Master_User: copy<br>                  Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.000014 Read_Master_Log_Pos: 897 Relay_Log_File: kubenode2-relay-bin.000002 Relay_Log_Pos: 416 Relay_Master_Log_File: mysql-bin.000014 Slave_IO_Running: Yes<br>            Slave_SQL_Running: Yes</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>5、检查是否同步</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>主服务器中插入数据：<br>mysql&gt; INSERT INTO student(name,age) VALUES(‘gogoo’,50),(‘zhazha’,25);<br>Query OK, 2 rows affected (0.03 sec)<br>Records: 2  Duplicates: 0  Warnings: 0 从服务器中读取：<br>mysql&gt; select * from student; +—-+——–+—–+<br>| id | name   | age |<br>+—-+——–+—–+<br>|  1 | Tony   |  18 |<br>|  2 | Any    |  17 |<br>|  3 | Goy    |  20 |<br>|  4 | Baly   |  18 |<br>|  5 | Heg    |  19 |<br>|  6 | hhh    | 100 |<br>|  7 | lll    |  99 |<br>|  8 | gogoo  |  50 |<br>|  9 | zhazha |  25 |<br>+—-+——–+—–+<br>9 rows in set (0.00 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>数据已经同步，基础的主从复制已经搭建完成</p></blockquote>\n<p><strong>现在模拟一个主从复制架构中，从服务器中途复制失败，不再同步主服务器的场景，并要求不停业务进行数据同步修复，恢复一致。（或者主服务器宕机，从服务器代替主服务器提供服务，现在要恢复主服务器的数据，使它与从服务器的数据同步）</strong></p>\n<p>1、首先先模拟一个数据插入的场景</p>\n<p>vim insert.sh</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>#!&#x2F;usr&#x2F;bin&#x2F;env bash</p>\n<p>values=(`find &#x2F;usr&#x2F; -type d | awk -F ‘&#x2F;‘ ‘{print $NF}’ | sort -u`) while true<br>do age=$(( $RANDOM%100 ))<br>name=${values[$(( $RANDOM%6 ))]}</p>\n<p>mysql -h127.1 -P3306 -uroot -proot1 -e “INSERT INTO vfan.student(name,age) VALUES(‘“${name}”‘,${age});” &amp;&gt; &#x2F;dev&#x2F;null<br>sleep $(( $RANDOM%5 )) done</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>运行脚本，数据在随机插入（插入时间间隔 &lt; 5s）</p>\n<p>2、数据还在陆续插入，此时模拟slave节点宕机或异常(在此就直接stop slave;)</p>\n<p>mysql&gt; stop slave;<br>Query OK, 0 rows affected (0.01 sec)</p>\n<p>3、此时主库数据还在增加，而从库已经不同步，以下是从库数据：</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>mysql&gt; select * from student; +—-+———————+—–+<br>| id | name                | age | …… | 82 | 00bash              |  50 |<br>| 83 | 00systemd-bootchart |  36 |<br>| 84 | 00bash              |  48 |<br>| 85 | 00systemd-bootchart |  41 |<br>| 86 | 00                  |  72 |<br>+—-+———————+—–+<br>86 rows in set (0.00 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>目前主mysql数据：</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>mysql&gt; select * from student;<br>+—-+———————+—–+<br>| id | name                | age |<br>……<br>|  97 | _                   |   2 |<br>|  98 | 00bash              |  15 |<br>|  99 | 00bash              |  52 |<br>| 100 | 00bash              |  43 |<br>| 101 | _                   |  65 |<br>| 102 | 00                  |  67 |<br>+—–+———————+—–+<br>102 rows in set (0.01 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>很明显已经比从库多出很多数据</p></blockquote>\n<p>4、开始从库恢复数据</p>\n<p>思路：</p>\n<p> 先通过mysqldump全量备份当前的数据，由于不能影响业务，所以在mysqldump数据时不能造成锁表。要保持数据写入</p>\n<p> 由于mysqldump时数据还在写入，所以有一部分数据还是会同步不全，所以导入mysqldump的数据后，跳过dump中包含的GTID事务，再重新建立一次主从配置，开启slave线程，恢复数据并同步。</p>\n<p>（1）mysqldump不锁表备份数据</p>\n<p>mysqldump -uroot -proot1 –single-transaction –master-data&#x3D;2 -R vfan | gzip &gt; dump4.sql</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>主要起作用参数：–single-transaction</p></blockquote>\n<p>（2）查看当前mysqldump导出数据的GTID号</p>\n<p>[root@TestCentos7 data]# grep GLOBAL.GTID_PURGED dump4.sql<br>SET @@GLOBAL.GTID_PURGED=&#x2F;*!80000 ‘+’*&#x2F; ‘c9fba9e2-db3b-11eb-81d4-000c298d8da1:1-228’;</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>以上的 c9fba9e2-db3b-11eb-81d4-000c298d8da1:1-228 表示MASTER机执行到的GTID事务号</p></blockquote>\n<p>（3）去从数据库导入</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>scp dump4.sql 192.168.152.252:&#x2F;data</p>\n<p>mysql客户端内：<br>mysql&gt; source &#x2F;data&#x2F;dump4.sql</p>\n<p>此时从库数据：<br>mysql&gt; select * from student; | 230 | 00                  |  53 |<br>| 231 | 00bash              |  66 |<br>| 232 | _                   |  18 |<br>| 233 | 0.33.0              |  98 |<br>| 234 | 00bash              |  14 |<br>+—–+———————+—–+<br>234 rows in set (0.00 sec)</p>\n<p>主库数据： | 454 | _                   |  46 |<br>| 455 | 03modsign           |  59 |<br>| 456 | 00systemd-bootchart |  77 |<br>| 457 | 03modsign           |   6 |<br>| 458 | 0.33.0              |  88 |<br>+—–+———————+—–+<br>458 rows in set (0.00 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>从库数据恢复一部分到234行，主库数据依然在增加，已经是458条</p></blockquote>\n<p>（4）由于我们mysqldump的数据已经包含了在MASTER执行的 1-228 个事务，所以我们在SLAVE进行同步的时候，要忽略这些事务不再进行同步，不然会出现类似于这种报错：</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>mysql&gt; show slave status\\G *************************** 1. row *************************** Slave_IO_State: Waiting for master to send event<br>                  Master_Host: 192.168.152.253 Master_User: copy<br>                  Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.000002 Read_Master_Log_Pos: 137827 Relay_Log_File: kubenode2-relay-bin.000002 Relay_Log_Pos: 417 Relay_Master_Log_File: mysql-bin.000002 Slave_IO_Running: Yes<br>            Slave_SQL_Running: No<br>                   Last_Errno: 1062 Last_Error: Could not execute Write_rows event on table vfan.student; Duplicate entry ‘87’ for key ‘student.PRIMARY’, Error_code: 1062; handler error HA_ERR_FOUND_DUPP_KEY; the event’s master log mysql-bin.000002, end_log_pos 10588</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>要想跳过某些GTID，SLAVE必须保证 gtid_purged 参数为空才能正确跳过，查看当前的gtid_purged：</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>mysql&gt; show global variables like ‘%gtid%’; +———————————-+————————————————————————————-+<br>| Variable_name                    | Value                                                                               |<br>+———————————-+————————————————————————————-+<br>| binlog_gtid_simple_recovery      | ON                                                                                  |<br>| enforce_gtid_consistency         | ON                                                                                  |<br>| gtid_executed                    | b30cb2ff-32d4-11eb-a447-000c292826bc:1-2,<br>c9fba9e2-db3b-11eb-81d4-000c298d8da1:1-80 |<br>| gtid_executed_compression_period | 1000                                                                                |<br>| gtid_mode                        | ON                                                                                  |<br>| gtid_owned                       |                                                                                     |<br>| gtid_purged                      | c9fba9e2-db3b-11eb-81d4-000c298d8da1:1-70                                           |<br>| session_track_gtids              | OFF                                                                                 |<br>+———————————-+————————————————————————————-+<br>8 rows in set (0.02 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>当前gtid_purged不为空，所以我们要先设置它为空，执行：</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>mysql&gt; reset master;<br>Query OK, 0 rows affected (0.05 sec)</p>\n<p>mysql&gt; show global variables like ‘%gtid%’; +———————————-+——-+<br>| Variable_name                    | Value |<br>+———————————-+——-+<br>| binlog_gtid_simple_recovery      | ON    |<br>| enforce_gtid_consistency         | ON    |<br>| gtid_executed                    |       |<br>| gtid_executed_compression_period | 1000  |<br>| gtid_mode                        | ON    |<br>| gtid_owned                       |       |<br>| gtid_purged                      |       |<br>| session_track_gtids              | OFF   |<br>+———————————-+——-+<br>8 rows in set (0.00 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>（5）gtid_purged为空后，开始重置SLAVE</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>mysql&gt; stop slave;<br>Query OK, 0 rows affected (0.00 sec)</p>\n<p>mysql&gt; reset slave all;<br>Query OK, 0 rows affected (0.02 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>（6）重置后，设置跳过的GTID，并重新同步MASTER</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>mysql&gt; SET @@GLOBAL.GTID_PURGED&#x3D;’c9fba9e2-db3b-11eb-81d4-000c298d8da1:1-228’;<br>Query OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; CHANGE MASTER TO MASTER_HOST&#x3D;’192.168.152.253’,MASTER_USER&#x3D;’copy’,MASTER_PASSWORD&#x3D;’copy’,MASTER_PORT&#x3D;3306,MASTER_AUTO_POSITION&#x3D;1;<br>Query OK, 0 rows affected, 2 warnings (0.04 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>（7）开启SLAVE进程，查看同步状态</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>mysql&gt; start slave;<br>Query OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; show slave status\\G *************************** 1. row *************************** Slave_IO_State: Waiting for master to send event<br>                  Master_Host: 192.168.152.253 Master_User: copy<br>                  Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.000002 Read_Master_Log_Pos: 137827 Relay_Log_File: kubenode2-relay-bin.000002 Relay_Log_Pos: 84993 Relay_Master_Log_File: mysql-bin.000002 Slave_IO_Running: Yes<br>            Slave_SQL_Running: Yes<br>              Replicate_Do_DB:<br>          Replicate_Ignore_DB:<br>           Replicate_Do_Table:<br>       Replicate_Ignore_Table:<br>      Replicate_Wild_Do_Table:<br>  Replicate_Wild_Ignore_Table:<br>                   Last_Errno: 0 Last_Error:<br>                 Skip_Counter: 0 Exec_Master_Log_Pos: 137827 Relay_Log_Space: 85206 Until_Condition: None<br>               Until_Log_File:<br>                Until_Log_Pos: 0 Master_SSL_Allowed: No<br>           Master_SSL_CA_File:<br>           Master_SSL_CA_Path:<br>              Master_SSL_Cert:<br>            Master_SSL_Cipher:<br>               Master_SSL_Key:<br>        Seconds_Behind_Master: 0 Master_SSL_Verify_Server_Cert: No<br>                Last_IO_Errno: 0 Last_IO_Error:<br>               Last_SQL_Errno: 0 Last_SQL_Error:<br>  Replicate_Ignore_Server_Ids:<br>             Master_Server_Id: 100 Master_UUID: c9fba9e2-db3b-11eb-81d4-000c298d8da1<br>             Master_Info_File: mysql.slave_master_info<br>                    SQL_Delay: 0 SQL_Remaining_Delay: NULL<br>      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates<br>           Master_Retry_Count: 86400 Master_Bind:<br>      Last_IO_Error_Timestamp:<br>     Last_SQL_Error_Timestamp:<br>               Master_SSL_Crl:<br>           Master_SSL_Crlpath:<br>           Retrieved_Gtid_Set: c9fba9e2-db3b-11eb-81d4-000c298d8da1:229-519 Executed_Gtid_Set: c9fba9e2-db3b-11eb-81d4-000c298d8da1:1-519 Auto_Position: 1 Replicate_Rewrite_DB:<br>                 Channel_Name:<br>           Master_TLS_Version:<br>       Master_public_key_path:<br>        Get_master_public_key: 0 Network_Namespace: 1 row in set (0.00 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>可以看到，同步正常！</p></blockquote>\n<p>（8）最后，查看master与slave数据是否一致</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>MASTER数据：SELECT * FROM student; | 520 | 00systemd-bootchart |  18 |<br>| 521 | 00systemd-bootchart |  44 |<br>| 522 | 03modsign           |  98 |<br>| 523 | 00systemd-bootchart |  45 |<br>| 524 | 00                  |  90 |<br>| 525 | 03modsign           |  21 |<br>+—–+———————+—–+<br>525 rows in set (0.00 sec)</p>\n<p>SLAVE数据：SELECT * FROM student; | 519 | 0.33.0              |  99 |<br>| 520 | 00systemd-bootchart |  18 |<br>| 521 | 00systemd-bootchart |  44 |<br>| 522 | 03modsign           |  98 |<br>| 523 | 00systemd-bootchart |  45 |<br>| 524 | 00                  |  90 |<br>| 525 | 03modsign           |  21 |<br>+—–+———————+—–+<br>525 rows in set (0.00 sec)</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在我们修过程中插入的数据也已经全部同步。数据完全一致，主从复制修复完成。</p></blockquote>\n","text":"mysql GTID主从复制故障后不停机恢复同步流程 - 塔克拉玛攻城狮 - 博客园GTID实现主从复制数据同步 GTID是一个基于原始mysql服务器生成的一...","permalink":"/post/MIDDLEWARE/mysql GTID主从复制故障后不停机恢复同步流程 - 塔克拉玛攻城狮 - 博客园","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"mysql","slug":"mysql","count":1,"path":"api/categories/mysql.json"},{"name":"MIDDLEWARE","slug":"mysql/MIDDLEWARE","count":1,"path":"api/categories/mysql/MIDDLEWARE.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"assets","slug":"assets","count":1,"path":"api/tags/assets.json"},{"name":"cnblogs","slug":"cnblogs","count":1,"path":"api/tags/cnblogs.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#mysql-GTID%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%95%85%E9%9A%9C%E5%90%8E%E4%B8%8D%E5%81%9C%E6%9C%BA%E6%81%A2%E5%A4%8D%E5%90%8C%E6%AD%A5%E6%B5%81%E7%A8%8B-%E5%A1%94%E5%85%8B%E6%8B%89%E7%8E%9B%E6%94%BB%E5%9F%8E%E7%8B%AE-%E5%8D%9A%E5%AE%A2%E5%9B%AD\"><span class=\"toc-text\">mysql GTID主从复制故障后不停机恢复同步流程 - 塔克拉玛攻城狮 - 博客园</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8Bslave%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">查看slave状态</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"在 Kubernetes 集群上安装 KubeVirt","uid":"5a79b62bd0cc256cbc198b2e3cc42ba4","slug":"OCI/在 Kubernetes 集群上安装 KubeVirt","date":"2024-10-25T15:18:17.000Z","updated":"2025-09-30T03:27:00.439Z","comments":true,"path":"api/articles/OCI/在 Kubernetes 集群上安装 KubeVirt.json","keywords":"XuGuangSheng","cover":"/covers/kubernetes-kubevirt.jpg","text":"在 Kubernetes 集群上安装 KubeVirt安装 KubeVirt 并创建虚拟机可以按照以下步骤进行。 安装 KubeVirt 安装 KubeVirt...","permalink":"/post/OCI/在 Kubernetes 集群上安装 KubeVirt","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"KubeVirt","slug":"KubeVirt","count":1,"path":"api/categories/KubeVirt.json"},{"name":"OCI","slug":"KubeVirt/OCI","count":1,"path":"api/categories/KubeVirt/OCI.json"}],"tags":[{"name":"安装","slug":"安装","count":1,"path":"api/tags/安装.json"},{"name":"virtctl","slug":"virtctl","count":1,"path":"api/tags/virtctl.json"},{"name":"Operator","slug":"Operator","count":1,"path":"api/tags/Operator.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"NFQUEUE机制导致DNS请求5秒超时分析","uid":"1bbad1a585c4bcc2381dfee0a793a3ef","slug":"LINUX/NFQUEUE机制导致DNS请求5秒超时分析","date":"2024-08-12T10:01:18.000Z","updated":"2025-09-30T03:26:34.814Z","comments":true,"path":"api/articles/LINUX/NFQUEUE机制导致DNS请求5秒超时分析.json","keywords":"XuGuangSheng","cover":"/covers/nfqueuedns5.jpg","text":"NFQUEUE机制导致DNS请求5秒超时分析在一台CentOS 7.0服务器(内核版本号:3.10.0-123.el7.x86_64)上安装我们的安全防护程序后...","permalink":"/post/LINUX/NFQUEUE机制导致DNS请求5秒超时分析","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"conntrack","slug":"conntrack","count":1,"path":"api/categories/conntrack.json"},{"name":"LINUX","slug":"conntrack/LINUX","count":1,"path":"api/categories/conntrack/LINUX.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"DNS","slug":"DNS","count":1,"path":"api/tags/DNS.json"},{"name":"BUG","slug":"BUG","count":1,"path":"api/tags/BUG.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}