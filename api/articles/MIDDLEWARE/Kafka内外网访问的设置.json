{"title":"Kafka内外网访问的设置","uid":"f6ebfd744882aafe6959a28651edde47","slug":"MIDDLEWARE/Kafka内外网访问的设置","date":"2023-10-23T19:00:55.000Z","updated":"2025-09-30T03:26:47.932Z","comments":true,"path":"api/articles/MIDDLEWARE/Kafka内外网访问的设置.json","keywords":"XuGuangSheng","cover":"/covers/kafka.jpg","content":"<h1 id=\"Kafka内外网访问的设置\"><a href=\"#Kafka内外网访问的设置\" class=\"headerlink\" title=\"Kafka内外网访问的设置\"></a>Kafka内外网访问的设置</h1><h2 id=\"kafka的两个配置listeners和advertised-listeners\"><a href=\"#kafka的两个配置listeners和advertised-listeners\" class=\"headerlink\" title=\"kafka的两个配置listeners和advertised.listeners\"></a>kafka的两个配置listeners和advertised.listeners</h2><h3 id=\"listeners\"><a href=\"#listeners\" class=\"headerlink\" title=\"listeners\"></a>listeners</h3><p>kafka监听的网卡的ip，假设你机器上有两张网卡，内网<code>192.168.0.213</code>和外网<code>101.89.163.1</code> 如下配置</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listeners=<span class=\"variable constant_\">PLAINTEXT</span><span class=\"symbol\">://</span><span class=\"number\">192.168</span>.<span class=\"number\">0.213</span><span class=\"symbol\">:</span><span class=\"number\">9092</span></span><br></pre></td></tr></table></figure>\n<p>那么kafka只监听内网网卡，即只接收内网网卡的数据，如果你不能把外网网卡流量转发到内网网卡（为什么要强调这一点，下面说），那么kafka就接收不到外网网卡数据。如果配置成外网ip同理。当然你可以配置成0.0.0.0，监听所有网卡。</p>\n<h3 id=\"advertised-listeners\"><a href=\"#advertised-listeners\" class=\"headerlink\" title=\"advertised.listeners\"></a>advertised.listeners</h3><p>我们观察kafka的配置文件<code>server.properties</code>，会发现里面记录了zookeeper集群的各个节点的访问地址，但是并没有记录kafka兄弟节点的地址。kafka节点启动后，会向zookeeper注册自己，同时从zookeeper中获取兄弟节点的地址，以便与兄弟节点通信。<br>同样，我们使用客户端连接kafka后，kafka返回给客户端的是集群各节点的访问地址，这个地址也是上面说的从zookeeper中获得的地址。<br>这个地址哪里来，就是kafka节点向zookeeper注册时提供的<code>advertised.listeners</code>。如果没有，就会使用<code>listeners</code>。</p>\n<h2 id=\"三种情景，搭配使用这两个配置\"><a href=\"#三种情景，搭配使用这两个配置\" class=\"headerlink\" title=\"三种情景，搭配使用这两个配置\"></a>三种情景，搭配使用这两个配置</h2><h2 id=\"只需要内网访问kafka\"><a href=\"#只需要内网访问kafka\" class=\"headerlink\" title=\"只需要内网访问kafka\"></a>只需要内网访问kafka</h2><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listeners=<span class=\"variable constant_\">PLAINTEXT</span><span class=\"symbol\">://</span><span class=\"number\">192.168</span>.<span class=\"number\">0.213</span><span class=\"symbol\">:</span><span class=\"number\">9092</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"只需要内网访问kafka-1\"><a href=\"#只需要内网访问kafka-1\" class=\"headerlink\" title=\"只需要内网访问kafka\"></a>只需要内网访问kafka</h2><h2 id=\"你肯定想到了最简单的一个方法，listeners使用外网ip需要外网访问\"><a href=\"#你肯定想到了最简单的一个方法，listeners使用外网ip需要外网访问\" class=\"headerlink\" title=\"你肯定想到了最简单的一个方法，listeners使用外网ip需要外网访问\"></a>你肯定想到了最简单的一个方法，<code>listeners</code>使用外网ip<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listeners=<span class=\"variable constant_\">PLAINTEXT</span><span class=\"symbol\">://</span><span class=\"number\">101.89</span>.<span class=\"number\">163.1</span><span class=\"symbol\">:</span><span class=\"number\">9092</span></span><br></pre></td></tr></table></figure><br>需要外网访问</h2><p>如果宿主机有外网网卡，这么配当然没问题。如果没有（ifconfig看不到外网ip的网卡，基本上就不存在这个外网网卡），很可能和我使用的的宿主机一样是通过NAT映射或者啥办法搞出来的外网ip，此时kafka无法监听这个外网ip（因为不存在，启动就会报错）。<br>这时候就是<code>advertised.listeners</code>真正发挥作用的时候了。使用如下配置：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listeners=<span class=\"variable constant_\">PLAINTEXT</span><span class=\"symbol\">://</span><span class=\"number\">192.168</span>.<span class=\"number\">0.213</span><span class=\"symbol\">:</span><span class=\"number\">9092</span></span><br><span class=\"line\">advertised.listeners=<span class=\"variable constant_\">PLAINTEXT</span><span class=\"symbol\">://</span><span class=\"number\">101.89</span>.<span class=\"number\">163.1</span><span class=\"symbol\">:</span><span class=\"number\">9092</span></span><br></pre></td></tr></table></figure>\n<p>此时一个完整的kafka客户端访问服务端的流程：</p>\n<ul>\n<li>客户端访问101.89.163.1:9092，被kafka宿主机所在环境映射到内网192.168.0.213:9092，访问到了kafka节点，请求获得kafka服务端的访问地址</li>\n<li>kafka从zookeeper拿到自己和其他兄弟节点通过advertised.listeners注册到zookeeper的101.89.163.1:9092等外网地址，作为kafka的服务端访问地址返回给客户端</li>\n<li>客户端拿这些地址访问kafka集群，被kafka宿主机所在环境映射到各kafka节点的内网ip，访问到了kafka服务端……完美循环</li>\n</ul>\n<p>你可能会问已经配置了访问地址，为什么还要在第一次访问的时候请求获得kafka的访问地址。因为如果是kafka集群，你可以选择只给客户端配置一个kafka节点的地址（这样是不推荐的），但是客户端必须要访问集群中的每一个节点，所以必须通过这个节点获得集群中每一个节点的访问地址。</p>\n<p>如果不配置advertised.listeners&#x3D;PLAINTEXT:&#x2F;&#x2F;101.89.163.1:9092，你会发现虽然你给kafka客户端配置的访问地址是101.89.163.1:9092，但是kafka客户端访问时报错，报错原因是Connection to node -1[192.168.0.213:9092] could not be established. Broker may not be available.。这就是因为不配置advertised.listeners则advertised.listeners默认使用listeners配置的地址，客户端拿到的就是listeners配置的内网地址</p>\n<h2 id=\"内外网分流\"><a href=\"#内外网分流\" class=\"headerlink\" title=\"内外网分流\"></a>内外网分流</h2><p>上面说的有外网ip的情况，直接配置外网ip有没有问题呢？<br>如果既要内网访问，又要外网访问，本来可以走内网的流量都走外网网卡，显然不合适；而且有的环境可能被配置成这些kafka宿主机是没有外网访问权限的，即虽然他可以访问自己的外网ip，但是访问不了兄弟节点的外网ip。这时候就要配置内外网。<br>配置1：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listener.security.protocol.map=<span class=\"variable constant_\">INTERNAL</span><span class=\"symbol\">:PLAINTEXT</span>,<span class=\"variable constant_\">EXTERNAL</span><span class=\"symbol\">:PLAINTEXT</span></span><br><span class=\"line\">listeners=<span class=\"variable constant_\">INTERNAL</span><span class=\"symbol\">://</span><span class=\"number\">192.168</span>.<span class=\"number\">0.213</span><span class=\"symbol\">:</span><span class=\"number\">9092</span>,<span class=\"variable constant_\">EXTERNAL</span><span class=\"symbol\">://</span><span class=\"number\">192.168</span>.<span class=\"number\">0.213</span><span class=\"symbol\">:</span><span class=\"number\">19092</span></span><br><span class=\"line\">advertised.listeners=<span class=\"variable constant_\">INTERNAL</span><span class=\"symbol\">://</span><span class=\"number\">192.168</span>.<span class=\"number\">0.213</span><span class=\"symbol\">:</span><span class=\"number\">9092</span>,<span class=\"variable constant_\">EXTERNAL</span><span class=\"symbol\">://</span><span class=\"number\">101.89</span>.<span class=\"number\">163.9</span><span class=\"symbol\">:</span><span class=\"number\">19092</span></span><br><span class=\"line\">inter.broker.listener.name=<span class=\"variable constant_\">INTERNAL</span></span><br></pre></td></tr></table></figure>\n<p>配置2：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listener.security.protocol.map=<span class=\"variable constant_\">INTERNAL</span><span class=\"symbol\">:PLAINTEXT</span>,<span class=\"variable constant_\">EXTERNAL</span><span class=\"symbol\">:PLAINTEXT</span></span><br><span class=\"line\">listeners=<span class=\"variable constant_\">INTERNAL</span><span class=\"symbol\">://</span><span class=\"number\">192.168</span>.<span class=\"number\">0.213</span><span class=\"symbol\">:</span><span class=\"number\">9092</span>,<span class=\"variable constant_\">EXTERNAL</span><span class=\"symbol\">://</span><span class=\"number\">101.89</span>.<span class=\"number\">163.9</span><span class=\"symbol\">:</span><span class=\"number\">19092</span></span><br><span class=\"line\">advertised.listeners=<span class=\"variable constant_\">INTERNAL</span><span class=\"symbol\">://</span><span class=\"number\">192.168</span>.<span class=\"number\">0.213</span><span class=\"symbol\">:</span><span class=\"number\">9092</span>,<span class=\"variable constant_\">EXTERNAL</span><span class=\"symbol\">://</span><span class=\"number\">101.89</span>.<span class=\"number\">163.9</span><span class=\"symbol\">:</span><span class=\"number\">19092</span></span><br><span class=\"line\">inter.broker.listener.name=<span class=\"variable constant_\">INTERNAL</span></span><br></pre></td></tr></table></figure>\n<p>注意这两的区别是<code>listeners</code>的<code>EXTERNAL</code>使用的ip不一样，一个使用内网ip，一个使用外网ip。</p>\n<ul>\n<li>如果你的kafka宿主机有外网网卡，只能用外网ip，若使用配置1，kafka通过<code>listeners</code>监听的两个端口都是内网网卡的数据，无法接收到外网网卡数据；</li>\n<li>如果你的kafka宿主机外网ip是映射来的，只能使用内网ip，原因也是上面说过的，不存在外网网卡，kafka启动监听就会报错，而使用内网ip有环境配置好的转发，可以接收到外网ip的数据。</li>\n</ul>\n","text":"Kafka内外网访问的设置kafka的两个配置listeners和advertised.listenerslistenerskafka监听的网卡的ip，假设你机...","permalink":"/post/MIDDLEWARE/Kafka内外网访问的设置","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"kafka","slug":"kafka","count":1,"path":"api/categories/kafka.json"},{"name":"MIDDLEWARE","slug":"kafka/MIDDLEWARE","count":1,"path":"api/categories/kafka/MIDDLEWARE.json"}],"tags":[{"name":"listeners","slug":"listeners","count":1,"path":"api/tags/listeners.json"},{"name":"advertised","slug":"advertised","count":1,"path":"api/tags/advertised.json"},{"name":"zookeeper","slug":"zookeeper","count":2,"path":"api/tags/zookeeper.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Kafka%E5%86%85%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E7%9A%84%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">Kafka内外网访问的设置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#kafka%E7%9A%84%E4%B8%A4%E4%B8%AA%E9%85%8D%E7%BD%AElisteners%E5%92%8Cadvertised-listeners\"><span class=\"toc-text\">kafka的两个配置listeners和advertised.listeners</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#listeners\"><span class=\"toc-text\">listeners</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#advertised-listeners\"><span class=\"toc-text\">advertised.listeners</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E7%A7%8D%E6%83%85%E6%99%AF%EF%BC%8C%E6%90%AD%E9%85%8D%E4%BD%BF%E7%94%A8%E8%BF%99%E4%B8%A4%E4%B8%AA%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">三种情景，搭配使用这两个配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%AA%E9%9C%80%E8%A6%81%E5%86%85%E7%BD%91%E8%AE%BF%E9%97%AEkafka\"><span class=\"toc-text\">只需要内网访问kafka</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%AA%E9%9C%80%E8%A6%81%E5%86%85%E7%BD%91%E8%AE%BF%E9%97%AEkafka-1\"><span class=\"toc-text\">只需要内网访问kafka</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%A0%E8%82%AF%E5%AE%9A%E6%83%B3%E5%88%B0%E4%BA%86%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%EF%BC%8Clisteners%E4%BD%BF%E7%94%A8%E5%A4%96%E7%BD%91ip%E9%9C%80%E8%A6%81%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE\"><span class=\"toc-text\">你肯定想到了最简单的一个方法，listeners使用外网ip1listeners&#x3D;PLAINTEXT:&#x2F;&#x2F;101.89.163.1:9092需要外网访问</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%85%E5%A4%96%E7%BD%91%E5%88%86%E6%B5%81\"><span class=\"toc-text\">内外网分流</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"C2 CompilerThread9 长时间占用CPU解决方案","uid":"ad2282a09eaef1269a01ab0f55818331","slug":"JAVA/C2 CompilerThread9 长时间占用CPU解决方案","date":"2023-11-02T18:06:45.000Z","updated":"2025-09-30T03:26:07.848Z","comments":true,"path":"api/articles/JAVA/C2 CompilerThread9 长时间占用CPU解决方案.json","keywords":"XuGuangSheng","cover":"/covers/c2-compilerthread9-cpu.jpg","text":"一、描述：异常线程的堆栈如下：1234567`\"C2 CompilerThread9\" #48 daemon prio=9 os_prio=0 tid=0x00...","permalink":"/post/JAVA/C2 CompilerThread9 长时间占用CPU解决方案","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"JIT","slug":"JIT","count":2,"path":"api/categories/JIT.json"},{"name":"JAVA","slug":"JIT/JAVA","count":2,"path":"api/categories/JIT/JAVA.json"}],"tags":[{"name":"编译","slug":"编译","count":1,"path":"api/tags/编译.json"},{"name":"编译器","slug":"编译器","count":1,"path":"api/tags/编译器.json"},{"name":"JVM","slug":"JVM","count":6,"path":"api/tags/JVM.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"向量数据库","uid":"98948a6b47eff1c83e919c4c7211acdc","slug":"MIDDLEWARE/向量数据库","date":"2023-08-21T14:51:31.000Z","updated":"2025-09-30T03:26:54.263Z","comments":true,"path":"api/articles/MIDDLEWARE/向量数据库.json","keywords":"XuGuangSheng","cover":"/covers/f9f851e574d3.jpg","text":"向量数据库也许你最近可能听过这样的新闻，某向量数据库的初创公司刚写好 PPT，就获得了几千万的投资，某公司的开源的向量数据库因其代码的简陋而登上了 Hacker...","permalink":"/post/MIDDLEWARE/向量数据库","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"https","slug":"https","count":12,"path":"api/categories/https.json"},{"name":"MIDDLEWARE","slug":"https/MIDDLEWARE","count":2,"path":"api/categories/https/MIDDLEWARE.json"}],"tags":[{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"www","slug":"www","count":8,"path":"api/tags/www.json"},{"name":"github","slug":"github","count":1,"path":"api/tags/github.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}