{"title":"如何优雅的升级 Nginx（热部署）版本","uid":"ef5ca056fa60b2d5cee6602c81aa277f","slug":"MIDDLEWARE/如何优雅的升级 Nginx（热部署）版本","date":"2024-06-17T19:42:10.000Z","updated":"2025-09-30T03:26:54.289Z","comments":true,"path":"api/articles/MIDDLEWARE/如何优雅的升级 Nginx（热部署）版本.json","keywords":"XuGuangSheng","cover":"/covers/nginx.jpg","content":"<h1 id=\"如何优雅的升级-Nginx（热部署）版本\"><a href=\"#如何优雅的升级-Nginx（热部署）版本\" class=\"headerlink\" title=\"如何优雅的升级 Nginx（热部署）版本\"></a>如何优雅的升级 Nginx（热部署）版本</h1><h3 id=\"1-升级\"><a href=\"#1-升级\" class=\"headerlink\" title=\"1. 升级\"></a><a href=\"#1-%E5%8D%87%E7%BA%A7\" title=\"1. 升级\"></a>1. 升级</h3><h4 id=\"1-1-下载、编译新版本的-Nginx\"><a href=\"#1-1-下载、编译新版本的-Nginx\" class=\"headerlink\" title=\"1.1. 下载、编译新版本的 Nginx\"></a><a href=\"#1-1-%E4%B8%8B%E8%BD%BD%E3%80%81%E7%BC%96%E8%AF%91%E6%96%B0%E7%89%88%E6%9C%AC%E7%9A%84-Nginx\" title=\"1.1. 下载、编译新版本的 Nginx\"></a>1.1. 下载、编译新版本的 Nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ wget https://nginx.org/download/nginx-1.15.6.tar.gz</span><br><span class=\"line\">➜  ~ tar zxvf nginx-1.15.6.tar.gz</span><br><span class=\"line\">➜  ~ <span class=\"built_in\">cd</span> nginx-1.15.6</span><br><span class=\"line\">➜  ~ ./configure --prefix=/usr/local/nginx</span><br><span class=\"line\">➜  ~ make</span><br></pre></td></tr></table></figure>\n\n<p>备份原 Nginx 二进制文件，并用新版本替换</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ <span class=\"built_in\">cp</span> /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.old</span><br><span class=\"line\">➜  ~ \\<span class=\"built_in\">cp</span> -rf objs/nginx /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-2-切换-Nginx-的新老进程\"><a href=\"#1-2-切换-Nginx-的新老进程\" class=\"headerlink\" title=\"1.2. 切换 Nginx 的新老进程\"></a><a href=\"#1-2-%E5%88%87%E6%8D%A2-Nginx-%E7%9A%84%E6%96%B0%E8%80%81%E8%BF%9B%E7%A8%8B\" title=\"1.2. 切换 Nginx 的新老进程\"></a>1.2. 切换 Nginx 的新老进程</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ <span class=\"built_in\">cd</span> /usr/local/nginx/sbin/</span><br><span class=\"line\">➜  ~ ps -ef | grep nginx</span><br><span class=\"line\">root      6680     1  0 12:17 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">nobody    6681  6680  0 12:17 ?        00:00:00 nginx: worker process</span><br><span class=\"line\">root     31579  3601  0 12:28 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure>\n\n<p>向正在运行的老版本的 <code>master</code> 进程发送热部署信号</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ <span class=\"built_in\">kill</span> -USR2 6680</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">➜  ~ ps -ef | grep nginx</span><br><span class=\"line\">root      6680     1  0 12:17 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">nobody    6681  6680  0 12:17 ?        00:00:00 nginx: worker process</span><br><span class=\"line\">root     31581  6680  0 12:29 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">nobody   31582 31581  0 12:29 ?        00:00:00 nginx: worker process</span><br><span class=\"line\">root     31584  3601  0 12:29 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure>\n\n<p>向老版本的 <code>master</code> 进程发送信号，让其优雅关闭所有 <code>worker</code> 进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ <span class=\"built_in\">kill</span> -WINCH 6680</span><br><span class=\"line\">➜  ~ ps -ef | grep nginx</span><br><span class=\"line\">root      6680     1  0 12:17 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">root     31581  6680  0 12:29 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">nobody   31582 31581  0 12:29 ?        00:00:00 nginx: worker process</span><br><span class=\"line\">root     31587  3601  0 12:31 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>⚠️ 注意</strong>：老版本的 <code>master</code> 进程不会自动退出，以方便执行版本回退操作。当新版本稳定运行后，再发送信号退出老版本的 <code>master</code> 进程。</p></blockquote>\n<h3 id=\"2-版本回退\"><a href=\"#2-版本回退\" class=\"headerlink\" title=\"2. 版本回退\"></a><a href=\"#2-%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80\" title=\"2. 版本回退\"></a>2. 版本回退</h3><ol>\n<li><p>向老版本的 Nginx 进程发送信号，重启其 <code>worker</code> 进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ <span class=\"built_in\">kill</span> -HUP 6680</span><br><span class=\"line\">➜  ~ ps -ef | grep nginx</span><br><span class=\"line\">root      6680     1  0 12:17 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">root     31581  6680  0 12:29 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">nobody   31582 31581  0 12:29 ?        00:00:00 nginx: worker process</span><br><span class=\"line\">nobody   31588  6680  0 12:35 ?        00:00:00 nginx: worker process</span><br><span class=\"line\">root     31590  3601  0 12:35 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure>\n\n</li>\n<li><p>等老版本的 Nginx <code>worker</code> 进程启动后，向新版本的 Nginx <code>master</code> 进程发送信号，让其退出打开的所有 <code>worker</code> 进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ <span class=\"built_in\">kill</span> -WINCH 31581</span><br><span class=\"line\">➜  ~ ps -ef | grep nginx</span><br><span class=\"line\">root      6680     1  0 12:17 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">root     31581  6680  0 12:29 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">nobody   31588  6680  0 12:35 ?        00:00:00 nginx: worker process</span><br><span class=\"line\">root     31590  3601  0 12:35 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>最后退出新版本的 <code>master</code> 进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ <span class=\"built_in\">kill</span> -QUIT 31581</span><br><span class=\"line\">➜  ~ ps -ef | grep nginx</span><br><span class=\"line\">root      6680     1  0 12:17 ?        00:00:00 nginx: master process ./nginx</span><br><span class=\"line\">nobody   31588  6680  0 12:35 ?        00:00:00 nginx: worker process</span><br><span class=\"line\">root     31592  3601  0 12:36 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure></li>\n</ol>\n","text":"如何优雅的升级 Nginx（热部署）版本1. 升级1.1. 下载、编译新版本的 Nginx12345➜ ~ wget https://nginx.org/dow...","permalink":"/post/MIDDLEWARE/如何优雅的升级 Nginx（热部署）版本","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":1,"path":"api/categories/Nginx.json"},{"name":"MIDDLEWARE","slug":"Nginx/MIDDLEWARE","count":1,"path":"api/categories/Nginx/MIDDLEWARE.json"}],"tags":[{"name":"master","slug":"master","count":3,"path":"api/tags/master.json"},{"name":"进程","slug":"进程","count":1,"path":"api/tags/进程.json"},{"name":"worker","slug":"worker","count":1,"path":"api/tags/worker.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%8D%87%E7%BA%A7-Nginx%EF%BC%88%E7%83%AD%E9%83%A8%E7%BD%B2%EF%BC%89%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">如何优雅的升级 Nginx（热部署）版本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%8D%87%E7%BA%A7\"><span class=\"toc-text\">1. 升级</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-%E4%B8%8B%E8%BD%BD%E3%80%81%E7%BC%96%E8%AF%91%E6%96%B0%E7%89%88%E6%9C%AC%E7%9A%84-Nginx\"><span class=\"toc-text\">1.1. 下载、编译新版本的 Nginx</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-%E5%88%87%E6%8D%A2-Nginx-%E7%9A%84%E6%96%B0%E8%80%81%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">1.2. 切换 Nginx 的新老进程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80\"><span class=\"toc-text\">2. 版本回退</span></a></li></ol></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Improving the performance of high-cardinality terms aggregations in Elasticsearch","uid":"920d4ca514647ffb02b7df5ef178364f","slug":"MIDDLEWARE/Improving the performance of high-cardinality terms aggregations in Elasticsearch","date":"2024-06-17T19:44:51.000Z","updated":"2025-09-30T03:26:47.460Z","comments":true,"path":"api/articles/MIDDLEWARE/Improving the performance of high-cardinality terms aggregations in Elasticsearch.json","keywords":"XuGuangSheng","cover":"/covers/improving-the-performance-of-high-cardinality-terms-aggregations-in-elasticsearc.jpg","text":"Improving the performance of high-cardinality terms aggregations in Elasticsearc...","permalink":"/post/MIDDLEWARE/Improving the performance of high-cardinality terms aggregations in Elasticsearch","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"the","slug":"the","count":2,"path":"api/categories/the.json"},{"name":"MIDDLEWARE","slug":"the/MIDDLEWARE","count":1,"path":"api/categories/the/MIDDLEWARE.json"}],"tags":[{"name":"ordinals","slug":"ordinals","count":1,"path":"api/tags/ordinals.json"},{"name":"global","slug":"global","count":1,"path":"api/tags/global.json"},{"name":"terms","slug":"terms","count":1,"path":"api/tags/terms.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"平滑重启原理-USR1 USR2信号量使用","uid":"6bea119b93beb5f935a855810bf39c07","slug":"LINUX/平滑重启原理-USR1 USR2信号量使用","date":"2024-06-17T19:32:18.000Z","updated":"2025-09-30T03:26:43.172Z","comments":true,"path":"api/articles/LINUX/平滑重启原理-USR1 USR2信号量使用.json","keywords":"XuGuangSheng","cover":"/covers/usr1-usr2.jpg","text":"平滑重启原理-USR1 USR2信号量使用在POSIX兼容的平台上，SIGUSR1和SIGUSR2是发送给一个进程的信号，它表示了用户定义的情况。nginx常用...","permalink":"/post/LINUX/平滑重启原理-USR1 USR2信号量使用","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"nginx","slug":"nginx","count":3,"path":"api/categories/nginx.json"},{"name":"LINUX","slug":"nginx/LINUX","count":1,"path":"api/categories/nginx/LINUX.json"}],"tags":[{"name":"master","slug":"master","count":3,"path":"api/tags/master.json"},{"name":"server","slug":"server","count":3,"path":"api/tags/server.json"},{"name":"pid","slug":"pid","count":1,"path":"api/tags/pid.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}