{"title":"nginx 反向代理和路径重写","uid":"77b291e312b6296807210b6244b44cc2","slug":"MIDDLEWARE/nginx 反向代理和路径重写","date":"2022-07-14T09:31:31.000Z","updated":"2025-09-30T03:26:53.504Z","comments":true,"path":"api/articles/MIDDLEWARE/nginx 反向代理和路径重写.json","keywords":"XuGuangSheng","cover":"/covers/nginx.jpg","content":"<h1 id=\"nginx-反向代理和路径重写\"><a href=\"#nginx-反向代理和路径重写\" class=\"headerlink\" title=\"nginx 反向代理和路径重写\"></a>nginx 反向代理和路径重写</h1><p>nginx 反向代理路径问题<br><code>http://abc.com:8080</code> 写法和 <code>http://abc.com:8080/</code> 写法的区别如下:</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">location</span> /NginxTest/ &#123;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_pass</span>  http://abc.com:8080;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">location</span> /NginxTest/ &#123;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_pass</span>  http://abc.com:8080/;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上面两种配置，区别只在于 proxy_pass 转发的路径后是否带 “&#x2F;”</p>\n<h4 id=\"针对情况-1\"><a href=\"#针对情况-1\" class=\"headerlink\" title=\"针对情况 1:\"></a>针对情况 1:</h4><ul>\n<li>（带参数）访问 <code>http://abc.com:8080/NginxTest/servlet/MyServlet?name=123333333</code> ，则被 nginx 代理后，请求路径便会访问 <code>http://abc.com:8080/NginxTest/servlet/MyServlet?name=123333333</code></li>\n<li>（不带参）访问 <code>http://abc.com/NginxTest/servlet/MyServlet</code> ，则被 nginx 代理后，请求路径便会访问 <code>http://abc.com:8080/NginxTest/servlet/MyServlet</code></li>\n</ul>\n<h4 id=\"针对情况-2：\"><a href=\"#针对情况-2：\" class=\"headerlink\" title=\"针对情况 2：\"></a>针对情况 2：</h4><ul>\n<li>访问 <code>http://abc.com:8080/NginxTest/test.jsp</code>，则被 nginx 代理后，请求路径会变为 <code>http://abc.com:8080/test.jsp</code> ，直接访问 server 的根资源。</li>\n<li>访问 <code>http://abc.com:8080/NginxTest/NginxTest/NginxTest/servlet/MyServlet</code> ，被 nginx 代理后，请求路径才会访问 <code>http://abc.com:8080/NginxTest/servlet/MyServlet</code></li>\n</ul>\n<p>注意：上面两种访问路径的差别。修改配置后重启 nginx 代理就成功了</p>\n<h3 id=\"Nginx-地址重写\"><a href=\"#Nginx-地址重写\" class=\"headerlink\" title=\"Nginx 地址重写\"></a>Nginx 地址重写</h3><h4 id=\"Rewrite-的语法：\"><a href=\"#Rewrite-的语法：\" class=\"headerlink\" title=\"Rewrite 的语法：\"></a>Rewrite 的语法：</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">rewrite</span> regex URL [flag];</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>rewrite 是关键字，regex 是正则表达式，URL 是要替代的内容，[flag]是标记位的意思，它有以下几种值：</strong> </p>\n<ul>\n<li>last: 相当于 Apache 的[L]标记，表示完成 rewrite</li>\n<li>break: 停止执行当前虚拟主机的后续 rewrite 指令集</li>\n<li>redirect: 返回 302 临时重定向，地址栏会显示跳转后的地址</li>\n<li>permanent: 返回 301 永久重定向，地址栏会显示跳转后的地址</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">location</span> /NginxTest/ &#123;</span><br><span class=\"line\">    <span class=\"attribute\">rewrite</span> <span class=\"regexp\"> ^/NginxTest/(.*)$</span>  /<span class=\"variable\">$1</span>  <span class=\"literal\">break</span>;</span><br><span class=\"line\">    <span class=\"attribute\">proxy_pass</span>  http://abc.com:8080;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>^~&#x2F;NginxTest&#x2F; 是一个匹配规则，用于拦截请求，匹配任何以 &#x2F;NginxTest&#x2F; 开头的地址，匹配符合以后就停止往下搜索正则；</li>\n<li>rewrite ^&#x2F;NginxTest&#x2F;(.*)$ &#x2F;$1 break；代表重写拦截进来的请求，并且只能对域名后边的除去传递的参数外的字符串起作用。例如：<code>http://abc.com:8080/NginxTest/NginxTest/servlet/MyServlet?name=lovleovlove</code> 重写，只对 &#x2F;NginxTest&#x2F;NginxTest&#x2F;servlet&#x2F;MyServlet 重写。</li>\n</ol>\n<ul>\n<li>访问地址：<code>http://abc.com:8080/NginxTest/NginxTest/servlet/MyServlet?name=lovleovlove</code> ， 实际访问的地址（重写地址）为 <code>http://abc.com:8080/NginxTest/servlet/MyServlet?name=lovleovlove</code></li>\n<li>访问地址：<code>http://abc.com:8080/NginxTest/NginxTest/servlet/MyServlet</code> ，实际访问的地址（重写地址）为 <code>http://abc.com:8080/NginxTest/servlet/MyServlet</code></li>\n</ul>\n<ol start=\"3\">\n<li>rewrite 后面的参数是一个简单的正则 ^&#x2F;NginxTest&#x2F;(.*)$ &#x2F;$1 ,$1 代表正则中的第一个 (),$2 代表第二个() 的值, 以此类推。break 代表匹配一个之后停止匹配。</li>\n</ol>\n<h3 id=\"配置样例\"><a href=\"#配置样例\" class=\"headerlink\" title=\"配置样例\"></a>配置样例</h3><ul>\n<li>全局配置</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">include</span>       /etc/nginx/mime.types;</span><br><span class=\"line\">    <span class=\"attribute\">default_type</span>  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">log_format</span>  main  <span class=\"string\">&#x27;<span class=\"variable\">$remote_addr</span> - <span class=\"variable\">$remote_user</span> [<span class=\"variable\">$time_local</span>] &quot;<span class=\"variable\">$request</span>&quot; &#x27;</span></span><br><span class=\"line\">                      <span class=\"string\">&#x27;<span class=\"variable\">$status</span> <span class=\"variable\">$body_bytes_sent</span> &quot;<span class=\"variable\">$http_referer</span>&quot; &#x27;</span></span><br><span class=\"line\">                      <span class=\"string\">&#x27;&quot;<span class=\"variable\">$http_user_agent</span>&quot; &quot;<span class=\"variable\">$http_x_forwarded_for</span>&quot;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">sendfile</span>        <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">tcp_nopush</span>      <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">tcp_nodelay</span>     <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">keepalive_timeout</span>  <span class=\"number\">65</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">gzip</span>  <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_vary</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_proxied</span> any;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_comp_level</span> <span class=\"number\">6</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_buffers</span> <span class=\"number\">16</span> <span class=\"number\">8k</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_http_version</span> <span class=\"number\">1</span>.<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">gzip_types</span> text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">include</span> /etc/nginx/conf.d/<span class=\"regexp\">*.conf</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>http 请求的配置样例</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> gateway_upstream &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8760</span> fail_timeout=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"section\">upstream</span> jenkins_upstream &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8080</span> fail_timeout=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span>  localhost;    </span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/html;</span><br><span class=\"line\">        <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">error_page</span>   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /50x.html;</span><br><span class=\"line\">    <span class=\"section\">location</span> = /50x.html &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"section\">location</span> /jenkins &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span>   http://jenkins_upstream/jenkins;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span><span class=\"regexp\"> ^~</span> /api/ &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span>   http://gateway_upstream/;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>https 请求配置样例</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span>      <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span>    [::]:<span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span>  abeille.top www.abeille.top;  </span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">return</span> <span class=\"number\">301</span> https://<span class=\"variable\">$host</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">upstream</span> jenkins_upstream &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8080</span> fail_timeout=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">upstream</span> gateway_upstream &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8760</span> fail_timeout=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span>         <span class=\"number\">443</span> default ssl http2;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span>         [::]:<span class=\"number\">443</span> default ssl http2;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span>    abeille.top www.abeille.top;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>     302xxxw.abeille.top.pem;   </span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span> 302xxxw.abeille.top.key;   </span><br><span class=\"line\">    <span class=\"attribute\">ssl_session_timeout</span> <span class=\"number\">5m</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">ssl_session_cache</span>    shared:MozSSL:<span class=\"number\">10m</span>;  </span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1.<span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">add_header</span> Strict-Transport-Security <span class=\"string\">&quot;max-age=63072000&quot;</span> always;    </span><br><span class=\"line\">    <span class=\"attribute\">add_header</span> X-Frame-Options DENY;                    </span><br><span class=\"line\">    <span class=\"attribute\">add_header</span> X-Content-Type-Options nosniff;                 </span><br><span class=\"line\">    <span class=\"attribute\">add_header</span> X-Xss-Protection <span class=\"number\">1</span>;                        </span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"attribute\">ssl_stapling</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_stapling_verify</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">error_page</span>   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /50x.html;    </span><br><span class=\"line\">    <span class=\"section\">location</span> = /50x.html &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span><span class=\"regexp\"> ^~</span> /jenkins &#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span>              http://jenkins_upstream/jenkins;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span><span class=\"regexp\"> ^~</span> /api/ &#123;              </span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span>       http://gateway_upstream/;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;        </span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span>   /usr/share/nginx/dist;</span><br><span class=\"line\">        <span class=\"attribute\">index</span>  index.html index.htm;</span><br><span class=\"line\">        <span class=\"attribute\">try_files</span> <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.html <span class=\"literal\">last</span>;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","text":"nginx 反向代理和路径重写nginx 反向代理路径问题http://abc.com:8080 写法和 http://abc.com:8080/ 写法的区别如...","permalink":"/post/MIDDLEWARE/nginx 反向代理和路径重写","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"NginxTest","slug":"NginxTest","count":1,"path":"api/categories/NginxTest.json"},{"name":"MIDDLEWARE","slug":"NginxTest/MIDDLEWARE","count":1,"path":"api/categories/NginxTest/MIDDLEWARE.json"}],"tags":[{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"http","slug":"http","count":6,"path":"api/tags/http.json"},{"name":"abc","slug":"abc","count":1,"path":"api/tags/abc.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%92%8C%E8%B7%AF%E5%BE%84%E9%87%8D%E5%86%99\"><span class=\"toc-text\">nginx 反向代理和路径重写</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%92%88%E5%AF%B9%E6%83%85%E5%86%B5-1\"><span class=\"toc-text\">针对情况 1:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%92%88%E5%AF%B9%E6%83%85%E5%86%B5-2%EF%BC%9A\"><span class=\"toc-text\">针对情况 2：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Nginx-%E5%9C%B0%E5%9D%80%E9%87%8D%E5%86%99\"><span class=\"toc-text\">Nginx 地址重写</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Rewrite-%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">Rewrite 的语法：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E6%A0%B7%E4%BE%8B\"><span class=\"toc-text\">配置样例</span></a></li></ol></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"使用线程池时候当程序结束时候记得调用shutdown关闭线程池","uid":"c154332e2066fa4ee3ef3036412a15b5","slug":"JAVA/使用线程池时候当程序结束时候记得调用shutdown关闭线程池","date":"2022-07-26T10:03:32.000Z","updated":"2025-09-30T03:26:25.895Z","comments":true,"path":"api/articles/JAVA/使用线程池时候当程序结束时候记得调用shutdown关闭线程池.json","keywords":"XuGuangSheng","cover":"/covers/shutdown.jpg","text":"使用线程池时候当程序结束时候记得调用shutdown关闭线程池使用线程池时候当程序结束时候记得调用 shutdown 关闭线程池日常开发中为了便于线程的有效复用...","permalink":"/post/JAVA/使用线程池时候当程序结束时候记得调用shutdown关闭线程池","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"shutdown","slug":"shutdown","count":1,"path":"api/categories/shutdown.json"},{"name":"JAVA","slug":"shutdown/JAVA","count":1,"path":"api/categories/shutdown/JAVA.json"}],"tags":[{"name":"JVM","slug":"JVM","count":6,"path":"api/tags/JVM.json"},{"name":"使用线程池时候当程序结束时候记得调用","slug":"使用线程池时候当程序结束时候记得调用","count":1,"path":"api/tags/使用线程池时候当程序结束时候记得调用.json"},{"name":"关闭线程池","slug":"关闭线程池","count":1,"path":"api/tags/关闭线程池.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"在Spring Boot启动时执行代码的几种方法","uid":"61ee30c1a55828f654b62f168fb5fa1d","slug":"JAVA/在Spring Boot启动时执行代码的几种方法","date":"2022-07-11T15:58:46.000Z","updated":"2025-09-30T03:26:25.922Z","comments":true,"path":"api/articles/JAVA/在Spring Boot启动时执行代码的几种方法.json","keywords":"XuGuangSheng","cover":"/covers/spring-boot.jpg","text":"在Spring Boot启动时执行代码的几种方法前言有时候我们需要在应用启动时执行一些代码片段，这些片段可能是仅仅是为了记录 log，也可能是在启动时检查与安装...","permalink":"/post/JAVA/在Spring Boot启动时执行代码的几种方法","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"Spring","slug":"Spring","count":4,"path":"api/categories/Spring.json"},{"name":"JAVA","slug":"Spring/JAVA","count":4,"path":"api/categories/Spring/JAVA.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"小结","slug":"小结","count":1,"path":"api/tags/小结.json"},{"name":"PostConstruct","slug":"PostConstruct","count":1,"path":"api/tags/PostConstruct.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}