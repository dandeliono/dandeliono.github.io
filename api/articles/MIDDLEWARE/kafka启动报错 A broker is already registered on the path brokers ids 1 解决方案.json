{"title":"kafka启动报错 A broker is already registered on the path brokers ids 1 解决方案","uid":"e618b0a0a36dd4779e822db97f59bf1f","slug":"MIDDLEWARE/kafka启动报错 A broker is already registered on the path brokers ids 1 解决方案","date":"2021-08-31T15:48:56.000Z","updated":"2025-09-30T03:26:53.221Z","comments":true,"path":"api/articles/MIDDLEWARE/kafka启动报错 A broker is already registered on the path brokers ids 1 解决方案.json","keywords":"XuGuangSheng","cover":"/covers/kafka-a-broker-is-already-registered-on-the-path-brokers-ids-1.jpg","content":"<h1 id=\"kafka启动报错”A-broker-is-already-registered-on-the-path-x2F-brokers-x2F-ids-x2F-1”解决方案\"><a href=\"#kafka启动报错”A-broker-is-already-registered-on-the-path-x2F-brokers-x2F-ids-x2F-1”解决方案\" class=\"headerlink\" title=\"kafka启动报错”A broker is already registered on the path &#x2F;brokers&#x2F;ids&#x2F;1”解决方案\"></a>kafka启动报错”A broker is already registered on the path &#x2F;brokers&#x2F;ids&#x2F;1”解决方案</h1><h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题#\"></a>问题<a href=\"#%E9%97%AE%E9%A2%98\">#</a></h2><p>kafka 挂掉后，启动报错日志如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[2020-03-19 17:50:58,123] FATAL Fatal error during KafkaServerStartable startup. Prepare to shutdown (kafka.server.KafkaServerStartable)</span><br><span class=\"line\">java.lang.RuntimeException: A broker is already registered on the path /brokers/ids/1. This probably indicates that you either have configured a brokerid that is already in use, or else you have shutdown this broker and restarted it faster than the zookeeper timeout so it appears to be re-registering.</span><br><span class=\"line\">        at kafka.utils.ZkUtils.registerBrokerInZk(ZkUtils.scala:408)</span><br><span class=\"line\">        at kafka.utils.ZkUtils.registerBrokerInZk(ZkUtils.scala:394)</span><br><span class=\"line\">        at kafka.server.KafkaHealthcheck.register(KafkaHealthcheck.scala:71)</span><br><span class=\"line\">        at kafka.server.KafkaHealthcheck.startup(KafkaHealthcheck.scala:51)</span><br><span class=\"line\">        at kafka.server.KafkaServer.startup(KafkaServer.scala:269)</span><br><span class=\"line\">        at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)</span><br><span class=\"line\">        at kafka.Kafka$.main(Kafka.scala:67)</span><br><span class=\"line\">        at kafka.Kafka.main(Kafka.scala)</span><br><span class=\"line\">[2020-03-19 17:50:58,123] INFO [Kafka Server 1], shutting down (kafka.server.KafkaServer)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析#\"></a>分析<a href=\"#%E5%88%86%E6%9E%90\">#</a></h2><p>从<code>This probably indicates that you either have configured a brokerid that is already in use</code>提示可知，zookeeper 中可能已经注册了此 broker id，正常情况下，你应该不会启动两个相同 broker id 的 kafka server(除非你没注意弄错了使得两个 kafka server 用了相同的 broker id)</p>\n<p>于是我用<code>$KAFKA</code>安装包下带有的<code>zookeeper</code> client 连接了 zk server，看一下 kafka broker 的注册情况</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$KAFKA/bin/zookeeper-shell.sh 192.168.0.1:2181 ls /brokers/ids</span><br></pre></td></tr></table></figure>\n\n<p>执行后显示</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Connecting to 192.168.0.1:2181</span><br><span class=\"line\"></span><br><span class=\"line\">WATCHER::</span><br><span class=\"line\"></span><br><span class=\"line\">WatchedEvent state:SyncConnected type:None path:null</span><br><span class=\"line\">[1, 2, 3]</span><br></pre></td></tr></table></figure>\n\n<p>然而实际情况是，broker id 为 1 的 kafka server 并没有启动起来。原因是这台机器之前因为卡死被<code>物理重启</code>，kafka broker 没有正常下线，zk 上还保留着它的 broker id。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案#\"></a>解决方案<a href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\">#</a></h2><p>找到原因后，解决就很简单了，把注册在<code>zookeeper</code>上的这个 broker id <code>delete</code>掉就行了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$KAFKA/bin/zookeeper-shell.sh 192.168.0.1:2181 delete  /brokers/ids/1</span><br></pre></td></tr></table></figure>\n\n<p>然后再启动观察日志就正常了。<br> <a href=\"https://www.cnblogs.com/bytesfly/p/12527596.html\">https://www.cnblogs.com/bytesfly/p/12527596.html</a></p>\n","text":"kafka启动报错”A broker is already registered on the path /brokers/ids/1”解决方案问题#kafka...","permalink":"/post/MIDDLEWARE/kafka启动报错 A broker is already registered on the path brokers ids 1 解决方案","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"broker","slug":"broker","count":1,"path":"api/categories/broker.json"},{"name":"MIDDLEWARE","slug":"broker/MIDDLEWARE","count":1,"path":"api/categories/broker/MIDDLEWARE.json"}],"tags":[{"name":"server","slug":"server","count":3,"path":"api/tags/server.json"},{"name":"kafka","slug":"kafka","count":1,"path":"api/tags/kafka.json"},{"name":"解决方案","slug":"解决方案","count":1,"path":"api/tags/解决方案.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#kafka%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E2%80%9DA-broker-is-already-registered-on-the-path-x2F-brokers-x2F-ids-x2F-1%E2%80%9D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">kafka启动报错”A broker is already registered on the path &#x2F;brokers&#x2F;ids&#x2F;1”解决方案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%9E%90\"><span class=\"toc-text\">分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">解决方案</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"为什么 TCP 协议有 TIME_WAIT 状态","uid":"b7ecf3954ed2a73caa330011a27b5abb","slug":"JAVA/为什么 TCP 协议有 TIME_WAIT 状态","date":"2021-08-31T17:36:55.000Z","updated":"2025-09-30T03:26:24.076Z","comments":true,"path":"api/articles/JAVA/为什么 TCP 协议有 TIME_WAIT 状态.json","keywords":"XuGuangSheng","cover":"/covers/tcp-time-wait.jpg","text":"为什么 TCP 协议有 TIME_WAIT 状态 为什么这么设计（Why’s THE Design）是一系列关于计算机领域中程序设计决策的文章，我们在这个系列的...","permalink":"/post/JAVA/为什么 TCP 协议有 TIME_WAIT 状态","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"TCP","slug":"TCP","count":3,"path":"api/categories/TCP.json"},{"name":"JAVA","slug":"TCP/JAVA","count":1,"path":"api/categories/TCP/JAVA.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"WAIT","slug":"WAIT","count":1,"path":"api/tags/WAIT.json"},{"name":"TIME","slug":"TIME","count":1,"path":"api/tags/TIME.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Linux 设置开机启动项的几种方法","uid":"2f5dd4c8f4fc8dc651e872f7c4bd5927","slug":"LINUX/Linux 设置开机启动项的几种方法","date":"2021-08-30T15:35:09.000Z","updated":"2025-09-30T03:26:34.059Z","comments":true,"path":"api/articles/LINUX/Linux 设置开机启动项的几种方法.json","keywords":"XuGuangSheng","cover":"/covers/linux.jpg","text":"Linux 设置开机启动项的几种方法方法一：编辑 rc.loacl 脚本Ubuntu 开机之后会执行 / etc/rc.local 文件中的脚本。 所以我们可以...","permalink":"/post/LINUX/Linux 设置开机启动项的几种方法","photos":[],"count_time":{"symbolsCount":499,"symbolsTime":"1 mins."},"categories":[{"name":"etc","slug":"etc","count":2,"path":"api/categories/etc.json"},{"name":"LINUX","slug":"etc/LINUX","count":2,"path":"api/categories/etc/LINUX.json"}],"tags":[{"name":"local","slug":"local","count":1,"path":"api/tags/local.json"},{"name":"Linux","slug":"Linux","count":2,"path":"api/tags/Linux.json"},{"name":"设置开机启动项的几种方法","slug":"设置开机启动项的几种方法","count":1,"path":"api/tags/设置开机启动项的几种方法.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}