{"title":"Elasticsearch中如何进行日期(数值)范围查询","uid":"4bd9e9434ed4ab6b72d76312de1a0204","slug":"MIDDLEWARE/Elasticsearch中如何进行日期(数值)范围查询","date":"2024-01-09T13:56:38.000Z","updated":"2025-09-30T03:26:45.854Z","comments":true,"path":"api/articles/MIDDLEWARE/Elasticsearch中如何进行日期(数值)范围查询.json","keywords":"XuGuangSheng","cover":"/covers/elasticsearch.jpg","content":"<h1 id=\"Elasticsearch中如何进行日期-数值-范围查询\"><a href=\"#Elasticsearch中如何进行日期-数值-范围查询\" class=\"headerlink\" title=\"Elasticsearch中如何进行日期(数值)范围查询\"></a>Elasticsearch中如何进行日期(数值)范围查询</h1><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>gte</td>\n<td>greater-than or equal to, 大于或等于</td>\n</tr>\n<tr>\n<td>gt</td>\n<td>greater-than, 大于</td>\n</tr>\n<tr>\n<td>lte</td>\n<td>less-than or equal to, 小于或等于</td>\n</tr>\n<tr>\n<td>lt</td>\n<td>less-than, 小于</td>\n</tr>\n</tbody></table>\n<p>需求: 查询商品中<code>40 &lt;= price &lt;= 80</code>的文档:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET book_shop/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;query&quot;: &#123;</span><br><span class=\"line\">        &quot;range&quot;: &#123;</span><br><span class=\"line\">            &quot;price&quot;: &#123;</span><br><span class=\"line\">                &quot;gte&quot;: 40,</span><br><span class=\"line\">                &quot;lte&quot;: 80,</span><br><span class=\"line\">                &quot;boost&quot;: 2.0\t</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-1-简单查询示例\"><a href=\"#3-1-简单查询示例\" class=\"headerlink\" title=\"3.1 简单查询示例\"></a>3.1 简单查询示例</h2><p>需求: 查询网站中最近一天发布的博客:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET website/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;query&quot;: &#123;</span><br><span class=\"line\">        &quot;range&quot;: &#123;</span><br><span class=\"line\">            &quot;post_date&quot;: &#123;</span><br><span class=\"line\">            \t&quot;gte&quot;: &quot;now-1d/d&quot;,\t</span><br><span class=\"line\">            \t&quot;lt&quot;:  &quot;now/d&quot;\t\t</span><br><span class=\"line\">        \t&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-2-关于时间的数学表达式-date-math\"><a href=\"#3-2-关于时间的数学表达式-date-math\" class=\"headerlink\" title=\"3.2 关于时间的数学表达式(date-math)\"></a>3.2 关于时间的数学表达式(date-math)</h2><p>Elasticsearch中时间可以表示为<code>now</code>, 也就是系统当前时间, 也可以是以<code>||</code>结尾的日期字符串表示.</p>\n<p>在日期之后, 可以选择一个或多个数学表达式:</p>\n<ul>\n<li><code>+1h</code> —— 加1小时;</li>\n<li><code>-1d</code> —— 减1天;</li>\n<li><code>/d</code> —— 四舍五入到最近的一天.</li>\n</ul>\n<p>下面是Elasticsearch支持数学表达式的时间单位:</p>\n<table>\n<thead>\n<tr>\n<th>表达式</th>\n<th>含义</th>\n<th>表达式</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>y</code></td>\n<td>年</td>\n<td><code>M</code></td>\n<td>月</td>\n</tr>\n<tr>\n<td><code>w</code></td>\n<td>星期</td>\n<td><code>d</code></td>\n<td>天</td>\n</tr>\n<tr>\n<td><code>h</code></td>\n<td>小时</td>\n<td><code>H</code></td>\n<td>小时</td>\n</tr>\n<tr>\n<td><code>m</code></td>\n<td>分钟</td>\n<td><code>s</code></td>\n<td>秒</td>\n</tr>\n</tbody></table>\n<p>说明: 假设系统当前时间<code>now = 2018-10-01 12:00:00</code> :</p>\n<ul>\n<li><code>now+1h</code>: now的毫秒值 + 1小时, 结果是: <code>2018-10-01 13:00:00</code>.</li>\n<li><code>now-1h</code>: now的毫秒值 - 1小时, 结果是: <code>2018-10-01 11:00:00</code>.</li>\n<li><code>now-1h/d</code>: now的毫秒值 - 1小时, 然后四舍五入到最近的一天的起始, 结果是: <code>2018-10-01 00:00:00</code>.</li>\n<li><code>2018.10.01||+1M/d</code>: <code>2018-10-01</code>的毫秒值 + 1月, 再四舍五入到最近一天的起始, 结果是: <code>2018-11-01 00:00:00</code>.</li>\n</ul>\n<h2 id=\"3-3-关于时间的四舍五入\"><a href=\"#3-3-关于时间的四舍五入\" class=\"headerlink\" title=\"3.3 关于时间的四舍五入\"></a>3.3 关于时间的四舍五入</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>对日期中的日、月、小时等 进行四舍五入时, 取决于范围的结尾是包含(include)还是排除(exclude).</p>\n<p>向上舍入: 移动到舍入范围的最后一毫秒;</p>\n<p>向下舍入: 一定到舍入范围的第一毫秒.</p></blockquote>\n<p>举例说明:</p>\n<p>① “gt”: “2018-12-18||&#x2F;M” —— 大于日期, 需要向上舍入, 结果是<code>2018-12-31T23:59:59.999</code>, 也就是不包含整个12月.</p>\n<p>② “gte”: “2018-12-18||&#x2F;M” —— 大于或等于日期, 需要向下舍入, 结果是 <code>2018-12-01</code>, 也就是包含整个12月.</p>\n<p>③ “lt”: “2018-12-18||&#x2F;M” —— 小于日期, 需要向上舍入, 结果是<code>2018-12-01</code>, 也就是不包含整个12月.</p>\n<p>④ “lte”: “2018-12-18||&#x2F;M” —— 小于或等于日期, 需要向下舍入, 结果是<code>2018-12-31T23:59:59.999</code>, 也就是包含整个12月.</p>\n<p>格式化日期查询时, 将默认使用日期field中指定的格式进行解析, 当然也可以通过format参数来覆盖默认配置.</p>\n<p>示例:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET website/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;query&quot;: &#123;</span><br><span class=\"line\">        &quot;range&quot;: &#123;</span><br><span class=\"line\">            &quot;post_date&quot;: &#123;</span><br><span class=\"line\">                &quot;gte&quot;: &quot;2/1/2018&quot;, </span><br><span class=\"line\">                &quot;lte&quot;: &quot;2019&quot;,</span><br><span class=\"line\">                &quot;format&quot;: &quot;dd/MM/yyyy||yyyy&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>注意: 如果日期中缺失了部分年、月、日, 缺失的部分将被填充为unix系统的初始值, 也就是1970年1月1日.</p>\n<p>比如, 将<code>dd</code>指定为format, 像<code>&quot;gte&quot;: 10</code>将转换为<code>1970-01-10T00:00:00.000Z</code>.</p>\n<p>如果日期field的格式允许, 也可以通过在日期值本身中指定时区, 从而将日期从另一个时区的时间转换为UTC时间, 或者为其指定特定的<code>time_zone</code>参数.</p>\n<p>示例:</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">GET</span> website/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;range&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;post_date&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;gte&quot;</span>: <span class=\"string\">&quot;2018-01-01 00:00:00&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;lte&quot;</span>: <span class=\"string\">&quot;now&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;format&quot;</span>: <span class=\"string\">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;time_zone&quot;</span>: <span class=\"string\">&quot;+1:00&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>ES中的日期类型必须按照UTC时间格式存储, 所以, 上述的<code>2018-01-01 00:00:00</code>将被转换为<code>2017-12-31T23:00:00 UTC</code>.</p>\n<p><strong>另外需要注意的是, <code>now</code>是不受<code>time_zone</code>影响的.</strong></p>\n","text":"Elasticsearch中如何进行日期(数值)范围查询 符号 含义 gte greater-than or equal to, 大于或等于 gt greate...","permalink":"/post/MIDDLEWARE/Elasticsearch中如何进行日期(数值)范围查询","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"now","slug":"now","count":1,"path":"api/categories/now.json"},{"name":"MIDDLEWARE","slug":"now/MIDDLEWARE","count":1,"path":"api/categories/now/MIDDLEWARE.json"}],"tags":[{"name":"结果是","slug":"结果是","count":1,"path":"api/tags/结果是.json"},{"name":"小时","slug":"小时","count":1,"path":"api/tags/小时.json"},{"name":"than","slug":"than","count":1,"path":"api/tags/than.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Elasticsearch%E4%B8%AD%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%97%A5%E6%9C%9F-%E6%95%B0%E5%80%BC-%E8%8C%83%E5%9B%B4%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">Elasticsearch中如何进行日期(数值)范围查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">3.1 简单查询示例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E5%85%B3%E4%BA%8E%E6%97%B6%E9%97%B4%E7%9A%84%E6%95%B0%E5%AD%A6%E8%A1%A8%E8%BE%BE%E5%BC%8F-date-math\"><span class=\"toc-text\">3.2 关于时间的数学表达式(date-math)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-%E5%85%B3%E4%BA%8E%E6%97%B6%E9%97%B4%E7%9A%84%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5\"><span class=\"toc-text\">3.3 关于时间的四舍五入</span></a></li></ol></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"linux TOP命令各参数详解","uid":"c4719cbd659f86d7d7d8c9fcfcd72c3e","slug":"LINUX/linux TOP命令各参数详解","date":"2024-01-18T11:57:19.000Z","updated":"2025-09-30T03:26:37.658Z","comments":true,"path":"api/articles/LINUX/linux TOP命令各参数详解.json","keywords":"XuGuangSheng","cover":"/covers/linux-top.jpg","text":"linux TOP命令各参数详解[toc] TOP是一个动态显示过程,即可以通过用户按键来不断刷新当前状态.如果在前台执行该命令,它将独占前台,直到用户终止该程...","permalink":"/post/LINUX/linux TOP命令各参数详解","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"CPU","slug":"CPU","count":5,"path":"api/categories/CPU.json"},{"name":"LINUX","slug":"CPU/LINUX","count":4,"path":"api/categories/CPU/LINUX.json"}],"tags":[{"name":"top","slug":"top","count":1,"path":"api/tags/top.json"},{"name":"单位","slug":"单位","count":1,"path":"api/tags/单位.json"},{"name":"total","slug":"total","count":2,"path":"api/tags/total.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"ElasticSearch里面如何分组后根据sum值排序","uid":"4483f94e0db17009da0543d6cde026da","slug":"MIDDLEWARE/ElasticSearch里面如何分组后根据sum值排序","date":"2024-01-09T13:55:15.000Z","updated":"2025-09-30T03:26:45.365Z","comments":true,"path":"api/articles/MIDDLEWARE/ElasticSearch里面如何分组后根据sum值排序.json","keywords":"XuGuangSheng","cover":"/covers/elasticsearchsum.jpg","text":"ElasticSearch里面如何分组后根据sum值排序ElasticSearch里面的聚合机制非常灵活和强大，今天我们来看下如何在ElasticSearch里...","permalink":"/post/MIDDLEWARE/ElasticSearch里面如何分组后根据sum值排序","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"ElasticSearch","slug":"ElasticSearch","count":1,"path":"api/categories/ElasticSearch.json"},{"name":"MIDDLEWARE","slug":"ElasticSearch/MIDDLEWARE","count":1,"path":"api/categories/ElasticSearch/MIDDLEWARE.json"}],"tags":[{"name":"sum","slug":"sum","count":1,"path":"api/tags/sum.json"},{"name":"然后","slug":"然后","count":1,"path":"api/tags/然后.json"},{"name":"里面如何分组后根据","slug":"里面如何分组后根据","count":1,"path":"api/tags/里面如何分组后根据.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}