{"title":"清除信号量队列导致zabbix自动关闭","uid":"262f61f15e8ffbc737e54526fd907a92","slug":"MIDDLEWARE/清除信号量队列导致zabbix自动关闭","date":"2025-04-24T11:26:42.000Z","updated":"2025-09-30T03:26:54.561Z","comments":true,"path":"api/articles/MIDDLEWARE/清除信号量队列导致zabbix自动关闭.json","keywords":"XuGuangSheng","cover":"/covers/zabbix.jpg","content":"<h1 id=\"清除信号量队列导致zabbix自动关闭\"><a href=\"#清除信号量队列导致zabbix自动关闭\" class=\"headerlink\" title=\"清除信号量队列导致zabbix自动关闭\"></a>清除信号量队列导致zabbix自动关闭</h1><p>前几天在海外UCloud机器上部署了一套zabbix proxy和zabbix agentd，可是第二天一大早就收到邮件说zabbix_proxy挂掉了，上去查一下发现两台机器中的一台的proxy和agentd都挂了，而另一台没事，再查一下log日志：</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p>zabbix_agentd [12977]: [file:’cpustat.c’,line:235] lock failed: [22] Invalid argument 12976:20150305:022001.966 One child process died (PID:12977,exitcode&#x2F;signal:255). Exiting … 12976:20150305:022003.967 Zabbix Agent stopped. Zabbix 2.0.13 (revision 48919).</p>\n<p>zabbix_proxy [12970]: [file:’selfmon.c’,line:341] lock failed: [22] Invalid argument<br>zabbix_proxy [12972]: [file:’selfmon.c’,line:341] lock failed: [22] Invalid argument<br>zabbix_proxy [12973]: [file:’selfmon.c’,line:341] lock failed: [22] Invalid argument 12951:20150305:022001.362 One child process died (PID:12970,exitcode&#x2F;signal:255). Exiting … 12951:20150305:022003.365 syncing history data…<br>zabbix_proxy [12951]: [file:’dbcache.c’,line:2196] lock failed: [22] Invalid argument</p>\n<p><img src=\"https://assets.cnblogs.com/images/copycode.gif\"></p>\n<p> 第一感觉就是crontab跑了一个什么脚本，删除了啥东西导致的，果不其然，的确是删除了信号量导致的（关于信号量的介绍参看大牛博客 <a href=\"http://www.cnblogs.com/rootq/articles/1339475.html\">ipcs介绍</a> ），删除脚本如下：</p>\n<p>#!&#x2F;bin&#x2F;sh<br>for semid in `ipcs -s | cut -f2 -d” “` do ipcrm -s $semid done</p>\n<p>这么粗暴的删除，不出事才怪呢，加个删除条件：</p>\n<p>#!&#x2F;bin&#x2F;sh<br>for semid in `ipcs -s | grep -v zabbix | cut -f2 -d” “` do ipcrm -s $semid done</p>\n<p>再跑一下脚本，没问题啦 ^_^</p>\n","text":"清除信号量队列导致zabbix自动关闭前几天在海外UCloud机器上部署了一套zabbix proxy和zabbix agentd，可是第二天一大早就收到邮件说...","permalink":"/post/MIDDLEWARE/清除信号量队列导致zabbix自动关闭","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"zabbix","slug":"zabbix","count":1,"path":"api/categories/zabbix.json"},{"name":"MIDDLEWARE","slug":"zabbix/MIDDLEWARE","count":1,"path":"api/categories/zabbix/MIDDLEWARE.json"}],"tags":[{"name":"proxy","slug":"proxy","count":1,"path":"api/tags/proxy.json"},{"name":"file","slug":"file","count":1,"path":"api/tags/file.json"},{"name":"line","slug":"line","count":1,"path":"api/tags/line.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%B8%85%E9%99%A4%E4%BF%A1%E5%8F%B7%E9%87%8F%E9%98%9F%E5%88%97%E5%AF%BC%E8%87%B4zabbix%E8%87%AA%E5%8A%A8%E5%85%B3%E9%97%AD\"><span class=\"toc-text\">清除信号量队列导致zabbix自动关闭</span></a></li></ol>","author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"延迟双删如此好用，为何大厂从来不用Cache-aside下数据变更推荐使用删除缓存的策略，为降低数据不一致通常会配合延迟","uid":"9cd0d8d4260de5985eda82c0c9a4fe26","slug":"ALG/延迟双删如此好用，为何大厂从来不用Cache-aside下数据变更推荐使用删除缓存的策略，为降低数据不一致通常会配合延迟","date":"2025-05-23T15:23:11.000Z","updated":"2025-09-30T03:26:02.883Z","comments":true,"path":"api/articles/ALG/延迟双删如此好用，为何大厂从来不用Cache-aside下数据变更推荐使用删除缓存的策略，为降低数据不一致通常会配合延迟.json","keywords":"XuGuangSheng","cover":"/covers/cache-aside.jpg","text":"延迟双删如此好用，为何大厂从来不用Cache-aside下数据变更推荐使用删除缓存的策略，为降低数据不一致通常会配合延迟摘要： 在绝大多数介绍缓存与数据库一致性...","permalink":"/post/ALG/延迟双删如此好用，为何大厂从来不用Cache-aside下数据变更推荐使用删除缓存的策略，为降低数据不一致通常会配合延迟","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"https","slug":"https","count":12,"path":"api/categories/https.json"},{"name":"ALG","slug":"https/ALG","count":1,"path":"api/categories/https/ALG.json"}],"tags":[{"name":"com","slug":"com","count":26,"path":"api/tags/com.json"},{"name":"Redis","slug":"Redis","count":3,"path":"api/tags/Redis.json"},{"name":"design","slug":"design","count":1,"path":"api/tags/design.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Kafka常用命令及遇到的问题","uid":"0bc98c01f2602afec20cfdc03ed2e502","slug":"MIDDLEWARE/Kafka常用命令及遇到的问题","date":"2024-12-07T16:14:25.000Z","updated":"2025-09-30T03:26:47.967Z","comments":true,"path":"api/articles/MIDDLEWARE/Kafka常用命令及遇到的问题.json","keywords":"XuGuangSheng","cover":"/covers/kafka.jpg","text":"Kafka常用命令及遇到的问题Kafka常用命令及可能遇到的问题： 启动Kafka代理服务器 命令：bin/kafka-server-start.sh conf...","permalink":"/post/MIDDLEWARE/Kafka常用命令及遇到的问题","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"Kafka","slug":"Kafka","count":1,"path":"api/categories/Kafka.json"},{"name":"MIDDLEWARE","slug":"Kafka/MIDDLEWARE","count":1,"path":"api/categories/Kafka/MIDDLEWARE.json"}],"tags":[{"name":"topic","slug":"topic","count":2,"path":"api/tags/topic.json"},{"name":"命令","slug":"命令","count":1,"path":"api/tags/命令.json"},{"name":"问题","slug":"问题","count":1,"path":"api/tags/问题.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}