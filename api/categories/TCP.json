{"name":"TCP","slug":"TCP","count":3,"postlist":[{"title":"tcpdump在启用TCP卸载功能的网卡上报告 checksum error ·","uid":"1bb022f0a90cc114ad2400e87144dac4","slug":"LINUX/tcpdump在启用TCP卸载功能的网卡上报告 checksum error ·","date":"2023-06-08T12:39:56.000Z","updated":"2025-09-30T03:26:39.106Z","comments":true,"path":"api/articles/LINUX/tcpdump在启用TCP卸载功能的网卡上报告 checksum error ·.json","keywords":"XuGuangSheng","cover":"/covers/tcpdumptcp-checksum-error.jpg","text":"tcpdump在启用TCP卸载功能的网卡上报告”checksum error” ·在使用tcpdump对网卡进行抓包的时，很多时候会发现有cksum incor...","permalink":"/post/LINUX/tcpdump在启用TCP卸载功能的网卡上报告 checksum error ·","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"TCP","slug":"TCP","count":3,"path":"api/categories/TCP.json"},{"name":"LINUX","slug":"TCP/LINUX","count":1,"path":"api/categories/TCP/LINUX.json"}],"tags":[{"name":"checksum","slug":"checksum","count":1,"path":"api/tags/checksum.json"},{"name":"offloading","slug":"offloading","count":1,"path":"api/tags/offloading.json"},{"name":"offload","slug":"offload","count":1,"path":"api/tags/offload.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"30张图解： TCP 重传、滑动窗口、流量控制、拥塞控制","uid":"5216b5eeb1a6215d7622123c3d5153cb","slug":"NETWORK/30张图解： TCP 重传、滑动窗口、流量控制、拥塞控制","date":"2022-09-29T15:46:08.000Z","updated":"2025-09-30T03:26:55.085Z","comments":true,"path":"api/articles/NETWORK/30张图解： TCP 重传、滑动窗口、流量控制、拥塞控制.json","keywords":"XuGuangSheng","cover":"/covers/30-tcp.jpg","text":"30张图解： TCP 重传、滑动窗口、流量控制、拥塞控制相信大家都知道 TCP 是一个可靠传输的协议，那它是如何保证可靠的呢？ 为了实现可靠性传输，需要考虑很多...","permalink":"/post/NETWORK/30张图解： TCP 重传、滑动窗口、流量控制、拥塞控制","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"TCP","slug":"TCP","count":3,"path":"api/categories/TCP.json"},{"name":"NETWORK","slug":"TCP/NETWORK","count":1,"path":"api/categories/TCP/NETWORK.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"ACK","slug":"ACK","count":2,"path":"api/tags/ACK.json"},{"name":"cwnd","slug":"cwnd","count":1,"path":"api/tags/cwnd.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"为什么 TCP 协议有 TIME_WAIT 状态","uid":"b7ecf3954ed2a73caa330011a27b5abb","slug":"JAVA/为什么 TCP 协议有 TIME_WAIT 状态","date":"2021-08-31T17:36:55.000Z","updated":"2025-09-30T03:26:24.076Z","comments":true,"path":"api/articles/JAVA/为什么 TCP 协议有 TIME_WAIT 状态.json","keywords":"XuGuangSheng","cover":"/covers/tcp-time-wait.jpg","text":"为什么 TCP 协议有 TIME_WAIT 状态 为什么这么设计（Why’s THE Design）是一系列关于计算机领域中程序设计决策的文章，我们在这个系列的...","permalink":"/post/JAVA/为什么 TCP 协议有 TIME_WAIT 状态","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"TCP","slug":"TCP","count":3,"path":"api/categories/TCP.json"},{"name":"JAVA","slug":"TCP/JAVA","count":1,"path":"api/categories/TCP/JAVA.json"}],"tags":[{"name":"https","slug":"https","count":44,"path":"api/tags/https.json"},{"name":"WAIT","slug":"WAIT","count":1,"path":"api/tags/WAIT.json"},{"name":"TIME","slug":"TIME","count":1,"path":"api/tags/TIME.json"}],"author":{"name":"dandeliono","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/29496357","link":"/","description":"永远相信美好的事情即将发生","socials":{"github":"https://github.com/dandeliono","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}